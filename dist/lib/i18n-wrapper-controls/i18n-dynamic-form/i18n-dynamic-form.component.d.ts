import { EventEmitter, AfterViewInit, ChangeDetectorRef, OnDestroy, SimpleChanges, OnChanges } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Subscription } from 'rxjs';
import { FormConfig, FormularioService, FormConfigTypes } from 'sof-ng-controls';
import { i18nFormFieldsConfig } from './DynamicFormConfig';
import * as i0 from "@angular/core";
export declare class I18nDynamicFormComponent implements AfterViewInit, OnDestroy, OnChanges {
    private cdRef;
    private fs;
    cols: number;
    enum: typeof FormConfigTypes;
    valueChanges: Subscription;
    gutterSize: string;
    rowHeight: string;
    fields: i18nFormFieldsConfig[];
    FieldsValues: any;
    submitEvent: EventEmitter<any>;
    onChangeEvent: EventEmitter<any>;
    formConfig: FormConfig;
    forma: FormGroup;
    constructor(cdRef: ChangeDetectorRef, fs: FormularioService);
    get FormValues(): any;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private SetValues;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    OnSubmit(): void;
    getRowHeight(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<I18nDynamicFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<I18nDynamicFormComponent, "lib-i18n-dynamic-form", never, { "cols": "cols"; "gutterSize": "gutterSize"; "rowHeight": "rowHeight"; "fields": "fields"; "FieldsValues": "FieldsValues"; "formConfig": "formConfig"; }, { "submitEvent": "submitEvent"; "onChangeEvent": "onChangeEvent"; }, never, never>;
}
