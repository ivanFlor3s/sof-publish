import { Validators } from "@angular/forms";
export class NumberValidators {
    static min(minValue, customMessage) {
        return (control) => {
            if (!!Validators.min(minValue)(control))
                return { min: { min: minValue, customMessage } };
            return null;
        };
    }
    static max(maxValue, customMessage) {
        return (control) => {
            if (!!Validators.max(maxValue)(control))
                return { max: { max: maxValue, customMessage } };
            return null;
        };
    }
    static lessOrEqualTo(formFieldName, customMessage) {
        return (control) => {
            const formField = control?.parent?.get(formFieldName);
            if (!!formField && !!formField.value && !!Validators.max(formField.value)(control))
                return { lessOrEqualTo: { lessOrEqualTo: formField.value, customMessage } };
            return null;
        };
    }
    static moreOrEqualTo(formFieldName, customMessage) {
        return (control) => {
            const formField = control?.parent?.get(formFieldName);
            if (!!formField && !!formField.value && !!Validators.min(formField.value)(control))
                return { moreOrEqualTo: { moreOrEqualTo: formField.value, customMessage } };
            return null;
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLXZhbGlkYXRvcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL3ZhbGlkYXRpb25zL251bWJlci12YWxpZGF0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0MsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUE7QUFFekUsTUFBTSxPQUFPLGdCQUFnQjtJQUUzQixNQUFNLENBQUMsR0FBRyxDQUFDLFFBQWdCLEVBQUUsYUFBc0I7UUFDakQsT0FBTyxDQUFDLE9BQXdCLEVBQUUsRUFBRTtZQUNsQyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDckMsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFLEVBQUMsQ0FBQztZQUNsRCxPQUFPLElBQUksQ0FBQztRQUNkLENBQUMsQ0FBQTtJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQWdCLEVBQUUsYUFBc0I7UUFDakQsT0FBTyxDQUFDLE9BQXdCLEVBQUUsRUFBRTtZQUNsQyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDckMsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFLEVBQUMsQ0FBQztZQUNsRCxPQUFPLElBQUksQ0FBQztRQUNkLENBQUMsQ0FBQTtJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsYUFBYSxDQUFDLGFBQXFCLEVBQUUsYUFBc0I7UUFDaEUsT0FBTyxDQUFDLE9BQXdCLEVBQUUsRUFBRTtZQUNsQyxNQUFNLFNBQVMsR0FBRyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQztnQkFDaEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxFQUFFLGFBQWEsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRSxFQUFDLENBQUM7WUFDN0UsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUE7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxhQUFxQixFQUFFLGFBQXNCO1FBQ2hFLE9BQU8sQ0FBQyxPQUF3QixFQUFFLEVBQUU7WUFDbEMsTUFBTSxTQUFTLEdBQUcsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdEQsSUFBSSxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUM7Z0JBQ2hGLE9BQU8sRUFBRSxhQUFhLEVBQUUsRUFBRSxhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUUsRUFBQyxDQUFDO1lBQzdFLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFBO0lBQ0gsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0b3JGbiwgVmFsaWRhdG9ycyB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiXHJcblxyXG5leHBvcnQgY2xhc3MgTnVtYmVyVmFsaWRhdG9ycyB7XHJcblxyXG4gIHN0YXRpYyBtaW4obWluVmFsdWU6IG51bWJlciwgY3VzdG9tTWVzc2FnZT86IHN0cmluZyk6IFZhbGlkYXRvckZuIHtcclxuICAgIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKSA9PiB7XHJcbiAgICAgIGlmICghIVZhbGlkYXRvcnMubWluKG1pblZhbHVlKShjb250cm9sKSlcclxuICAgICAgICByZXR1cm4geyBtaW46IHsgbWluOiBtaW5WYWx1ZSwgY3VzdG9tTWVzc2FnZSB9fTsgXHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBzdGF0aWMgbWF4KG1heFZhbHVlOiBudW1iZXIsIGN1c3RvbU1lc3NhZ2U/OiBzdHJpbmcpOiBWYWxpZGF0b3JGbiB7XHJcbiAgICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkgPT4ge1xyXG4gICAgICBpZiAoISFWYWxpZGF0b3JzLm1heChtYXhWYWx1ZSkoY29udHJvbCkpXHJcbiAgICAgICAgcmV0dXJuIHsgbWF4OiB7IG1heDogbWF4VmFsdWUsIGN1c3RvbU1lc3NhZ2UgfX07IFxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgc3RhdGljIGxlc3NPckVxdWFsVG8oZm9ybUZpZWxkTmFtZTogc3RyaW5nLCBjdXN0b21NZXNzYWdlPzogc3RyaW5nKTogVmFsaWRhdG9yRm4ge1xyXG4gICAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpID0+IHtcclxuICAgICAgY29uc3QgZm9ybUZpZWxkID0gY29udHJvbD8ucGFyZW50Py5nZXQoZm9ybUZpZWxkTmFtZSk7XHJcbiAgICAgIGlmICghIWZvcm1GaWVsZCAmJiAhIWZvcm1GaWVsZC52YWx1ZSAmJiAhIVZhbGlkYXRvcnMubWF4KGZvcm1GaWVsZC52YWx1ZSkoY29udHJvbCkpXHJcbiAgICAgICAgcmV0dXJuIHsgbGVzc09yRXF1YWxUbzogeyBsZXNzT3JFcXVhbFRvOiBmb3JtRmllbGQudmFsdWUsIGN1c3RvbU1lc3NhZ2UgfX07IFxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgc3RhdGljIG1vcmVPckVxdWFsVG8oZm9ybUZpZWxkTmFtZTogc3RyaW5nLCBjdXN0b21NZXNzYWdlPzogc3RyaW5nKTogVmFsaWRhdG9yRm4ge1xyXG4gICAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpID0+IHtcclxuICAgICAgY29uc3QgZm9ybUZpZWxkID0gY29udHJvbD8ucGFyZW50Py5nZXQoZm9ybUZpZWxkTmFtZSk7XHJcbiAgICAgIGlmICghIWZvcm1GaWVsZCAmJiAhIWZvcm1GaWVsZC52YWx1ZSAmJiAhIVZhbGlkYXRvcnMubWluKGZvcm1GaWVsZC52YWx1ZSkoY29udHJvbCkpXHJcbiAgICAgICAgcmV0dXJuIHsgbW9yZU9yRXF1YWxUbzogeyBtb3JlT3JFcXVhbFRvOiBmb3JtRmllbGQudmFsdWUsIGN1c3RvbU1lc3NhZ2UgfX07IFxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==