{"version":3,"file":"sof-shared.mjs","sources":["../../../projects/sof-shared/src/lib/components/sof-dropdown/sof-dropdown.component.ts","../../../projects/sof-shared/src/lib/components/sof-dropdown/sof-dropdown.component.html","../../../projects/sof-shared/src/lib/configurations/keycloak-configurations.ts","../../../projects/sof-shared/src/lib/sof-shared.module.ts","../../../projects/sof-shared/src/lib/guards/auth.guard.ts","../../../projects/sof-shared/src/lib/services/keycloak-event.service.ts","../../../projects/sof-shared/src/public-api.ts","../../../projects/sof-shared/src/sof-shared.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport {animate,state,style,AUTO_STYLE,transition,trigger} from '@angular/animations'\r\n\r\nconst DEFAULT_DURATION = 300;\r\n\r\n\r\n@Component({\r\n  selector: 'sh-sof-dropdown',\r\n  templateUrl: './sof-dropdown.component.html',\r\n  styleUrls: ['./sof-dropdown.component.scss'],\r\n  animations:[\r\n    trigger('collapse',[\r\n      state('false',style({ height: AUTO_STYLE, visibility: AUTO_STYLE })),\r\n      state('true', style({ height: '0', visibility: 'hidden' })),\r\n      transition('false => true', animate(DEFAULT_DURATION + 'ms ease-in')),\r\n      transition('true => false', animate(DEFAULT_DURATION + 'ms ease-out'))\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class SofDropdownComponent implements OnInit {\r\n\r\n  /**\r\n   * El componente tiene un input ```collapsed``` que por default tiene el valor en ```false```\r\n      - collapsed en false, indica que el contenido no esta collapsado por lo que la primera vez que se muestre el componente se va a mostrar todo el contenido\r\n      - collapsed en true, se renderiza el componente con el contenido oculto\r\n   */\r\n  @Input() collapsed:boolean = false\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggleExpand(){\r\n    this.collapsed = !this.collapsed\r\n  }\r\n\r\n}\r\n","<div class=\"header-container\">\r\n  <a class=\"header-toggler\" (click)=\"toggleExpand()\">\r\n    <div class=\"drop-down-icon\">\r\n      <span class=\"material-icons\" [class.collapse-icon]=\"!collapsed\">\r\n        arrow_drop_down_circle\r\n      </span>\r\n    </div>\r\n    <ng-content select=\"[headerClickeable]\"></ng-content>\r\n  </a>\r\n  <ng-content select=\"[header]\"></ng-content>\r\n</div>\r\n\r\n<div class=\"content-collapsible\" \r\n    [@collapse]=\"collapsed\" \r\n     >\r\n  <ng-content select=\"[content]\"></ng-content>\r\n</div>\r\n","export class KeycloakConfigurations {\r\n    ip: string;\r\n    port: number;\r\n    realm: string;\r\n    clientId: string;\r\n}","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { KeycloakService } from 'keycloak-angular';\r\n\r\n//Componentes\r\nimport { SofDropdownComponent } from './components/sof-dropdown/sof-dropdown.component';\r\nimport { KeycloakConfigurations } from './configurations/keycloak-configurations';\r\n\r\n// Configuracion Keycloak\r\nfunction initializeKeycloak(keycloak: KeycloakService, configurations: KeycloakConfigurations) {\r\n  return () => {\r\n    keycloak.init({\r\n      config: {\r\n        url: `http://${configurations.ip}:${configurations.port}/auth`,\r\n        realm: configurations.realm,\r\n        clientId: configurations.clientId\r\n      },\r\n      initOptions: {\r\n        onLoad: 'check-sso',\r\n        silentCheckSsoRedirectUri:\r\n          window.location.origin + '/assets/silent-check-sso.html'\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SofDropdownComponent\r\n  ],\r\n  imports: [\r\n\r\n  ],\r\n  exports: [\r\n    SofDropdownComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeKeycloak,\r\n      multi: true,\r\n      deps: [KeycloakService, KeycloakConfigurations]\r\n    },\r\n    KeycloakService\r\n  ],\r\n})\r\nexport class SofSharedModule {\r\n  static forRoot(\r\n    keycloakConfigurations: KeycloakConfigurations\r\n  ): ModuleWithProviders<SofSharedModule> {\r\n    return {\r\n      ngModule: SofSharedModule,\r\n      providers: [\r\n        {\r\n          provide: KeycloakConfigurations,\r\n          useValue: keycloakConfigurations,\r\n        }\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Router,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard extends KeycloakAuthGuard {\r\n  constructor(\r\n    protected override readonly router: Router,\r\n    protected readonly keycloak: KeycloakService\r\n  ) {\r\n    super(router, keycloak);\r\n  }\r\n\r\n  public async isAccessAllowed(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Force the user to log in if currently unauthenticated.\r\n    if (!this.authenticated) {\r\n      await this.keycloak.login({\r\n        redirectUri: window.location.origin + state.url\r\n      });\r\n      return false;\r\n    } else\r\n      return true;\r\n\r\n    // // Get the roles required from the route.\r\n    // const requiredRoles = route.data.roles;\r\n\r\n    // // Allow the user to to proceed if no additional roles are required to access the route.\r\n    // if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\r\n    //   return true;\r\n    // }\r\n\r\n    // // Allow the user to proceed if all the required roles are present.\r\n    // return requiredRoles.every((role) => this.roles.includes(role));\r\n\r\n    // ToDo Capaz se podria implementar aca lo de permisos\r\n    //      O directamente en un guard por separado\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { KeycloakEvent, KeycloakEventType, KeycloakService } from 'keycloak-angular';\r\nimport { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class KeycloakEventService {\r\n\r\n    keyCloakEventSubject$: Subject<KeycloakEvent>;\r\n\r\n    constructor(private keycloakService: KeycloakService) {\r\n        this.keyCloakEventSubject$ = keycloakService.keycloakEvents$;\r\n\r\n        this.keyCloakEventSubject$.subscribe({\r\n            next: (e) => {\r\n                if (e.type == KeycloakEventType.OnTokenExpired) {\r\n                    keycloakService.updateToken(20);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    GetObservable(): Observable<KeycloakEvent> {\r\n        return this.keyCloakEventSubject$.asObservable();\r\n    }\r\n\r\n}\r\n","/*\r\n * Public API Surface of sof-shared\r\n */\r\n\r\nexport * from './lib/sof-shared.module';\r\n\r\nexport * from './lib/components'\r\n\r\nexport * from './lib/guards/auth.guard';\r\nexport * from './lib/configurations/keycloak-configurations';\r\nexport * from './lib/services/keycloak-event.service';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}