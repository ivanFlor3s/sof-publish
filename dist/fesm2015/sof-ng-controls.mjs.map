{"version":3,"file":"sof-ng-controls.mjs","sources":["../../../projects/controls/src/lib/controls.service.ts","../../../projects/controls/src/lib/controls.component.ts","../../../projects/controls/src/lib/validations/configuration/errors-configuration.ts","../../../projects/controls/src/lib/base/base-form-control/base-form-control.ts","../../../projects/controls/src/lib/base/text-control/text-control.component.ts","../../../projects/controls/src/lib/validations/configuration/default-error-messages.ts","../../../projects/controls/src/lib/base/error/error.component.ts","../../../projects/controls/src/lib/material-controls/error/error.component.ts","../../../projects/controls/src/lib/material-controls/error/error.component.html","../../../projects/controls/src/lib/material-controls/text-control/text-control-component.ts","../../../projects/controls/src/lib/material-controls/text-control/text-control-component.html","../../../projects/controls/src/lib/base/text-area-control/text-area-control.component.ts","../../../projects/controls/src/lib/material-controls/text-area-control/text-area-control-component.ts","../../../projects/controls/src/lib/material-controls/text-area-control/text-area-control-component.html","../../../projects/controls/src/lib/base/number-control/number-control.component.ts","../../../projects/controls/src/lib/material-controls/number-control/number-control-component.ts","../../../projects/controls/src/lib/material-controls/number-control/number-control-component.html","../../../projects/controls/src/lib/base/checkbox-control/checkbox-control.component.ts","../../../projects/controls/src/lib/material-controls/checkbox-control/checkbox-control-component.ts","../../../projects/controls/src/lib/material-controls/checkbox-control/checkbox-control-component.html","../../../projects/controls/src/lib/base/radio-button-control/radio-button-control.component.ts","../../../projects/controls/src/lib/material-controls/radio-button-control/radio-button-control-component.ts","../../../projects/controls/src/lib/material-controls/radio-button-control/radio-button-control-component.html","../../../projects/controls/src/lib/base/select-control/select-control.component.ts","../../../projects/controls/src/lib/material-controls/select-control/select-control-component.ts","../../../projects/controls/src/lib/material-controls/select-control/select-control-component.html","../../../projects/controls/src/lib/base/autocomplete-control/autocomplete-control.component.ts","../../../projects/controls/src/lib/material-controls/autocomplete-control/autocomplete-control-component.ts","../../../projects/controls/src/lib/material-controls/autocomplete-control/autocomplete-control-component.html","../../../projects/controls/src/lib/base/date-picker-control/date-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/date-picker-control/date-picker-control-component.ts","../../../projects/controls/src/lib/material-controls/date-picker-control/date-picker-control-component.html","../../../projects/controls/src/lib/base/time-picker-control/time-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/time-picker-control/time-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/time-picker-control/time-picker-control.component.html","../../../projects/controls/src/lib/base/file-upload-control/file-upload-control.component.ts","../../../projects/controls/src/lib/validations/data-validators.ts","../../../projects/controls/src/lib/validations/date-validators.ts","../../../projects/controls/src/lib/validations/file-validators.ts","../../../projects/controls/src/lib/validations/number-validators.ts","../../../projects/controls/src/lib/validations/required-validators.ts","../../../projects/controls/src/lib/validations/text-validators.ts","../../../projects/controls/src/lib/validations/validation-types.ts","../../../projects/controls/src/lib/validations/validations.module.ts","../../../projects/controls/src/lib/material-controls/file-upload-control/file-upload-control-component.ts","../../../projects/controls/src/lib/material-controls/file-upload-control/file-upload-control-component.html","../../../projects/controls/src/lib/base/phone-control/phone-control.ts","../../../projects/controls/src/lib/material-controls/phone-control/phone-control.component.ts","../../../projects/controls/src/lib/material-controls/phone-control/phone-control.component.html","../../../projects/controls/src/lib/base/password-control/password-control.component.ts","../../../projects/controls/src/lib/material-controls/password-control/password-control.component.ts","../../../projects/controls/src/lib/material-controls/password-control/password-control.component.html","../../../projects/controls/src/lib/material-controls/card/card-component.ts","../../../projects/controls/src/lib/material-controls/card/card-component.html","../../../projects/controls/src/lib/material-controls/search-box-control/search-box-control-component.ts","../../../projects/controls/src/lib/material-controls/search-box-control/search-box-control-component.html","../../../projects/controls/src/lib/material-controls/dense-text-control/dense-text-control-component.ts","../../../projects/controls/src/lib/material-controls/dense-text-control/dense-text-control-component.html","../../../projects/controls/src/lib/material-controls/doc-control/doc-control.component.ts","../../../projects/controls/src/lib/material-controls/doc-control/doc-control.component.html","../../../projects/controls/src/lib/material-controls/material-controls.module.ts","../../../projects/controls/src/lib/dynamic-form/enums/action-form-types.ts","../../../projects/controls/src/lib/dynamic-form/enums/form-config-types.ts","../../../projects/controls/src/lib/dynamic-form/formulario.service.ts","../../../projects/controls/src/lib/dynamic-form/dyn-form/dyn-form.component.ts","../../../projects/controls/src/lib/dynamic-form/dyn-form/dyn-form.component.html","../../../projects/controls/src/lib/dynamic-form/dyn-form.module.ts","../../../projects/controls/src/lib/grid-control/lang/locale.es.ts","../../../projects/controls/src/lib/grid-control/lang/locale.en.ts","../../../projects/controls/src/lib/grid-control/components/page-size/page-size.component.ts","../../../projects/controls/src/lib/grid-control/components/page-size/page-size.component.html","../../../projects/controls/src/lib/grid-control/grid-control.component.ts","../../../projects/controls/src/lib/grid-control/grid-control.component.html","../../../projects/controls/src/lib/grid-control/components/row-options/row-options.component.ts","../../../projects/controls/src/lib/grid-control/components/row-options/row-options.component.html","../../../projects/controls/src/lib/grid-control/components/budge/badge.component.ts","../../../projects/controls/src/lib/grid-control/components/budge/badge.component.html","../../../projects/controls/src/lib/grid-control/components/luxon-datetime-renderer/luxon-datetime-renderer.component.ts","../../../projects/controls/src/lib/grid-control/components/luxon-datetime-renderer/luxon-datetime-renderer.component.html","../../../projects/controls/src/lib/grid-control/grid-control.module.ts","../../../projects/controls/src/lib/alerts/models/linkSweet.class.ts","../../../projects/controls/src/lib/alerts/models/customClassSweet.interface.ts","../../../projects/controls/src/lib/alerts/services/alert.service.ts","../../../projects/controls/src/lib/alerts/alert.module.ts","../../../projects/controls/src/lib/controls.module.ts","../../../projects/controls/src/public-api.ts","../../../projects/controls/src/sof-ng-controls.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControlsService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-controls',\r\n  template: `\r\n    <p>\r\n      controls works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ControlsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export class ErrorsConfigurations {\r\n    [key: string]: FormatErrorFunction;\r\n    // errorsConfigurations!: ErrorMessage[];\r\n}\r\n\r\nexport interface ErrorMessage {\r\n    error: string;\r\n    // format?: FormatErrorFunction;\r\n}\r\n\r\nexport declare type FormatErrorFunction = (label?: string, error?: any) => string;\r\n\r\n","import { Component, DoCheck, EventEmitter, Input, Optional, Output, Self, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class BaseFormFieldComponent implements ControlValueAccessor, DoCheck {\r\n  @Input() info!: string;\r\n  @Input() description!: string;\r\n  @Input() label!: string;\r\n  @Input() placeholder!: string;\r\n  // tslint:disable-next-line: no-output-native\r\n  @Output() change = new EventEmitter<any>();\r\n\r\n\r\n  value: any;\r\n  disabled = false;\r\n  isRequired = false;\r\n  invalid!: boolean;\r\n\r\n  get EsInvalido(){\r\n    return (!!this.controlDir && this.controlDir.touched && this.controlDir.invalid) || false\r\n  }\r\n\r\n  onChange = (value: any) => {};\r\n  onTouch = () => {};\r\n\r\n  constructor(@Optional() @Self() public controlDir: NgControl) {\r\n    if (controlDir) {\r\n      controlDir.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.controlDir?.control instanceof FormControl) {\r\n      // check if this field is required or not to display a 'required label'\r\n      const validator = this.controlDir.control.errors;\r\n      this.isRequired =\r\n        Boolean(validator && validator.hasOwnProperty('required')) ||\r\n        Boolean(validator && validator.hasOwnProperty('selectedCount'));\r\n    }\r\n  }\r\n\r\n  get hasErrors(): boolean {\r\n    return (\r\n      this.controlDir?.control &&\r\n      this.controlDir?.control.touched &&\r\n      !!this.controlDir?.control.errors\r\n    ) ?? false;\r\n  }\r\n\r\n  get errors(): ValidationErrors | null {\r\n    return this.controlDir?.control?.errors ?? null;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouch();\r\n  }\r\n\r\n  protected changeValue(value: any): void {\r\n    this.setInputValue(value);\r\n    this.onTouch();\r\n    this.onChange(this.value);\r\n    this.change.emit(this.value);\r\n  }\r\n\r\n  protected setInputValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class TextControlComponent extends BaseFormFieldComponent  {\r\n\r\n  \r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { ErrorsConfigurations } from \"./errors-configuration\";\r\n\r\nexport const defaultErrorMessages: ErrorsConfigurations = {\r\n    'required': (label?: string) => 'El campo es requerido',\r\n    'maxlength': (label?: string, error?: any) => `El campo no puede ser mayor a ${error.maxlength}`,\r\n    'minlength': (label?: string, error?: {actualLength: number, requiredLength: number}) => label + ' minLength!! ' + error?.requiredLength,\r\n    'cuit': (label?: string) => 'El campo no tiene el formato correcto',\r\n};","import { Component, Input, ChangeDetectorRef, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport { defaultErrorMessages } from '../../validations/configuration/default-error-messages';\r\nimport { ErrorsConfigurations } from '../../validations/configuration/errors-configuration';\r\n\r\n@Component({\r\n  selector: 'sof-error',\r\n  template: ''\r\n})\r\nexport class ErrorComponent implements OnChanges{\r\n\r\n  @Input() translateFuncion: (arg: string) => string = (param:string)=>param;\r\n  @Input() controlInvalido: boolean = false\r\n\r\n  @Input() \r\n  set errors(value: ValidationErrors | null) {\r\n    this.errorsList = value ? Object.keys(value).map(k => this.resolveErrorMessage(k, value[k])) : null;\r\n  }\r\n\r\n  get errors(): ValidationErrors | null {\r\n    return this.errorsList as any;\r\n  }\r\n\r\n  @Input() label!: string;\r\n\r\n  errorsList!: string[] | null;\r\n\r\n  constructor(private config: ErrorsConfigurations, private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['controlInvalido']?.currentValue){\r\n        this.actualizarErrores()\r\n    }\r\n  }\r\n  \r\n  private resolveErrorMessage(errorName: string, value: any): string {\r\n\r\n    const msg = !!value.customMessage ? value.customMessage\r\n      : this.config[errorName] ? this.config[errorName](this.label, value) \r\n      : defaultErrorMessages[errorName] ? defaultErrorMessages[errorName](this.label, value) \r\n      : '';\r\n\r\n    return msg    \r\n  }  \r\n\r\n  actualizarErrores(){\r\n    this.errorsList = this.errorsList ? this.errorsList.map(e => this.translateFuncion(e)) : null\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport { ErrorComponent } from '../../base/error/error.component';\r\nimport { ErrorsConfigurations } from '../../validations/configuration/errors-configuration';\r\n\r\n@Component({\r\n  selector: 'sof-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorMaterialComponent extends ErrorComponent implements OnChanges {\r\n  \r\n  \r\n\r\n}\r\n","<ng-container *ngIf=\"controlInvalido\">\r\n    <mat-error *ngFor=\"let error of errorsList\">{{error}}</mat-error>\r\n</ng-container>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n\r\n@Component({\r\n  selector: 'sof-text-control',\r\n  templateUrl: './text-control-component.html',\r\n  styleUrls: ['./text-control-component.scss'],\r\n})\r\nexport class TextMaterialControlComponent extends TextControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused\r\n  }\"\r\n>{{label}}</mat-label>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n  />\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class TextAreaControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { TextAreaControlComponent } from '../../base/text-area-control/text-area-control.component';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-text-area-control',\r\n  templateUrl: './text-area-control-component.html',\r\n  styleUrls: ['./text-area-control-component.scss'],\r\n})\r\nexport class TextAreaMaterialControlComponent extends TextAreaControlComponent {\r\n\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n  @Input() resizeable = false\r\n  @Input() rowsArea = 2\r\n}\r\n","<mat-label [ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido,\r\n  'active-label': inputRef.focused\r\n}\">{{label}}</mat-label>\r\n<mat-form-field appearance=\"outline\"\r\n  [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n\r\n  <textarea\r\n    [ngClass]=\"{'no-resizeable':!resizeable}\"\r\n    matInput\r\n    #inputRef=\"matInput\"\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [rows]=\"rowsArea\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n  >\r\n  </textarea>\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class NumberControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { NumberControlComponent } from '../../base/number-control/number-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-number-control',\r\n  templateUrl: './number-control-component.html',\r\n  styleUrls: ['./number-control-component.scss'],\r\n})\r\nexport class NumberMaterialControlComponent extends NumberControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  \r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input \r\n        matInput\r\n        #inputRef=\"matInput\"\r\n        class=\"form-control\"\r\n        [placeholder]=\"placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        type=\"number\"\r\n        (input)=\"onInput($any($event.target).value)\">\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class CheckboxControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { CheckboxControlComponent } from '../../base/checkbox-control/checkbox-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-checkbox-control',\r\n  templateUrl: './checkbox-control-component.html',\r\n  styleUrls: ['./checkbox-control-component.scss'],\r\n})\r\nexport class CheckboxMaterialControlComponent extends CheckboxControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-checkbox matInput\r\ncolor=\"primary\"\r\n    class=\"form-control\"\r\n    [checked]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"checkbox\"\r\n    (input)=\"onInput($any($event.target).checked)\">\r\n    {{label}}\r\n</mat-checkbox>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class RadioButtonControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() list!: any[];\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    // console.log(pathArray)\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n      return val;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { RadioButtonControlComponent } from '../../base/radio-button-control/radio-button-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-radio-button-control',\r\n  templateUrl: './radio-button-control-component.html',\r\n  styleUrls: ['./radio-button-control-component.scss'],\r\n})\r\nexport class RadioButtonMaterialControlComponent extends RadioButtonControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","\r\n<mat-radio-group style=\"margin-right: 10px;\"\r\n  matInput\r\n  [disabled]=\"disabled\"\r\n  [name]=\"label\" \r\n  [value]=\"value\" \r\n  [ngClass]=\"{'required-label': isRequired}\"\r\n  (input)=\"onInput($any($event.target).value)\">\r\n  <mat-radio-button\r\n    matInput\r\n    *ngFor=\"let item of list; let i=index\"\r\n    [checked]=\"getValue(item) == value\" \r\n    [value]=\"getValue(item)\">\r\n    {{getText(item)}}\r\n  </mat-radio-button>\r\n</mat-radio-group>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class SelectControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() list!: any[];\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { SelectControlComponent } from '../../base/select-control/select-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-select-control',\r\n  templateUrl: './select-control-component.html',\r\n  styleUrls: ['./select-control-component.scss'],\r\n})\r\nexport class SelectMaterialControlComponent extends SelectControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","\r\n<mat-label\r\n[ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido,\r\n  'active-label': inputRef.focused\r\n}\"\r\n>{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" \r\n  [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <mat-select\r\n    matSelect\r\n    #inputRef=\"matSelect\"\r\n    [disabled]=\"disabled\"\r\n    [(value)]=\"value\"\r\n    (selectionChange)=\"onInput($event.value)\"\r\n    [placeholder]=\"placeholder\"> \r\n    <mat-option \r\n      *ngFor=\"let item of list; let i=index\"\r\n      [value]=\"getValue(item)\">\r\n      {{getText(item)}}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class AutocompleteControlComponent extends BaseFormFieldComponent  {\r\n\r\nconstructor(\r\n  @Optional() @Self() public override controlDir: NgControl,\r\n  private httpClient: HttpClient) {\r\n  super(controlDir);\r\n}\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    if (!item)\r\n      return null;\r\n    \r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    if (!item)\r\n      return '';\r\n\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n    return val;\r\n  }\r\n\r\n\r\n  //Delay para filtrar\r\n  @Input() debounce: number = 300;\r\n\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  //Busqueda en memoria\r\n  @Input() list!: any[];\r\n  // @Input() searchPaths: string[] = ['text'];\r\n\r\n  //Busqueda usado una funcion definida en el componente\r\n  @Input() filterFn!: (filterText: string) => any[];\r\n\r\n  //Busqueda usando un endpoint\r\n  @Input() filterEndPoint!: string;\r\n\r\n  timeoutObj: any;\r\n  filteredList!: any[];\r\n  search(e: any) {\r\n    if (!!e.inputType || !e.target.value) {\r\n      this.changeValue(null);\r\n\r\n      clearTimeout(this.timeoutObj);\r\n      this.timeoutObj = setTimeout(async () => {\r\n        const results = await this.filter(e.target.value);\r\n        this.filteredList = results;\r\n      }, !!this.list ? 0 : this.debounce);\r\n    }\r\n    else\r\n      this.onSelection(e.target.value);\r\n  }\r\n\r\n  async filter(filter: string): Promise<any[]> {\r\n    if (!filter?.trim())\r\n      return [];\r\n    \r\n    if (!!this.list)\r\n      return await this.inMemorySearch(filter);\r\n    else if (!!this.filterFn)\r\n      return await this.functionSearch(filter);\r\n    else if (!!this.filterEndPoint)\r\n      return await this.endpointSearch(filter);\r\n    else\r\n      return [];\r\n  }\r\n\r\n  async inMemorySearch(filter: string): Promise<any[]> {\r\n    const inputArray = filter.split(' ').map(x => x.trim()).filter(x => !!x).map(x => this.normalizeString(x));\r\n    return this.list.filter(x => inputArray.every(f => this.normalizeString( this.getText(x) ).includes(f)))\r\n  }\r\n\r\n  normalizeString(x: string): any {\r\n    return x.toLowerCase().normalize('NFD'); //.replace(/\\p(Diacritic)/gu, \"\");\r\n  }\r\n  \r\n  async functionSearch(filter: string): Promise<any[]> {\r\n    return this.filterFn(filter);\r\n  }\r\n\r\n  async endpointSearch(filter: string): Promise<any> {\r\n    return await lastValueFrom(this.httpClient.get(`${this.filterEndPoint}${encodeURI(filter.trim())}`));\r\n  }\r\n\r\n  onSelection(selectedText: any) {\r\n    const selected = this.filteredList.find(x => this.getText(x) == selectedText);\r\n    this.changeValue(selected);\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { AutocompleteControlComponent } from '../../base/autocomplete-control/autocomplete-control.component';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-autocomplete-control',\r\n  templateUrl: './autocomplete-control-component.html',\r\n  styleUrls: ['./autocomplete-control-component.scss'],\r\n})\r\nexport class AutocompleteMaterialControlComponent extends AutocompleteControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input type=\"text\"\r\n    #inputRef = matInput\r\n    [placeholder]=\"placeholder\"\r\n    matInput\r\n    [value]=\"getText(value)\"\r\n    [disabled]=\"disabled\"\r\n    (input)=\"search($event)\"\r\n    [matAutocomplete]=\"auto\">\r\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" (optionSelected)=\"onSelection($event.option.value)\">\r\n    <mat-option *ngFor=\"let item of filteredList\" [value]=\"getText(item)\">{{getText(item)}}</mat-option>\r\n  </mat-autocomplete>\r\n\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class DatePickerControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string | DateTime) {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  normalizeValue(value: any) {\r\n    if (value == '')\r\n      return null;\r\n\r\n    if (typeof value == 'string') {\r\n      value = DateTime.fromISO(value);\r\n    }\r\n    return value;\r\n  }\r\n  \r\n  getDateString(value: DateTime) {\r\n    return !!value ? `${value.toISODate()}` : '';\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { DatePickerControlComponent } from '../../base/date-picker-control/date-picker-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-date-picker-control',\r\n  templateUrl: './date-picker-control-component.html',\r\n  styleUrls: ['./date-picker-control-component.scss'],\r\n})\r\nexport class DatePickerMaterialControlComponent extends DatePickerControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n        <input matInput\r\n        #inputRef=\"matInput\"\r\n        class=\"form-control\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        [matDatepicker]=\"picker\"\r\n        (dateChange)=\"onInput($any($event.target).value)\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class TimePickerControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: number\r\n\r\n  onInput(value: any) {\r\n    // console.log(value)\r\n    this.changeValue(value)\r\n  }\r\n\r\n  get Hour():number {\r\n    return Number(this.value.split(':')[0] && 0)\r\n  }\r\n\r\n  get Minute():number{\r\n    return Number(this.value.split(':')[1] && 0)\r\n  }\r\n\r\n\r\n  getValue() {\r\n    return { hour: this.Hour, minute:this.Minute }\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { TimePickerControlComponent } from '../../base/time-picker-control/time-picker-control.component';\r\nimport { NgxMaterialTimepickerComponent, NgxMaterialTimepickerTheme } from 'ngx-material-timepicker';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-time-picker-control',\r\n  templateUrl: './time-picker-control.component.html',\r\n  styleUrls: ['./time-picker-control.component.scss'],\r\n})\r\n\r\nexport class TimePickerMaterialControlComponent extends TimePickerControlComponent {\r\n  // @ViewChild('ngx-material-timepicker')\r\n  // timePicker!: NgxMaterialTimepickerComponent;\r\n  // override onInput(value: any): void {\r\n  //     console.log(value)\r\n  // }\r\n\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n\r\n  themes: NgxMaterialTimepickerTheme = {\r\n    container:{\r\n      bodyBackgroundColor:'#424242',\r\n    }\r\n  }\r\n\r\n  @Input() format24hs: boolean = false\r\n\r\n  override onInput(value: any): void {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  \r\n  normalizeValue(value: string){\r\n    if(!value) return null;\r\n    \r\n    const minutes = Number(value.split(':')[1].substring(0,2))\r\n    \r\n    if(value.includes('AM')){\r\n      // console.log('normaliceAM :>> ', value);\r\n      const hours = Number(value.split(':')[0])\r\n      value = `${hours}:${minutes}` \r\n    }\r\n    if(value.includes('PM')){\r\n      // console.log('normalicePM :>> ', value);\r\n\r\n      let hours = Number(value.split(':')[0]) + 12\r\n      if(hours >= 24) {\r\n        hours -= 24\r\n      }\r\n      value = `${hours}:${minutes}`\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    matInput\r\n    #inputRef=\"matInput\"\r\n    [placeholder]=\"placeholder\"\r\n    aria-label=\"12hr format\"\r\n    [ngxTimepicker]=\"picker\"\r\n    [format]=\"format24hs ? 24 : 12\"\r\n    readonly\r\n    [disabled]=\"disabled\"\r\n    [value]=\"value\"\r\n  />\r\n  <ngx-material-timepicker\r\n    #picker\r\n    (timeSet)=\"onInput($event)\"\r\n  ></ngx-material-timepicker>\r\n</mat-form-field>\r\n\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class FileUploadControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() multiple: boolean = false;\r\n  @Input() accept!: string;\r\n\r\n  onInput(value: any) {\r\n    value = this.normalizeValue(value);\r\n\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    value = this.normalizeValue(value);\r\n\r\n    if (value) {\r\n      this.value = value || [];\r\n    } else {\r\n      this.value = [];\r\n    }\r\n  }\r\n\r\n  protected normalizeValue(value: any) {\r\n    if (value instanceof FileList)\r\n      value = Array.from(value);\r\n    return value;\r\n  };\r\n  \r\n  getDisplayFileInfo(): string {\r\n    if (!this.value || this.value.length == 0)\r\n      return '';\r\n\r\n    if (!!this.value.length)\r\n      return Array.prototype.map.call(this.value, x => `${x.name}`).join(', '); \r\n          //o Array.from(this.value).map(x => `${x.name}`).join(', ')\r\n    else\r\n      return `${this.value.name}`;\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class DataValidators {\r\n\r\n  static cuitValidator(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const value: string = control.value!! ? control.value.toString() : null;\r\n      if (value) {\r\n          if (!value.match(/^(23)|(27)|(20)|(30)/)) {\r\n              return { cuit: { currentValue: value, customMessage } };\r\n          }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static email(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.email(control))\r\n        return { email: { email: true, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\"\r\nimport { DateTime } from \"luxon\"\r\n\r\nexport class DateTimeValidators {\r\n\r\n  static maxDate(max: DateTime, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control.value && control.value > max)\r\n        return { maxDate: { maxDate: max, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static minDate(min: DateTime, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control.value && control.value < min)\r\n        return { minDate: { minDate: min, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static afterOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!DateTimeValidators.minDate(formField.value)(control))\r\n        return { afterOrEqualTo: { minDate: formField.value, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static beforeOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!DateTimeValidators.maxDate(formField.value)(control))\r\n        return { beforeOrEqualTo: { maxDate: formField.value, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\"\r\n\r\nexport class FileValidators {\r\n\r\n  static maxFileSize(maxBytes: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control && !!control.value) {\r\n        if (control.value instanceof Array) {\r\n          const overSizedFiles = control.value.filter((x: File) => x.size > maxBytes) as File[];\r\n          console.log('over size files',overSizedFiles)\r\n          console.log('maxBytes',maxBytes, control.value.map((x:File)=>x.size))\r\n          if (overSizedFiles.length > 0)\r\n            return { maxFileSize: { maxFileSize: maxBytes, actualSize: overSizedFiles.map(x => x.size), files: overSizedFiles, customMessage } };\r\n        } else if (control.value instanceof File && control.value.size > maxBytes)\r\n          return { maxFileSize: { maxFileSize: maxBytes, actualSize: control.value.size, files: control.value, customMessage } };\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static acceptedFileTypes(fileTypes: string[], customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control && !!control.value) {\r\n        if (control.value instanceof Array) {\r\n          const wrongTypeFiles = control.value.filter((x: File) => !fileTypes.some(t => x.type.match(t))) as File[];\r\n          if (!!wrongTypeFiles)\r\n            return { acceptedFileTypes: { acceptedFileTypes: fileTypes, actualTypes: wrongTypeFiles.map(x => x.type), files: wrongTypeFiles, customMessage } };\r\n        } else if (control.value instanceof File && !fileTypes.some(t => control.value.type.match(t)))\r\n          return { acceptedFileTypes: { acceptedFileTypes: fileTypes, actualTypes: control.value.type, files: control.value, customMessage } };\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class NumberValidators {\r\n\r\n  static min(minValue: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.min(minValue)(control))\r\n        return { min: { min: minValue, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static max(maxValue: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.max(maxValue)(control))\r\n        return { max: { max: maxValue, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static lessOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!Validators.max(formField.value)(control))\r\n        return { lessOrEqualTo: { lessOrEqualTo: formField.value, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static moreOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!Validators.min(formField.value)(control))\r\n        return { moreOrEqualTo: { moreOrEqualTo: formField.value, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class RequiredValidators {\r\n\r\n  static required(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.required(control))\r\n          return { required: { required: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredTrue(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.requiredTrue(control))\r\n          return { requiredTrue: { requiredTrue: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsEmpty(ifEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const emptyField = control.parent?.get(ifEmptyField);\r\n      if (!!emptyField && !emptyField.value && !!Validators.required(control))\r\n          return { requiredIfFieldIsEmpty: { requiredIfFieldIsEmpty: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsIn(formFieldName: string, values: any[], customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && values.find(x => x == formField.value) && !!Validators.required(control))\r\n        return { requiredIfFieldIsIn: { values: values, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsNotEmpty(ifNotEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const emptyField = control.parent?.get(ifNotEmptyField);\r\n      if (!!emptyField && !!emptyField.value && !!Validators.required(control))\r\n          return { requiredIfFieldIsNotEmpty: { requiredIfFieldIsNotEmpty: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //https://medium.com/ngx/3-ways-to-implement-conditional-validation-of-reactive-forms-c59ed6fc3325\r\n  static requiredIf(predicate: () => boolean, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (predicate() && !!Validators.required(control))\r\n        return { requiredIf: { requiredIf: true, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static fieldRequiredIfFieldEmpty(requiredField: string, ifEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (formGroup: AbstractControl) => {\r\n      const field = formGroup.get(requiredField);\r\n      const emptyField = formGroup.get(ifEmptyField);\r\n      if (!!field && !!emptyField)\r\n        if (!field.value && !emptyField.value) {\r\n          let errors = field.errors;\r\n          if (!errors)\r\n            errors = {};\r\n          errors['fieldRequiredIfFieldEmpty'] = { fieldRequiredIfFieldEmpty: { fieldRequiredIfFieldEmpty: true, customMessage }};\r\n          field.setErrors(errors);\r\n        }\r\n        else {\r\n          let errors = field.errors;\r\n          if (!!errors && errors.hasOwnProperty('required')) {\r\n            delete errors['fieldRequiredIfFieldEmpty'];\r\n            field.setErrors(errors);\r\n          }\r\n        }\r\n      return null;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class TextValidators {\r\n\r\n  static minLength(minLength: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.minLength(minLength)(control))\r\n        return { minLength: { minLength: minLength, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static maxLength(maxLength: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.maxLength(maxLength)(control))\r\n        return { minLength: { minLength: maxLength, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static pattern(pattern: string | RegExp, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.pattern(pattern)(control))\r\n        return { pattern: { pattern: pattern, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * Todos los disntintos tipos de validacion\r\n */\r\nexport enum ValidationTypes {\r\n    Required = 'required',\r\n    Min = 'min',\r\n    Max = 'max',\r\n    Function = 'function',\r\n    MinLength = 'minLength',\r\n    MaxLength = 'maxLength',\r\n    Pattern = 'pattern',\r\n    MinDate = 'minDate',\r\n    MaxDate = 'maxDate', \r\n    AfterOrEqualTo = 'afterOrEqualTo',\r\n    BeforeOrEqualTo = 'beforeOrEqualTo',\r\n    MaxFileSize = 'maxFileSize',\r\n    AcceptedTypes = 'AcceptedTypes',\r\n    Email = 'email',\r\n    // Cross Field Validations (requires fieldTarget)\r\n    RequiredIf = 'requiredIf',\r\n    RequiredIfFieldIsEmpty = 'requiredIfFieldIsEmpty',\r\n    RequiredIfFieldIsNotEmpty = 'requiredIfFieldIsNotEmpty',\r\n    LessOrEqualTo = 'lessOrEqualTo',\r\n    MoreOrEqualTo = 'moreOrEqualTo'\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ValidationsModule { }\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FileUploadControlComponent } from '../../base/file-upload-control/file-upload-control.component';\r\nimport { FileInput } from 'ngx-material-file-input';\r\nimport {ValidationTypes  } from '../../validations'\r\nimport {ValidationForm} from '../../dynamic-form/interfaces'\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-file-upload-control',\r\n  templateUrl: './file-upload-control-component.html',\r\n  styleUrls: ['./file-upload-control-component.scss'],\r\n})\r\nexport class FileUploadMaterialControlComponent extends FileUploadControlComponent implements OnInit {\r\n\r\n  @Input() maxSize!:number\r\n  @ViewChild('field', {static: false}) Field: any;\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n\r\n  ngOnInit(): void {\r\n    document.querySelectorAll('ngx-mat-file-input[data-selector=\"mat-input-file\"] input[type=\"file\"]').forEach(e => e.addEventListener('focus', e => {\r\n\r\n      document.getElementById('mat-input-file')?.classList.remove('cdk-focused', 'cdk-keyboard-focused', 'mat-form-field-should-float')\r\n      this.Field._changeDetectorRef._cdRefInjectingView[0]?.classList.remove('mat-form-field-should-float');\r\n      this.Field._changeDetectorRef._cdRefInjectingView[0]?.classList.add('mat-form-field-hide-placeholder');\r\n    }))\r\n  }\r\n\r\n  override onInput(value: any): void {\r\n    value = this.normalizeValue(value);\r\n\r\n    this.changeValue(value);\r\n\r\n    if(this.multiple && value.length > 0 ) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'none';\r\n    } \r\n    else if( value  && !this.multiple) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'none';\r\n    } \r\n    \r\n  }\r\n\r\n  getMaxSizeValueInValidation(validations?: ValidationForm[]){\r\n    if(validations){\r\n      return validations.find(x=>x.type== ValidationTypes.MaxFileSize)?.value\r\n    }\r\n    else return 0\r\n  }\r\n\r\n  getFileInputFromValue(): FileInput {\r\n    if (this.value instanceof File)\r\n      return new FileInput([this.value]);\r\n    else\r\n      return new FileInput(this.value);\r\n  }\r\n\r\n  getFilesName(): string[] {\r\n    const files = this.getFileInputFromValue();\r\n    return files.fileNames? files.fileNames.split(',') : [];\r\n  }\r\n\r\n  deleteItem(key: string) {\r\n    if( this.multiple ){\r\n      this.value = this.value.filter( (f: File) => f.name != key)\r\n    } else {\r\n      this.value = null\r\n    }\r\n\r\n    if( !this.value || this.value.length < 1 ) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'inline-block';\r\n    }\r\n  }\r\n}\r\n","<mat-form-field  appearance=\"outline\" #field >\r\n  <mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido\r\n  }\">\r\n  <mat-icon matSuffix>attachment</mat-icon>\r\n  {{ label }}\r\n  </mat-label>\r\n\r\n  <ngx-mat-file-input \r\n    data-selector=\"mat-input-file\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [disabled]=\"disabled\"\r\n    type=\"file\"\r\n    [multiple]=\"!!multiple\"\r\n    [value]=\"getFileInputFromValue()\"\r\n    [accept]=\"accept\"\r\n    (change)=\"onInput( !!multiple ? $any($event.target).files : $any($event.target).files[0] )\">\r\n  </ngx-mat-file-input>\r\n\r\n  \r\n</mat-form-field>\r\n\r\n<div  *ngIf=\"getFilesName().length > 0\" class=\"row\">\r\n  <div>\r\n    <mat-chip-list *ngFor=\"let file of getFilesName()\">\r\n      <mat-chip >\r\n        {{ file }}\r\n        <button matChipRemove (click)=\"deleteItem(file)\">\r\n          <mat-icon>cancel</mat-icon>\r\n        </button>\r\n      </mat-chip>\r\n    </mat-chip-list>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class PhoneControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: string\r\n\r\n  onInput(value: any) {\r\n    // console.log(value)\r\n    this.changeValue(value)\r\n  }\r\n\r\n  \r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { PhoneControlComponent } from '../../base/phone-control/phone-control';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-phone-control',\r\n  templateUrl: './phone-control.component.html',\r\n  styleUrls: ['./phone-control.component.scss']\r\n})\r\nexport class PhoneMaterialControlComponent extends PhoneControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input\r\n        #inputRef=\"matInput\"\r\n        matInput\r\n        class=\"form-control\"\r\n        [placeholder]=\"placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        type=\"tel\"\r\n        (input)=\"onInput($any($event.target).value)\">\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class PasswordControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: string\r\n\r\n  show: boolean = false;\r\n  showEye: boolean = true\r\n\r\n  onInput(value: any) {\r\n    this.changeValue(value)\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { PasswordControlComponent } from '../../base/password-control/password-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-password-control',\r\n  templateUrl: './password-control.component.html',\r\n  styleUrls: ['./password-control.component.scss']\r\n})\r\nexport class PasswordMaterialControlComponent extends PasswordControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    matInput\r\n    #inputRef=\"matInput\"\r\n    [type]=\"show ? 'text' : 'password'\"\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n  />\r\n\r\n  <mat-icon *ngIf=\"showEye\" matSuffix (click)=\"show = !show\">\r\n    {{ show ? \"visibility_off\" : \"visibility\" }}\r\n  </mat-icon>\r\n</mat-form-field>\r\n\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sof-card',\r\n  templateUrl: './card-component.html',\r\n  styleUrls: ['./card-component.scss'],\r\n})\r\nexport class CardComponent {\r\n  @Input() title!: string;\r\n  @Input() subTitle: string = '';\r\n  @Input() expandable: boolean = false;\r\n  expanded: boolean = true;\r\n  @Output() onToggleExpand = new EventEmitter<any>();\r\n  @Input() isSubCard: boolean = false;\r\n\r\n  toggleExpand() {\r\n    this.expanded = !this.expanded;\r\n    this.onToggleExpand.emit({expanded: this.expanded});\r\n  }\r\n}\r\n","<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{title}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitle}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>","import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-search-box-control',\r\n  templateUrl: './search-box-control-component.html',\r\n  styleUrls: ['./search-box-control-component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchBoxMaterialControlComponent {\r\n  @Input() placeholder!: string;\r\n  @Input() disabled!: boolean;\r\n  @Output() onInput = new EventEmitter<string>();\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  \r\n  onInputEvent(val: string) {\r\n    this.onInput.emit(val);\r\n  }\r\n\r\n}\r\n","<mat-form-field appearance=\"outline\"\r\nclass=\"dense\">\r\n  <span matPrefix>\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"Busqueda\" class=\"material-symbols-outlined\">search</mat-icon>\r\n    &nbsp;\r\n  </span>\r\n  <input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    [placeholder]=\"placeholder\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInputEvent($any($event.target).value)\"\r\n  />\r\n</mat-form-field>","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-dense-text-control',\r\n  templateUrl: './dense-text-control-component.html',\r\n  styleUrls: ['./dense-text-control-component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DenseTextMaterialControlComponent extends TextControlComponent{\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  \r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused\r\n  }\"\r\n>{{label}}</mat-label>\r\n<mat-form-field appearance=\"outline\"\r\n    class=\"dense\"\r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n  />\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n\r\n","import { Component, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, EventEmitter } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\nimport { TypeDocuments } from './type.enum';\r\n\r\n@Component({\r\n  selector: 'sof-doc-control',\r\n  templateUrl: './doc-control.component.html',\r\n  styleUrls: ['./doc-control.component.scss']\r\n})\r\nexport class DocControlComponent extends TextControlComponent implements OnInit, OnChanges {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent;\r\n  \r\n  @Input() type: TypeDocuments = 'DNI';\r\n  @Output() minLength: EventEmitter<number> = new EventEmitter<number>();\r\n  customMask: any;\r\n  \r\n  ngOnInit(): void {\r\n    this.setMask();\r\n  }\r\n  \r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes){\r\n      setTimeout(() => { this.value = null }, 0);\r\n      this.setMask();\r\n    }\r\n  }\r\n\r\n  setMask(){\r\n    switch (this.type) {\r\n      case 'DNI':\r\n        this.customMask = '0.000.000||00.000.000';\r\n        this.minLength.emit(9);\r\n        break;\r\n\r\n      case 'CUIL': \r\n        this.customMask = '00-0.000.000-0||00-00.000.000-0';\r\n        this.minLength.emit(14);\r\n        break;\r\n\r\n      case 'PASAPORTE':\r\n        this.customMask = 'SSS000';\r\n        this.minLength.emit(6);\r\n        break;\r\n      \r\n      default:\r\n        this.customMask = '00.000.000||0.000.000';\r\n        this.minLength.emit(9);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused\r\n  }\"\r\n>{{label}}</mat-label>\r\n<mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n    [mask]=\"customMask\"\r\n  />\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TextMaterialControlComponent } from './text-control/text-control-component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ErrorMaterialComponent } from './error/error.component';\r\nimport { TextAreaMaterialControlComponent } from './text-area-control/text-area-control-component';\r\nimport { NumberMaterialControlComponent } from './number-control/number-control-component';\r\nimport { CheckboxMaterialControlComponent } from './checkbox-control/checkbox-control-component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { RadioButtonMaterialControlComponent } from './radio-button-control/radio-button-control-component';\r\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SelectMaterialControlComponent } from './select-control/select-control-component';\r\nimport { AutocompleteMaterialControlComponent } from './autocomplete-control/autocomplete-control-component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { DatePickerMaterialControlComponent } from './date-picker-control/date-picker-control-component';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { TimePickerMaterialControlComponent } from './time-picker-control/time-picker-control.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FileUploadMaterialControlComponent } from './file-upload-control/file-upload-control-component';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatLuxonDateModule } from '@angular/material-luxon-adapter';\r\nimport { PhoneMaterialControlComponent } from './phone-control/phone-control.component';\r\nimport { PasswordMaterialControlComponent } from './password-control/password-control.component';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CardComponent } from './card/card-component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { HttpClientModule } from '@angular/common/http'; // Es para el autocomplete cuando se carga desde un endpoint\r\nimport { SearchBoxMaterialControlComponent } from './search-box-control/search-box-control-component';\r\nimport { DenseTextMaterialControlComponent } from './dense-text-control/dense-text-control-component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { DocControlComponent } from './doc-control/doc-control.component';\r\n\r\n@NgModule({\r\n  providers:[\r\n  {\r\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n    useValue: { color: 'primary' }}\r\n  ],\r\n  declarations: [\r\n    TextMaterialControlComponent,\r\n    TextAreaMaterialControlComponent,\r\n    NumberMaterialControlComponent,\r\n    CheckboxMaterialControlComponent,\r\n    RadioButtonMaterialControlComponent,\r\n    SelectMaterialControlComponent,\r\n    AutocompleteMaterialControlComponent,\r\n    TimePickerMaterialControlComponent,\r\n    DatePickerMaterialControlComponent,\r\n    FileUploadMaterialControlComponent,\r\n    ErrorMaterialComponent,\r\n    PhoneMaterialControlComponent,\r\n    PasswordMaterialControlComponent,\r\n    CardComponent,\r\n    SearchBoxMaterialControlComponent,\r\n    DenseTextMaterialControlComponent,\r\n    DocControlComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    NgxMaterialTimepickerModule,\r\n    MatDatepickerModule,\r\n    MatButtonModule,\r\n    MatLuxonDateModule,\r\n    MaterialFileInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  exports: [\r\n    TextMaterialControlComponent,\r\n    TextAreaMaterialControlComponent,\r\n    NumberMaterialControlComponent,\r\n    CheckboxMaterialControlComponent,\r\n    RadioButtonMaterialControlComponent,\r\n    SelectMaterialControlComponent,\r\n    AutocompleteMaterialControlComponent,\r\n    TimePickerMaterialControlComponent,\r\n    DatePickerMaterialControlComponent,\r\n    FileUploadMaterialControlComponent,\r\n    PhoneMaterialControlComponent,\r\n    PasswordMaterialControlComponent,\r\n    CardComponent,\r\n    SearchBoxMaterialControlComponent,\r\n    DenseTextMaterialControlComponent,\r\n    DocControlComponent\r\n  ]\r\n})\r\nexport class MaterialControlsModule { }\r\n","/**\r\n * Representa el tipo de una accion\r\n */\r\nexport enum ActionFormTypes {\r\n    Hide,\r\n    Show,\r\n    Reset,\r\n    Dissable,  \r\n    Enable,\r\n    SetValue,\r\n    FillOptions\r\n  }\r\n  ","/**\r\n * Representa el tipo de campo de un formulario\r\n */\r\nexport enum FormConfigTypes {\r\n    Text = 'text',\r\n    DenseText = 'dense-text',\r\n    TextArea = 'text-area',\r\n    Number = 'number',\r\n    Checkbox = 'checkbox',\r\n    Radio = 'radio',\r\n    Select = 'select',\r\n    Autocomplete = 'autocomplete',\r\n    Time = 'time',\r\n    Date = 'date',\r\n    File = 'file',\r\n    Phone = 'phone',\r\n    Password = 'password',\r\n    EmptyCol = 'empty-col'\r\n  }\r\n\r\n\r\n\r\n  ","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActionForm,\r\n  ConditionForm,\r\n  Emptyfield,\r\n  FormFieldConfig,\r\n  ValidationForm,\r\n} from './interfaces';\r\nimport { ActionFormTypes, FormConfigTypes, ValidationTypes } from './enums';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n} from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DateTime } from 'luxon';\r\nimport {\r\n  DataValidators,\r\n  RequiredValidators,\r\n  NumberValidators,\r\n  TextValidators,\r\n  FileValidators,\r\n  DateTimeValidators,\r\n} from '../validations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FormularioService {\r\n  private subs: Subscription;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient) {\r\n    console.log('Inicio servicio form');\r\n    this.subs = new Subscription();\r\n  }\r\n\r\n  buildFormGroup(fields: (FormFieldConfig | Emptyfield)[]): FormGroup {\r\n    const formGroup = this.fb.group({});\r\n\r\n    fields.forEach((field) => {\r\n      if( field.type == FormConfigTypes.EmptyCol && (field as any)['key']){\r\n        console.error('Ver FielsConfig en: ', (field as any)['key'])\r\n        throw new Error('No se puede poner type:EmptyCol a un control que tiene que formar parte del formulario')\r\n      }\r\n\r\n      if(  field.type != FormConfigTypes.EmptyCol ) {\r\n        formGroup.addControl(\r\n          field.key,\r\n          new FormControl({\r\n            value: field.defaultValue || '',\r\n            disabled: field.dissabled,\r\n          })\r\n        );\r\n      }\r\n    });\r\n\r\n    fields.forEach((field) => {\r\n      if( field.type != FormConfigTypes.EmptyCol ) {\r\n        this.realizarRequestToUrl(formGroup, field);\r\n        const sub = this.procesarAcciones(fields.filter( f => f.type != FormConfigTypes.EmptyCol) as FormFieldConfig[], field, formGroup);\r\n        if(sub){\r\n  \r\n          this.subs.add(sub);\r\n        }\r\n  \r\n        this.setValidations(\r\n          formGroup.get(field.key) as AbstractControl,\r\n          field.validations,\r\n          formGroup\r\n        );\r\n      }\r\n    });\r\n\r\n    return formGroup;\r\n  }\r\n\r\n  procesarAcciones(fields: FormFieldConfig[], field: FormFieldConfig, form: FormGroup) {\r\n    if (field.action.length == 0) return null;\r\n\r\n    return form.get(field.key)?.valueChanges.subscribe((newValue) => {\r\n      field.action.forEach((action) => {\r\n        const fieldTarget = this.getFieldTargetFromFields(\r\n          action.fieldTarget,\r\n          fields\r\n        );\r\n        const formControlTarget = form.get(action.fieldTarget) as FormControl;\r\n        if (!formControlTarget)\r\n          throw new Error('No se encontro el formControl');\r\n\r\n        switch (action.type) {\r\n          case ActionFormTypes.Hide:\r\n            this.procesarHide(newValue, fieldTarget, action, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Show:\r\n            this.procesarShow(newValue, fieldTarget, action, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Reset:\r\n            this.procesarReset(newValue, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Dissable:\r\n            this.procesarDisable(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.Enable:\r\n            this.procesarEnable(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.SetValue:\r\n            this.procesarSetValue(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.FillOptions:\r\n            this.procesarFillOptions(\r\n              newValue,\r\n              formControlTarget,\r\n              fieldTarget,\r\n              action\r\n            );\r\n            break;\r\n          default:\r\n            throw new Error(\r\n              'No se reconoce el type de la accion: ' + action.type\r\n            );\r\n        }\r\n      });\r\n    });\r\n  }\r\n  realizarRequestToUrl(form: FormGroup, field: FormFieldConfig) {\r\n    if (!field.options?.url) {\r\n      return;\r\n    }\r\n    console.log('consulto en: ' + field.key);\r\n    console.log(field.options.url);\r\n\r\n    form.get(field.key)!.disable();\r\n    this.http.get(field.options?.url as string).subscribe((res: any) => {\r\n      field.options!.options = res;\r\n      form.get(field.key)!.enable();\r\n    });\r\n  }\r\n\r\n  private getFieldTargetFromFields(fieldTarget: string, fields: FormFieldConfig[]) {\r\n    const ft = fields.find((x) => x.key == fieldTarget) as FormFieldConfig;\r\n    if (!ft) throw new Error('No se enctontro el field');\r\n    return ft;\r\n  }\r\n\r\n  private procesarFillOptions(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    fieldTarget: FormFieldConfig,\r\n    action: ActionForm\r\n  ) {\r\n    //Rellenar opciones\r\n    //URL https://apis.datos.gob.ar/georef/api/municipios?provincia=tucuman\r\n    formControlTarget.reset('');\r\n    if (action.fillConfig?.url && newValue) {\r\n      formControlTarget.disable();\r\n\r\n      this.http\r\n        .get(`${action.fillConfig!.url}${newValue}`)\r\n        .subscribe((res: any) => {\r\n          let val = res;\r\n          const pathArray = action.dataPath!.split('.');\r\n          for (const prop of pathArray) val = val[prop];\r\n\r\n          fieldTarget.options!.options = val;\r\n\r\n          formControlTarget.enable();\r\n        });\r\n    } else if (!!action.fillConfig?.fillFn) {\r\n      const options = action.fillConfig?.fillFn(newValue);\r\n      if (options instanceof Promise)\r\n        options.then(x => fieldTarget.options!.options = x);\r\n      else\r\n        fieldTarget.options!.options = options;\r\n    } else {\r\n      fieldTarget.options = action.fillConfig?.fillOptionsConfig?.find(\r\n        (x) => x.onValue == newValue\r\n      )?.optionsConfig;\r\n    }\r\n  }\r\n\r\n  private procesarHide(\r\n    newValue: any,\r\n    fieldTarget: FormFieldConfig,\r\n    action: ActionForm,\r\n    formControlTarget: FormControl\r\n  ) {\r\n    formControlTarget.reset('');\r\n\r\n    fieldTarget.hidden = newValue == action.value;\r\n  }\r\n\r\n  private procesarShow(\r\n    newValue: any,\r\n    fieldTarget: FormFieldConfig,\r\n    action: ActionForm,\r\n    formControlTarget: FormControl\r\n  ) {\r\n    formControlTarget.reset('');\r\n\r\n    fieldTarget.hidden = !(newValue == action.value);\r\n  }\r\n\r\n  private procesarReset(newValue: any, formControlTarget: FormControl) {\r\n    if (formControlTarget?.value != '' && newValue !== '') {\r\n      formControlTarget.reset('');\r\n    }\r\n  }\r\n\r\n  private procesarDisable(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (newValue == action.value) {\r\n      formControlTarget.disable();\r\n    } else formControlTarget.enable();\r\n  }\r\n\r\n  private procesarEnable(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (newValue == action.value) {\r\n      formControlTarget.enable();\r\n    } else formControlTarget.disable();\r\n  }\r\n\r\n  private procesarSetValue(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (!action.newValue)\r\n      throw new Error('La accion debe tener un nuevo valor para setear');\r\n\r\n    if (newValue == action.value) {\r\n      formControlTarget.setValue(action.newValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('Me caigo a pedazos!!!!');\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  private setValidations(\r\n    control: AbstractControl,\r\n    validations: ValidationForm[],\r\n    f: FormGroup\r\n  ) {\r\n    for (let validation of validations) {\r\n      switch (validation.type) {\r\n        // Single Fields Validations\r\n        case ValidationTypes.Required:\r\n          this.setRequiredValidation(control, validation.customMessage);\r\n          break;\r\n        case ValidationTypes.Function:\r\n          this.setFuncValidation(\r\n            control,\r\n            validation.func,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Min:\r\n          this.setMinValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Max:\r\n          this.setMaxValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MinLength:\r\n          this.setMinLengthValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxLength:\r\n          this.setMaxLengthValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Pattern:\r\n          this.setPatternValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MinDate:\r\n          this.setMinDateValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxDate:\r\n          this.setMaxDateValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxFileSize:\r\n          this.setMaxFileSizeValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.AcceptedTypes:\r\n          this.setAcceptedTypesValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Email:\r\n          this.setEmailValidation(control, validation.customMessage);\r\n          break;\r\n        // Cross Fields Validations\r\n        case ValidationTypes.RequiredIf:\r\n          this.setRequiredIfValidation(\r\n            control,\r\n            validation.conditions,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.RequiredIfFieldIsEmpty:\r\n          this.setRequiredIfFieldIsEmptyValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.RequiredIfFieldIsNotEmpty:\r\n          this.setRequiredIfFieldIsNotEmptyValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.LessOrEqualTo:\r\n          this.setLessOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MoreOrEqualTo:\r\n          this.setMoreOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.AfterOrEqualTo:\r\n          this.setAfterOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.BeforeOrEqualTo:\r\n          this.setBeforeOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  // Single Fields Validations\r\n\r\n  private setRequiredValidation(\r\n    control: AbstractControl,\r\n    customMessage?: string\r\n  ) {\r\n    control.addValidators(RequiredValidators.required(customMessage));\r\n  }\r\n\r\n  private setMinValidation(\r\n    control: AbstractControl,\r\n    minValue: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minValue) {\r\n      throw new Error('minValue must be declared');\r\n    }\r\n    control.addValidators(NumberValidators.min(minValue, customMessage));\r\n  }\r\n\r\n  private setMaxValidation(\r\n    control: AbstractControl,\r\n    maxValue: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxValue) {\r\n      throw new Error('maxValue must be declared');\r\n    }\r\n    control.addValidators(NumberValidators.max(maxValue, customMessage));\r\n  }\r\n\r\n  private setMinLengthValidation(\r\n    control: AbstractControl,\r\n    minLength: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minLength) {\r\n      throw new Error('minLength must be declared');\r\n    }\r\n    control.addValidators(TextValidators.minLength(minLength, customMessage));\r\n  }\r\n\r\n  private setMaxLengthValidation(\r\n    control: AbstractControl,\r\n    maxLength: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxLength) {\r\n      throw new Error('maxLength must be declared');\r\n    }\r\n    control.addValidators(TextValidators.maxLength(maxLength, customMessage));\r\n  }\r\n\r\n  private setPatternValidation(\r\n    control: AbstractControl,\r\n    pattern: string | RegExp | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!pattern) {\r\n      throw new Error('pattern must be declared');\r\n    }\r\n    control.addValidators(TextValidators.pattern(pattern, customMessage));\r\n  }\r\n\r\n  private setMinDateValidation(\r\n    control: AbstractControl,\r\n    minDate: DateTime,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minDate) {\r\n      throw new Error('minDate must be declared');\r\n    }\r\n    control.addValidators(DateTimeValidators.minDate(minDate, customMessage));\r\n  }\r\n\r\n  private setMaxDateValidation(\r\n    control: AbstractControl,\r\n    maxDate: DateTime,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxDate) {\r\n      throw new Error('maxDate must be declared');\r\n    }\r\n    control.addValidators(DateTimeValidators.minDate(maxDate, customMessage));\r\n  }\r\n\r\n  private setMaxFileSizeValidation(\r\n    control: AbstractControl,\r\n    maxSize: number,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxSize) {\r\n      throw new Error('maxSize must be declared');\r\n    }\r\n    control.addValidators(FileValidators.maxFileSize(maxSize, customMessage));\r\n  }\r\n\r\n  private setAcceptedTypesValidation(\r\n    control: AbstractControl,\r\n    acceptedTypes: string[],\r\n    customMessage?: string\r\n  ) {\r\n    if (!acceptedTypes) {\r\n      throw new Error('acceptedTypes must be declared');\r\n    }\r\n    control.addValidators(\r\n      FileValidators.acceptedFileTypes(acceptedTypes, customMessage)\r\n    );\r\n  }\r\n\r\n  private setEmailValidation(control: AbstractControl, customMessage?: string) {\r\n    control.addValidators(DataValidators.email(customMessage));\r\n  }\r\n\r\n  // Cross Fields Validations\r\n\r\n  private setFuncValidation(\r\n    control: AbstractControl,\r\n    func: Function | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!func) {\r\n      throw new Error('func must be declared');\r\n    }\r\n    const setError = (error: string) => {\r\n      control.setErrors(\r\n        control.errors\r\n          ? { ...control.errors, [error]: { [error]: true, customMessage } }\r\n          : { [error]: { [error]: true, customMessage } }\r\n      );\r\n    };\r\n\r\n    control.valueChanges.subscribe((val) => {\r\n      func(val, setError);\r\n    });\r\n  }\r\n\r\n  private setRequiredIfValidation(\r\n    control: AbstractControl,\r\n    conditions: ConditionForm[] | undefined,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    if (!conditions) {\r\n      throw new Error('conditions must be declared');\r\n    }\r\n\r\n    for (let condition of conditions) {\r\n      if (!f.get(condition.field)) {\r\n        throw new Error('field not found');\r\n      }\r\n\r\n      f.get(condition.field)?.valueChanges.subscribe((val) => {\r\n        if (val == condition.value) {\r\n          control.addValidators(RequiredValidators.required(customMessage));\r\n        } else {\r\n          control.removeValidators(RequiredValidators.required(customMessage));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private setRequiredIfFieldIsEmptyValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      RequiredValidators.requiredIfFieldIsEmpty(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setRequiredIfFieldIsNotEmptyValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      RequiredValidators.requiredIfFieldIsNotEmpty(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setLessOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      NumberValidators.lessOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setMoreOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      NumberValidators.moreOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setAfterOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      DateTimeValidators.afterOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setBeforeOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      DateTimeValidators.beforeOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private checkTargetAndSubscribeToRefreshValidations(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup\r\n  ) {\r\n    if (!fieldTarget) throw new Error('formControlTarget must be declared');\r\n\r\n    const formControlTarget = f.get(fieldTarget) as FormControl;\r\n    if (!formControlTarget)\r\n      throw new Error(`${fieldTarget} formControl not exists`);\r\n\r\n    this.subs.add(\r\n      formControlTarget.valueChanges.subscribe((val) =>\r\n        control.updateValueAndValidity({ emitEvent: false })\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormConfigTypes } from '../enums';\r\nimport { FormularioService } from '../formulario.service';\r\nimport { FormFieldConfig,FormConfig, Emptyfield } from '../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-dyn-form',\r\n  templateUrl: './dyn-form.component.html',\r\n  styleUrls: ['./dyn-form.component.scss'],\r\n})\r\nexport class DynFormComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n \r\n  fieldsP: (FormFieldConfig | Emptyfield)[]  = []\r\n  enum = FormConfigTypes\r\n  valueChanges: Subscription;\r\n  @Input() cols: number = 2;\r\n  @Input() gutterSize: string = '1em';\r\n  @Input() rowHeight: string = '130px'\r\n  @Input() fields!: (FormFieldConfig | Emptyfield)[] \r\n  @Output() submitEvent: EventEmitter<any>= new EventEmitter()\r\n  @Output() onChangeEvent: EventEmitter<any> = new EventEmitter()\r\n\r\n  /**\r\n   * Valores a setear en el formulario\r\n   * \r\n   * Setea los valores solo a los campos de las propiedades del objeto\r\n   * \r\n   * Si se quiere limpiar/resetear todo el formulario, pasar null\r\n   */\r\n  @Input() FieldsValues: any;\r\n\r\n  @Input() formConfig: FormConfig = {\r\n    formCustomClass: '',\r\n    submitButtonConfig:{\r\n      text:'SUBMIT',\r\n      color:'primary',\r\n      hidden: false,\r\n      materialButtonType:'raised'\r\n    }\r\n  };\r\n\r\n  forma: FormGroup;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private fs: FormularioService) {\r\n    \r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if( !!changes['FieldsValues'] && changes['FieldsValues'].previousValue != changes['FieldsValues'].currentValue ) {\r\n      this.SetValues()\r\n    }\r\n  }\r\n\r\n  get FormValues(){\r\n    return this.forma.value\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  private SetValues() {\r\n    if (!!this.forma) {\r\n      if (!!this.FieldsValues)\r\n        Object.keys( this.FieldsValues ).forEach( key => {\r\n          this.forma.get(key)?.setValue( this.FieldsValues[key])\r\n        });\r\n      else \r\n        this.forma.reset();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.forma = this.fs.buildFormGroup(this.fields);\r\n    this.fieldsP = this.fields\r\n    this.valueChanges = this.forma.valueChanges.subscribe( v => {\r\n      this.onChangeEvent.emit( this.forma.value )\r\n    });\r\n    if (!!this.FieldsValues)\r\n      this.SetValues();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueChanges.unsubscribe();\r\n    this.fs.ngOnDestroy()\r\n  }\r\n\r\n  OnSubmit(){\r\n    console.log(this.forma)\r\n    this.forma.markAllAsTouched()\r\n    this.submitEvent.emit(this.FormValues)\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div style=\"display: flex\" *ngIf=\"!!forma\">\r\n  <form\r\n    [formGroup]=\"forma\"\r\n    autocomplete=\"off\"\r\n    [class]=\"formConfig.formCustomClass\"\r\n    (ngSubmit)=\"OnSubmit()\"\r\n  >\r\n  <mat-grid-list [rowHeight]=\"rowHeight\" [cols]=\"cols\" [gutterSize]=\"gutterSize\">\r\n\r\n    <ng-container\r\n      *ngFor=\"let field of fields\"\r\n      [class.field-container]=\"field.type != enum.EmptyCol && !field.hidden\"\r\n    >\r\n    <mat-grid-tile colspan=\"{{ field.cols }}\" >\r\n      <div *ngIf=\"field.type != enum.EmptyCol &&  !field.hidden\" class=\"{{'mw-100 ' + field.templateOptions.customClass || ''}} \">\r\n        <div [ngSwitch]=\"field.type\">\r\n\r\n          <div *ngSwitchCase=\"'text'\">\r\n            <sof-text-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-text-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'dense-text'\">\r\n            <sof-dense-text-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-dense-text-control>\r\n          </div>\r\n\r\n\r\n          <div *ngSwitchCase=\"'checkbox'\">\r\n            <sof-checkbox-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-checkbox-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'text-area'\">\r\n            <sof-text-area-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [rowsArea]=\"field.templateOptions.rowsArea || 2\"\r\n              [resizeable]=\"field.templateOptions.resizeable || false\"\r\n            ></sof-text-area-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'number'\">\r\n            <sof-number-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-number-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'radio'\">\r\n            <sof-radio-button-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [list]=\"field.options?.options || []\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n            ></sof-radio-button-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'select'\">\r\n            <sof-select-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [list]=\"field.options?.options || []\"\r\n            ></sof-select-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'autocomplete'\">\r\n            <sof-autocomplete-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [list]=\"field.options?.options || []\"\r\n            ></sof-autocomplete-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'time'\">\r\n            <sof-time-picker-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [format24hs]=\"true\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-time-picker-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'date'\">\r\n            <sof-date-picker-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-date-picker-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'phone'\">\r\n            <sof-phone-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-phone-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'file'\">\r\n            <sof-file-upload-control\r\n              #fileControl\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [multiple]=\"!!field.templateOptions.multiple\"\r\n              [maxSize]=\"\r\n                fileControl.getMaxSizeValueInValidation(field.validations)\r\n              \"\r\n            ></sof-file-upload-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'password'\">\r\n            <sof-password-control\r\n              [label]=\"field.templateOptions.label || ''\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-password-control>\r\n          </div>\r\n\r\n          <div *ngSwitchCase=\"'empty-col'\">\r\n          </div>\r\n          \r\n          <div *ngSwitchDefault>\r\n            <h3>Se desconoce el tipo {{ field.type }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-grid-tile>\r\n    </ng-container>\r\n  </mat-grid-list>\r\n\r\n    <div\r\n      [ngSwitch]=\"formConfig.submitButtonConfig.materialButtonType\"\r\n      *ngIf=\"!formConfig.submitButtonConfig.hidden\"\r\n    >\r\n      <button\r\n        *ngSwitchCase=\"'raised'\"\r\n        mat-raised-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n\r\n      <button\r\n      *ngSwitchCase=\"'outline'\"\r\n      mat-stroked-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    <button\r\n      *ngSwitchCase=\"'text'\"\r\n      mat-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    <button\r\n      *ngSwitchCase=\"'flat'\"\r\n      mat-flat-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynFormComponent } from './dyn-form/dyn-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialControlsModule } from '../material-controls/material-controls.module';\r\nimport { CustomControlsModule } from '../custom-controls/custom-controls.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n@NgModule({\r\n    declarations: [DynFormComponent],\r\n    imports: [ \r\n        CommonModule, \r\n        ReactiveFormsModule,\r\n        MaterialControlsModule,\r\n        MatButtonModule,\r\n        MatGridListModule\r\n    ],\r\n    exports: [DynFormComponent],\r\n    providers: [],\r\n})\r\nexport class DynamicFormModule {}","// Example locale file for English, give this to your locale team to translate\r\n\r\nexport const AG_GRID_LOCALE_ES = {\r\n \r\n    inRangeStart: 'desde',\r\n    inRangeEnd: 'a',\r\n\r\n    // Enterprise Menu Aggregation and Status Bar\r\n    sum: 'Sum',\r\n    min: 'Min',\r\n    max: 'Max',\r\n    none: 'None',\r\n    count: 'Count',\r\n    avg: 'Average',\r\n    filteredRows: 'Filtrado',\r\n    selectedRows: 'Seleccionado',\r\n    totalRows: 'Total Filas',\r\n    totalAndFilteredRows: 'Filas',\r\n    more: 'Mas',\r\n    to: '-',\r\n    of: 'de',\r\n    page: 'Pagina',\r\n    nextPage: 'Siguiente',\r\n    lastPage: 'Anterior',\r\n    firstPage: 'Primera pagina',\r\n    previousPage: 'Pagina previa',\r\n    \r\n    // Row Drag\r\n    rowDragRows: 'rows',\r\n  \r\n    // Other\r\n    loadingOoo: 'Cargando...',\r\n    noRowsToShow: 'No hay filas para mostrar',\r\n    enabled: 'Habilitado',\r\n  \r\n    \r\n  \r\n    // Number Format (Status Bar, Pagination Panel)\r\n    thousandSeparator: ',',\r\n    decimalSeparator: '.',\r\n  };\r\n  ","export const AG_GRID_LOCALE_EN = {\r\n    // Set Filter\r\n    selectAll: '(Select All)',\r\n    selectAllSearchResults: '(Select All Search Results)',\r\n    searchOoo: 'Search...',\r\n    blanks: '(Blanks)',\r\n    noMatches: 'No matches',\r\n\r\n    // Number Filter & Text Filter\r\n    filterOoo: 'Filter...',\r\n    equals: 'Equals',\r\n    notEqual: 'Not equal',\r\n    blank: 'Blank',\r\n    notBlank: 'Not blank',\r\n    empty: 'Choose One',\r\n\r\n    \r\n    \r\n    // Row Drag\r\n    rowDragRows:'rows',\r\n\r\n    // Other\r\n    loadingOoo: 'Loading...',\r\n    noRowsToShow: 'No Rows To Show',\r\n    enabled: 'Enabled',\r\n\r\n    // Menu\r\n    pinColumn: 'Pin Column',\r\n    pinLeft: 'Pin Left',\r\n    pinRight: 'Pin Right',\r\n    noPin: 'No Pin',\r\n    valueAggregation: 'Value Aggregation',\r\n    autosizeThiscolumn: 'Autosize This Column',\r\n    autosizeAllColumns: 'Autosize All Columns',\r\n    groupBy: 'Group by',\r\n    ungroupBy: 'Un-Group by',\r\n    addToValues: 'Add ${variable} to values',\r\n    removeFromValues: 'Remove ${variable} from values',\r\n    addToLabels: 'Add ${variable} to labels',\r\n    removeFromLabels: 'Remove ${variable} from labels',\r\n    resetColumns: 'Reset Columns',\r\n    expandAll: 'Expand All',\r\n    collapseAll: 'Close All',\r\n    copy: 'Copy',\r\n    ctrlC: 'Ctrl+C',\r\n    copyWithHeaders: 'Copy With Headers',\r\n    copyWithHeaderGroups: 'Copy With Header Groups',\r\n    paste: 'Paste',\r\n    ctrlV: 'Ctrl+V',\r\n    export: 'Export',\r\n    csvExport: 'CSV Export',\r\n    excelExport: 'Excel Export',\r\n\r\n    // Enterprise Menu Aggregation and Status Bar\r\n    sum: 'Sum',\r\n    min: 'Min',\r\n    max: 'Max',\r\n    none: 'None',\r\n    count: 'Count',\r\n    avg: 'Average',\r\n    filteredRows: 'Filtered',\r\n    selectedRows: 'Selected',\r\n    totalRows: 'Total Rows',\r\n    totalAndFilteredRows: 'Rows',\r\n    more: 'More',\r\n    to: 'to',\r\n    of: 'of',\r\n    page: 'Page',\r\n    nextPage: 'Next Page',\r\n    lastPage: 'Last Page',\r\n    firstPage: 'First Page',\r\n    previousPage: 'Previous Page',\r\n\r\n    // Pivoting\r\n    pivotColumnGroupTotals: 'Total',\r\n\r\n    // Number Format (Status Bar, Pagination Panel)\r\n    thousandSeparator: ',',\r\n    decimalSeparator: '.'\r\n\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-size',\r\n  templateUrl: './page-size.component.html',\r\n  styleUrls: ['./page-size.component.scss']\r\n})\r\nexport class PageSizeComponent implements OnInit {\r\n\r\n  @Input() pageSize: number = 10;\r\n  previusPageSize: number = this.pageSize\r\n  \r\n  @Output() sizeChangeEvent: EventEmitter<number> = new EventEmitter<number>()\r\n  @Input() pageSizeText: string \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSizeChange(){\r\n    if(this.previusPageSize != this.pageSize){\r\n      this.sizeChangeEvent.emit(this.pageSize)\r\n      this.previusPageSize = this.pageSize\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-custom-group\">\r\n  <label for=\"size\">{{ pageSizeText }}</label>\r\n  <mat-form-field>\r\n    <input\r\n      id=\"size\"\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"pageSize\"\r\n      (blur)=\"onSizeChange()\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { ColDef, ColGroupDef, GridApi } from 'ag-grid-community';\r\n//Idiomas\r\nimport {AG_GRID_LOCALE_ES} from './lang/locale.es'\r\nimport {AG_GRID_LOCALE_EN} from './lang/locale.en'\r\nimport { OnChanges } from '@angular/core';\r\nimport { PageSizeComponent } from './components';\r\n@Component({\r\n  selector: 'app-grid-control',\r\n  templateUrl: './grid-control.component.html',\r\n  styleUrls: ['./grid-control.component.scss'],\r\n})\r\nexport class GridControlComponent implements OnInit,OnChanges {\r\n  private gridApi!: GridApi;\r\n\r\n  @Input() gridRowOptions: boolean = false\r\n  @Input() gridRowData: any[] | null;\r\n  @Input() gridColDefsRaw: (ColDef | ColGroupDef |string)[] = [];\r\n  @Input() gridPaginationPageSize: number = 10;\r\n  @Input() gridPagination: boolean = true;\r\n  /**\r\n   * @summary gridRowSelection indica el tipo de seleccion en la grilla\r\n   * @param single solo se puede seleccionar una fila a la vez\r\n   * @param multiple se pueden seleccionar varias filas\r\n   */\r\n  @Input() gridRowSelection: 'single' | 'multiple' | 'none' = 'single';\r\n  gridColDefs: (ColDef | ColGroupDef)[];\r\n  @Input() localeText:{[key:string]:string} = AG_GRID_LOCALE_EN\r\n  @Input() gridAnimateRows: boolean= false\r\n  @Input() gridPageSizeEditable: boolean= true\r\n  @Input() gridPageSizeText: string = \"Filas por pagina\"\r\n  @ViewChild(AgGridAngular) grid: AgGridAngular;\r\n\r\n  @Input() gridChecboxesToSelection: boolean = true\r\n  rerender: boolean;\r\n\r\n  constructor(private _cdRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.transformColumnRaws();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    /**\r\n     * Espero a que cambie el input de locale para cambiar la propiedad \r\n     * localeText y volver a renderizar ag-grid con este nuevo locale\r\n     */\r\n    const currentLocale = changes['localeText']?.currentValue\r\n    if(currentLocale && currentLocale != changes['localeText'].previousValue){\r\n      this.changeLocale(currentLocale)\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Cambia el localeText en la grilla\r\n   * @param locale objeto con las traducciones que necesito en la configuracion de la grilla\r\n   * @example  \r\n   * ```ts\r\n   * { \r\n     * of: 'de',\r\n      page: 'Pagina',\r\n      nextPage: 'Siguiente',\r\n      lastPage: 'Anterior',\r\n      firstPage: 'Primera pagina',\r\n      previousPage: 'Pagina previa',\r\n    }\r\n   * ```\r\n   */\r\n\r\n  changeLocale(locale?:any){\r\n    if(locale){\r\n      this.localeText = locale\r\n    }\r\n    else {\r\n      this.localeText = (this.localeText == AG_GRID_LOCALE_EN) \r\n      ? AG_GRID_LOCALE_ES : AG_GRID_LOCALE_EN\r\n    }\r\n    this.doRerender()\r\n  }\r\n\r\n  /**\r\n   * Metodo para volver a renderizar la grilla con un ngif en el componente de ag-grid\r\n   */\r\n  doRerender(){\r\n    this.rerender = true;\r\n    this._cdRef.detectChanges();\r\n    this.rerender = false;\r\n  }\r\n  \r\n\r\n  transformColumnRaws() {\r\n    const columnDefs: ColDef[] = this.gridColDefsRaw.map(\r\n      (x: (string|ColDef), i: number) => {\r\n        //Agrego checkbox selection en primer columna\r\n        if (i == 0 && this.gridChecboxesToSelection) {\r\n          const firstColDef = typeof(x) == 'string' ? \r\n              this.normaliseStringToColDef(x) : this.normaliseColDef(x)\r\n          firstColDef.headerCheckboxSelection= true\r\n          firstColDef.checkboxSelection= true\r\n          \r\n          return firstColDef;\r\n        }\r\n         else {\r\n            return typeof(x) == 'string' ?\r\n              this.normaliseStringToColDef(x) : this.normaliseColDef(x)\r\n        }\r\n      }\r\n    );\r\n\r\n    this.gridColDefs = columnDefs;\r\n  }\r\n\r\n  /**\r\n   * Si flex y width estan definidos, flex tiene mas prioridad e ignora el width\r\n   * \r\n   * De ambos, solo el width se normaliza (200)\r\n   * @summary la Normalizacion de una columna consiste en dejar parametros por default(width, soertable, flex,...)\r\n   */\r\n  normaliseColDef(param: ColDef){\r\n    const cd: ColDef = param;\r\n    cd.suppressMovable = true;\r\n    cd.width = param.width ?? 200;\r\n    cd.minWidth = param.minWidth ?? 150;\r\n    cd.sortable = true;\r\n    cd.resizable = param.resizable ?? false ;\r\n    cd.flex = param.flex;\r\n    return cd;\r\n  }\r\n\r\n  normaliseStringToColDef(param: string):ColDef{\r\n    const cd: ColDef = {field:param}\r\n    this.normaliseColDef(cd) \r\n    return cd;\r\n  }\r\n\r\n  onGridReady() {\r\n    this.gridApi= this.grid.api\r\n  }\r\n\r\n  sizeChanged(size: number){\r\n    this.grid.api.paginationSetPageSize(size)\r\n  }\r\n  \r\n}\r\n","\r\n<ng-container *ngIf=\"!rerender && (gridRowData && gridColDefs)\">\r\n    <ag-grid-angular\r\n        style=\"width: 100%;\"\r\n        class=\"ag-theme-material\"\r\n        [rowData]=\"gridRowData\"\r\n        [columnDefs]=\"gridColDefs\"\r\n        [pagination]=\"gridPagination\"\r\n        [paginationPageSize]=\"gridPaginationPageSize\"\r\n        [rowSelection]=\"gridRowSelection\"\r\n        (gridReady)=\"onGridReady()\"\r\n        [suppressRowClickSelection]=\"true\"\r\n        [domLayout]=\"'autoHeight'\"\r\n        [localeText]=\"localeText\"\r\n        [animateRows]=\"gridAnimateRows\"\r\n    >\r\n    </ag-grid-angular>\r\n    <app-page-size *ngIf=\"gridPageSizeEditable\" \r\n    [pageSizeText]=\"gridPageSizeText\" \r\n    (sizeChangeEvent)=\"sizeChanged($event)\" ></app-page-size>\r\n</ng-container>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { MenuOptionConfig } from '../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-row-options',\r\n  templateUrl:'./row-options.component.html',\r\n  styleUrls:['./row-options.component.scss']\r\n})\r\nexport class RowOptionsComponent<T> implements ICellRendererAngularComp {\r\n \r\n  public cellValue!: string;\r\n\r\n  public params: any\r\n  options: MenuOptionConfig<T>[]= []\r\n  constructor(){}\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.params = params;\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(parameters: ICellRendererParams): void {\r\n    this.params = parameters;\r\n    this.options= this.params.menuOptions.filter((opt: MenuOptionConfig<T>)=> {\r\n      // En el caso de que tenga una condicion, la valido\r\n      if(opt.condicion){\r\n        // Valido que entre los values de la condicion este el valor del parametro que apunto (compareToParam)\r\n        return ( opt.condicion.values.includes( this.params.data[opt.condicion.compareToParam])) ?  opt : null\r\n      }\r\n      // Caso contrario devuelvo la opcion,util para casos en lo que la opcion este presente siempre\r\n      else{\r\n        return opt\r\n      }\r\n    })\r\n  }\r\n\r\n  accionar(opt: MenuOptionConfig<T>){\r\n    if (!!opt.actionFn)\r\n      opt.actionFn(this.params.data as T);\r\n  }\r\n\r\n}\r\n\r\n","<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon  matTooltip=\"Opciones\">\r\n      more_vert\r\n  </mat-icon>\r\n</button>\r\n<div >\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item *ngFor=\"let opt of options\" (click)=\"accionar(opt)\" >{{ opt.option }}</button>\r\n  </mat-menu>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { Badge } from '../../interfaces/badge-config';\r\n\r\n@Component({\r\n  selector: 'app-budge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss']\r\n})\r\nexport class BadgeComponent implements ICellRendererAngularComp {\r\n\r\n  config: Badge\r\n  params: any\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(params: ICellRendererParams): void {\r\n    this.params = params\r\n    const configs:  Badge[]  = this.params.badgeConfig;\r\n    const conf = configs.find\r\n      (x => {\r\n        const match =x.condition.values.includes(params.data[x.condition.compareToParam]) \r\n        return match\r\n      })\r\n    if (conf) \r\n      {this.config = conf} \r\n    else \r\n      {throw Error('No hubo match para encontrar el badge')}\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"badge-container\">\r\n  <span *ngIf=\"config\" \r\n      class=\"badge-text\" \r\n      [style.background-color]=\"config.badgeColor\"\r\n      [style.color]=\"config.badgeTextColor\"\r\n      >{{config.text}}</span>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { DateTime } from 'luxon';\r\nimport { DateTimeCellFormat, MenuOptionConfig } from '../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-luxon-datetime-renderer',\r\n  templateUrl:'./luxon-datetime-renderer.component.html',\r\n  styleUrls:['./luxon-datetime-renderer.component.scss']\r\n})\r\nexport class LuxonDateTimeRendererComponent implements ICellRendererAngularComp {\r\n \r\n  public cellValue!: string;\r\n  public params: any;\r\n\r\n  constructor(){}\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.params = params;\r\n    this.setCellValue(this.params);\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(parameters: ICellRendererParams): void {\r\n    this.params = parameters;\r\n    this.setCellValue(this.params);\r\n  }\r\n\r\n  setCellValue(params: any) {\r\n    const config = params.dateTimeConfig as DateTimeCellFormat;\r\n  \r\n    if (!!config?.toFormat)\r\n      this.cellValue = (params.value as DateTime).toFormat(config.toFormat, config.opts);\r\n    else if (!!config?.toLocale)\r\n      this.cellValue = (params.value as DateTime).toLocaleString(config.toLocale, config.opts);\r\n    else\r\n      this.cellValue = (params.value as DateTime).toLocaleString(DateTime.DATETIME_SHORT, config?.opts);\r\n  }\r\n\r\n}\r\n\r\n","{{cellValue}}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GridControlComponent } from './grid-control.component';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular'\r\nimport { RowOptionsComponent } from './components/row-options/row-options.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MaterialControlsModule } from '../material-controls/material-controls.module';\r\nimport {MatButtonModule} from '@angular/material/button'\r\nimport {MatMenuModule} from '@angular/material/menu'\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { BadgeComponent, LuxonDateTimeRendererComponent } from './components';\r\nimport { PageSizeComponent } from './components/page-size/page-size.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MatTooltipModule} from '@angular/material/tooltip'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GridControlComponent,\r\n    RowOptionsComponent, \r\n    BadgeComponent, \r\n    PageSizeComponent, \r\n    LuxonDateTimeRendererComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialControlsModule,FormsModule,\r\n    MatIconModule,\r\n    AgGridModule.withComponents(RowOptionsComponent),\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    GridControlComponent,\r\n    RowOptionsComponent, \r\n    BadgeComponent, \r\n    PageSizeComponent, \r\n    LuxonDateTimeRendererComponent\r\n  ],\r\n\r\n})\r\nexport class GridControlModule { }\r\n","export class LinkSweet{\r\n    private _text: string;\r\n    private _redirecTo: string;\r\n  \r\n  \r\n    public get text(): string {\r\n        return this._text;\r\n    }\r\n    public set text(value: string) {\r\n        this._text = value;\r\n    }\r\n   \r\n    public get redirecTo(): string {\r\n        return this._redirecTo;\r\n    }\r\n    public set redirecTo(value: string) {\r\n        this._redirecTo = value;\r\n    }\r\n  \r\n    constructor(text: string, redirecTo: string){\r\n      this._redirecTo = redirecTo;\r\n      this._text = text;\r\n    }\r\n  }\r\n  ","export interface Dialog{\r\n    confirmButton: string;\r\n    cancelButton: string;\r\n    denyButton: string;\r\n}\r\n\r\nexport interface Confirm{\r\n    confirmButton: string;\r\n    cancelButton: string;\r\n}\r\n\r\nexport class CustomClassSweet{\r\n    basic: string;\r\n    dialog: Dialog;\r\n    confirm: Confirm;\r\n}\r\n  ","import { Inject, Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { SweetAlertIcon, SweetAlertPosition } from 'sweetalert2';\r\nimport { LinkSweet } from '../models/linkSweet.class';\r\nimport { CustomClassSweet } from '../models/customClassSweet.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  private swalWithMatButtonsBasic!: any;\r\n  private swalWithMatButtonsDialog!: any;\r\n  private swalWithMatButtonsConfirm!: any;\r\n\r\n  constructor( @Inject('customClass') customClass?: CustomClassSweet ) { \r\n\r\n    if(customClass){\r\n      this.swalWithMatButtonsBasic = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.basic\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n  \r\n      this.swalWithMatButtonsDialog = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.dialog.confirmButton,\r\n          cancelButton: customClass.dialog.cancelButton,\r\n          denyButton: customClass.dialog.denyButton\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n  \r\n      this.swalWithMatButtonsConfirm = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.confirm.confirmButton,\r\n          cancelButton: customClass.confirm.cancelButton\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n    }else{\r\n      this.swalWithMatButtonsBasic = Swal.mixin({});\r\n      this.swalWithMatButtonsDialog = Swal.mixin({});\r\n      this.swalWithMatButtonsConfirm = Swal.mixin({});\r\n    }\r\n  }\r\n\r\n  \r\n  showBasic( \r\n    title?: string, \r\n    text?: string, \r\n    icon?: SweetAlertIcon \r\n  ){\r\n\r\n    this.swalWithMatButtonsBasic.fire(\r\n      title,\r\n      text,\r\n      icon\r\n    );\r\n\r\n  }\r\n\r\n  showCustom( \r\n    position?: SweetAlertPosition, \r\n    title?: string, \r\n    text?: string, \r\n    icon?: SweetAlertIcon, \r\n    timer: number = 2500, \r\n    showConfirmButton: boolean = false, \r\n    confirmButtonText: string = 'OK' \r\n  ){\r\n\r\n    if(timer){\r\n      showConfirmButton = false;\r\n      confirmButtonText = '';\r\n    }\r\n\r\n    this.swalWithMatButtonsBasic.fire({\r\n      position,\r\n      title,\r\n      text,\r\n      icon,\r\n      timer,\r\n      showConfirmButton,\r\n      confirmButtonText\r\n    });\r\n\r\n  }\r\n\r\n  showCustomHTML( \r\n    position?: SweetAlertPosition, \r\n    title?: string, \r\n    html?: string, \r\n    icon?: SweetAlertIcon, \r\n    showCloseButton: boolean = true,\r\n    showCancelButton: boolean = true,\r\n    focusConfirm: boolean = false,\r\n    confirmButtonText?: string,\r\n    cancelButtonText?: string\r\n  ){\r\n\r\n    if(!showCancelButton) cancelButtonText = '';\r\n\r\n    this.swalWithMatButtonsConfirm.fire({\r\n      position,\r\n      title,\r\n      html,\r\n      icon,\r\n      showCloseButton,\r\n      showCancelButton,\r\n      focusConfirm,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: true\r\n    });\r\n    \r\n  }\r\n\r\n  showCustomImage( \r\n    imageUrl: string,\r\n    position?: SweetAlertPosition, \r\n    title?: string,\r\n    text?: string,\r\n    imageWidth: number = 360,\r\n    imageHeight: number = 160,\r\n    imageAlt: string = 'Custom image',\r\n  ){\r\n\r\n    this.swalWithMatButtonsBasic.fire({\r\n      position,\r\n      title,\r\n      text,\r\n      showConfirmButton: false,\r\n      showCloseButton: true,\r\n      imageUrl,\r\n      imageWidth,\r\n      imageHeight,\r\n      imageAlt\r\n    });\r\n\r\n  }\r\n \r\n  async showDialog( \r\n    title?: string, \r\n    text?: string,\r\n    confirmButtonText?: string,\r\n    denyButtonText?: string,\r\n    cancelButtonText?: string,\r\n    mode: boolean = true,\r\n  ): Promise<any>{\r\n\r\n    return await this.swalWithMatButtonsDialog.fire({\r\n      title,\r\n      text,\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      denyButtonText: denyButtonText ? denyButtonText : 'DENEGAR',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: mode\r\n    });\r\n\r\n  }\r\n\r\n  async showConfirm( \r\n    title?: string, \r\n    text?: string,\r\n    icon?: SweetAlertIcon, \r\n    confirmButtonText?: string,\r\n    cancelButtonText?: string,\r\n  ){\r\n\r\n    return await this.swalWithMatButtonsConfirm.fire({\r\n      title,\r\n      text,\r\n      icon,\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: true\r\n    });\r\n  \r\n  }\r\n\r\n  showBasicErrorFooter( \r\n    title?: string, \r\n    text?: string, \r\n    link: LinkSweet | HTMLElement | string = '', \r\n    icon?: SweetAlertIcon  \r\n  ){\r\n\r\n    const footer: LinkSweet | HTMLElement | string = \r\n      link instanceof LinkSweet ? `<a href=\"${link.redirecTo}\" target=\"_blank\">${link.text}</a>` : link;\r\n\r\n      this.swalWithMatButtonsBasic.fire({\r\n      icon,\r\n      title,\r\n      text,\r\n      footer\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { AlertService } from './services/alert.service';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { CustomClassSweet } from './models/customClassSweet.interface';\r\n\r\n//To implement in style.scss or angular.json\r\n/* @import 'node_modules/sof-ng-controls/assets/alerts/scss/alert.global.scss'; */\r\n\r\n@NgModule({\r\n  imports: [\r\n    SweetAlert2Module.forRoot()\r\n  ],\r\n  declarations: [\r\n    \r\n  ],\r\n  providers: [\r\n    AlertService\r\n  ],\r\n  schemas:[]\r\n})\r\nexport class AlertModule { \r\n  static forRoot( customClass: CustomClassSweet | undefined ): ModuleWithProviders<AlertModule> {\r\n    return {\r\n      ngModule: AlertModule,\r\n      providers: [\r\n        AlertModule, \r\n        { \r\n          provide: 'customClass', \r\n          useValue: customClass\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ControlsComponent } from './controls.component';\r\nimport { ErrorsConfigurations } from './validations/configuration/errors-configuration';\r\nimport { MaterialControlsModule } from './material-controls/material-controls.module';\r\nimport { DynamicFormModule } from './dynamic-form/dyn-form.module';\r\nimport { GridControlModule } from './grid-control/grid-control.module';\r\nimport { AlertModule } from './alerts/alert.module';\r\nimport { CustomClassSweet } from './alerts/models/customClassSweet.interface';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControlsComponent,\r\n  ],\r\n  imports: [],\r\n  exports: [\r\n    ControlsComponent,\r\n    MaterialControlsModule,\r\n    DynamicFormModule,\r\n    GridControlModule,\r\n    AlertModule\r\n  ]\r\n})\r\nexport class ControlsModule {\r\n  static forRoot(\r\n    libConfiguration: ErrorsConfigurations,\r\n    customClass: CustomClassSweet | undefined\r\n  ): ModuleWithProviders<ControlsModule> {\r\n    AlertModule.forRoot(customClass);\r\n    return {\r\n      ngModule: ControlsModule,\r\n      providers: [\r\n        {\r\n          provide: ErrorsConfigurations,\r\n          useValue: libConfiguration,\r\n        },\r\n        { \r\n          provide: 'customClass', \r\n          useValue: customClass\r\n        }\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { from } from 'rxjs';\r\n\r\n/*\r\n * Public API Surface of controls\r\n */\r\nexport * from './lib/controls.service';\r\nexport * from './lib/controls.component';\r\nexport * from './lib/controls.module';\r\n\r\n// Dynamic form\r\nexport * from './lib/dynamic-form/dyn-form.module'\r\nexport * from './lib/dynamic-form/formulario.service'\r\nexport * from './lib/dynamic-form/dyn-form/dyn-form.component'\r\n\r\n//Base Control\r\nexport * from './lib/base/base-form-control/base-form-control'\r\n\r\n//Grid Control\r\nexport * from './lib/grid-control/components'\r\nexport * from './lib/grid-control/grid-control.component'\r\nexport * from './lib/grid-control/grid-control.module'\r\n//export * from './lib/grid-control/services/grid-option-action-handler.service'\r\nexport * from './lib/grid-control/interfaces'\r\nexport * from './lib/grid-control/lang'\r\n\r\n\r\n// Material controls\r\nexport * from './lib/material-controls/material-controls.module'\r\nexport * from './lib/material-controls'\r\n\r\n\r\n\r\nexport * from './lib/dynamic-form/interfaces'\r\nexport * from './lib/dynamic-form/enums'\r\nexport * from './lib/validations'\r\n\r\n\r\n//Alerts Module\r\nexport * from './lib/alerts/alert.module';\r\nexport * from './lib/alerts/services/alert.service';\r\nexport * from './lib/alerts/models/customClassSweet.interface';\r\nexport * from './lib/alerts/models/linkSweet.class';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}