{"version":3,"file":"sof-ng-controls.mjs","sources":["../../../projects/controls/src/lib/controls.service.ts","../../../projects/controls/src/lib/controls.component.ts","../../../projects/controls/src/lib/validations/configuration/errors-configuration.ts","../../../projects/controls/src/lib/base/base-form-control/base-form-control.ts","../../../projects/controls/src/lib/base/text-control/text-control.component.ts","../../../projects/controls/src/lib/validations/configuration/default-error-messages.ts","../../../projects/controls/src/lib/base/error/error.component.ts","../../../projects/controls/src/lib/material-controls/error/error.component.ts","../../../projects/controls/src/lib/material-controls/error/error.component.html","../../../projects/controls/src/lib/material-controls/text-control/text-control-component.ts","../../../projects/controls/src/lib/material-controls/text-control/text-control-component.html","../../../projects/controls/src/lib/base/text-area-control/text-area-control.component.ts","../../../projects/controls/src/lib/material-controls/text-area-control/text-area-control-component.ts","../../../projects/controls/src/lib/material-controls/text-area-control/text-area-control-component.html","../../../projects/controls/src/lib/base/number-control/number-control.component.ts","../../../projects/controls/src/lib/directives/Integer-input.directive.ts","../../../projects/controls/src/lib/material-controls/number-control/number-control-component.ts","../../../projects/controls/src/lib/material-controls/number-control/number-control-component.html","../../../projects/controls/src/lib/base/checkbox-control/checkbox-control.component.ts","../../../projects/controls/src/lib/material-controls/checkbox-control/checkbox-control-component.ts","../../../projects/controls/src/lib/material-controls/checkbox-control/checkbox-control-component.html","../../../projects/controls/src/lib/base/radio-button-control/radio-button-control.component.ts","../../../projects/controls/src/lib/material-controls/radio-button-control/radio-button-control-component.ts","../../../projects/controls/src/lib/material-controls/radio-button-control/radio-button-control-component.html","../../../projects/controls/src/lib/base/select-control/select-control.component.ts","../../../projects/controls/src/lib/material-controls/select-control/select-control-component.ts","../../../projects/controls/src/lib/material-controls/select-control/select-control-component.html","../../../projects/controls/src/lib/base/autocomplete-control/autocomplete-control.component.ts","../../../projects/controls/src/lib/material-controls/autocomplete-control/autocomplete-control-component.ts","../../../projects/controls/src/lib/material-controls/autocomplete-control/autocomplete-control-component.html","../../../projects/controls/src/lib/base/date-picker-control/date-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/date-picker-control/date-picker-control-component.ts","../../../projects/controls/src/lib/material-controls/date-picker-control/date-picker-control-component.html","../../../projects/controls/src/lib/base/time-picker-control/time-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/time-picker-control/time-picker-control.component.ts","../../../projects/controls/src/lib/material-controls/time-picker-control/time-picker-control.component.html","../../../projects/controls/src/lib/base/file-upload-control/file-upload-control.component.ts","../../../projects/controls/src/lib/validations/data-validators.ts","../../../projects/controls/src/lib/validations/date-validators.ts","../../../projects/controls/src/lib/validations/file-validators.ts","../../../projects/controls/src/lib/validations/number-validators.ts","../../../projects/controls/src/lib/validations/required-validators.ts","../../../projects/controls/src/lib/validations/text-validators.ts","../../../projects/controls/src/lib/validations/validation-types.ts","../../../projects/controls/src/lib/validations/validations.module.ts","../../../projects/controls/src/lib/material-controls/file-upload-control/file-upload-control-component.ts","../../../projects/controls/src/lib/material-controls/file-upload-control/file-upload-control-component.html","../../../projects/controls/src/lib/base/phone-control/phone-control.ts","../../../projects/controls/src/lib/material-controls/phone-control/phone-control.component.ts","../../../projects/controls/src/lib/material-controls/phone-control/phone-control.component.html","../../../projects/controls/src/lib/base/password-control/password-control.component.ts","../../../projects/controls/src/lib/material-controls/password-control/password-control.component.ts","../../../projects/controls/src/lib/material-controls/password-control/password-control.component.html","../../../projects/controls/src/lib/material-controls/card/card-component.ts","../../../projects/controls/src/lib/material-controls/card/card-component.html","../../../projects/controls/src/lib/material-controls/search-box-control/search-box-control-component.ts","../../../projects/controls/src/lib/material-controls/search-box-control/search-box-control-component.html","../../../projects/controls/src/lib/material-controls/dense-text-control/dense-text-control-component.ts","../../../projects/controls/src/lib/material-controls/dense-text-control/dense-text-control-component.html","../../../projects/controls/src/lib/material-controls/doc-control/doc-control.component.ts","../../../projects/controls/src/lib/material-controls/doc-control/doc-control.component.html","../../../projects/controls/src/lib/base/checkbox-group-control/checkbox-group-control.component.ts","../../../projects/controls/src/lib/material-controls/checkbox-group-control/checkbox-group-control-component.ts","../../../projects/controls/src/lib/material-controls/checkbox-group-control/checkbox-group-control-component.html","../../../projects/controls/src/lib/material-controls/material-controls.module.ts","../../../projects/controls/src/lib/dynamic-form/enums/action-form-types.ts","../../../projects/controls/src/lib/dynamic-form/enums/form-config-types.ts","../../../projects/controls/src/lib/dynamic-form/formulario.service.ts","../../../projects/controls/src/lib/dynamic-form/dyn-form/dyn-form.component.ts","../../../projects/controls/src/lib/dynamic-form/dyn-form/dyn-form.component.html","../../../projects/controls/src/lib/dynamic-form/dyn-form.module.ts","../../../projects/controls/src/lib/grid-control/lang/locale.es.ts","../../../projects/controls/src/lib/grid-control/lang/locale.en.ts","../../../projects/controls/src/lib/grid-control/components/page-size/page-size.component.ts","../../../projects/controls/src/lib/grid-control/components/page-size/page-size.component.html","../../../projects/controls/src/lib/grid-control/grid-control.component.ts","../../../projects/controls/src/lib/grid-control/grid-control.component.html","../../../projects/controls/src/lib/grid-control/components/row-options/row-options.component.ts","../../../projects/controls/src/lib/grid-control/components/row-options/row-options.component.html","../../../projects/controls/src/lib/grid-control/components/budge/badge.component.ts","../../../projects/controls/src/lib/grid-control/components/budge/badge.component.html","../../../projects/controls/src/lib/grid-control/components/luxon-datetime-renderer/luxon-datetime-renderer.component.ts","../../../projects/controls/src/lib/grid-control/components/luxon-datetime-renderer/luxon-datetime-renderer.component.html","../../../projects/controls/src/lib/grid-control/grid-control.module.ts","../../../projects/controls/src/lib/alerts/models/linkSweet.class.ts","../../../projects/controls/src/lib/alerts/models/customClassSweet.interface.ts","../../../projects/controls/src/lib/alerts/services/alert.service.ts","../../../projects/controls/src/lib/alerts/alert.module.ts","../../../projects/controls/src/lib/controls.module.ts","../../../projects/controls/src/lib/grid-control/services/grid-handler.service.ts","../../../projects/controls/src/public-api.ts","../../../projects/controls/src/sof-ng-controls.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControlsService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-controls',\r\n  template: `\r\n    <p>\r\n      controls works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class ControlsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export class ErrorsConfigurations {\r\n    [key: string]: FormatErrorFunction;\r\n    // errorsConfigurations!: ErrorMessage[];\r\n}\r\n\r\nexport interface ErrorMessage {\r\n    error: string;\r\n    // format?: FormatErrorFunction;\r\n}\r\n\r\nexport declare type FormatErrorFunction = (label?: string, error?: any) => string;\r\n\r\n","import { Component, DoCheck, EventEmitter, Input, Optional, Output, Self, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class BaseFormFieldComponent implements ControlValueAccessor, DoCheck {\r\n  @Input() info!: string;\r\n  @Input() description!: string;\r\n  @Input() label!: string;\r\n  @Input() placeholder!: string;\r\n  @Input() maxLength!: string;\r\n  // tslint:disable-next-line: no-output-native\r\n  @Output() change = new EventEmitter<any>();\r\n  @Input() noLabel?: boolean | undefined = false;\r\n  @Input() sideLabel?: boolean | undefined = false;\r\n\r\n\r\n  value: any;\r\n  disabled = false;\r\n  isRequired = false;\r\n  invalid!: boolean;\r\n\r\n  get EsInvalido(){\r\n    return (!!this.controlDir && this.controlDir.touched && this.controlDir.invalid) || false\r\n  }\r\n\r\n  onChange = (value: any) => {};\r\n  onTouch = () => {};\r\n\r\n  constructor(@Optional() @Self() public controlDir: NgControl) {\r\n    if (controlDir) {\r\n      controlDir.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.controlDir?.control instanceof FormControl) {\r\n      // check if this field is required or not to display a 'required label'\r\n      const validator = this.controlDir.control.errors;\r\n      this.isRequired =\r\n        Boolean(validator && validator.hasOwnProperty('required')) ||\r\n        Boolean(validator && validator.hasOwnProperty('selectedCount'));\r\n    }\r\n  }\r\n\r\n  get hasErrors(): boolean {\r\n    return (\r\n      this.controlDir?.control &&\r\n      this.controlDir?.control.touched &&\r\n      !!this.controlDir?.control.errors\r\n    ) ?? false;\r\n  }\r\n\r\n  get errors(): ValidationErrors | null {\r\n    return this.controlDir?.control?.errors ?? null;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouch();\r\n  }\r\n\r\n  protected changeValue(value: any): void {\r\n    this.setInputValue(value);\r\n    this.onTouch();\r\n    this.onChange(this.value);\r\n    this.change.emit(this.value);\r\n  }\r\n\r\n  protected setInputValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class TextControlComponent extends BaseFormFieldComponent  {\r\n\r\n  \r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { ErrorsConfigurations } from \"./errors-configuration\";\r\n\r\nexport const defaultErrorMessages: ErrorsConfigurations = {\r\n    'required': (label?: string) => 'El campo es requerido',\r\n    'maxlength': (label?: string, error?: any) => `El campo no puede ser mayor a ${error.maxlength}`,\r\n    'minlength': (label?: string, error?: {actualLength: number, requiredLength: number}) => label + ' minLength!! ' + error?.requiredLength,\r\n    'cuit': (label?: string) => 'El campo no tiene el formato correcto',\r\n};","import { Component, Input, ChangeDetectorRef, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport { defaultErrorMessages } from '../../validations/configuration/default-error-messages';\r\nimport { ErrorsConfigurations } from '../../validations/configuration/errors-configuration';\r\n\r\n@Component({\r\n  selector: 'sof-error',\r\n  template: ''\r\n})\r\nexport class ErrorComponent implements OnChanges{\r\n\r\n  @Input() translateFuncion: (arg: string) => string = (param:string)=>param;\r\n  @Input() controlInvalido: boolean = false\r\n\r\n  @Input() \r\n  set errors(value: ValidationErrors | null) {\r\n    this.errorsList = value ? Object.keys(value).map(k => this.resolveErrorMessage(k, value[k])) : null;\r\n  }\r\n\r\n  get errors(): ValidationErrors | null {\r\n    return this.errorsList as any;\r\n  }\r\n\r\n  @Input() label!: string;\r\n\r\n  errorsList!: string[] | null;\r\n\r\n  constructor(private config: ErrorsConfigurations, private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['controlInvalido']?.currentValue || !!changes['errors']?.currentValue){\r\n        this.actualizarErrores()\r\n    }\r\n  }\r\n  \r\n  private resolveErrorMessage(errorName: string, value: any): string {\r\n\r\n    const msg = !!value.customMessage ? value.customMessage\r\n      : this.config[errorName] ? this.config[errorName](this.label, value) \r\n      : defaultErrorMessages[errorName] ? defaultErrorMessages[errorName](this.label, value) \r\n      : '';\r\n\r\n    return msg    \r\n  }  \r\n\r\n  actualizarErrores(){\r\n    this.errorsList = this.errorsList ? this.errorsList.map(e => this.translateFuncion(e)) : null\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ValidationErrors } from '@angular/forms';\r\nimport { ErrorComponent } from '../../base/error/error.component';\r\nimport { ErrorsConfigurations } from '../../validations/configuration/errors-configuration';\r\n\r\n@Component({\r\n  selector: 'sof-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorMaterialComponent extends ErrorComponent implements OnChanges {\r\n  \r\n  \r\n\r\n}\r\n","<ng-container *ngIf=\"controlInvalido\">\r\n    <mat-error *ngFor=\"let error of errorsList\">{{error}}</mat-error>\r\n</ng-container>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n\r\n@Component({\r\n  selector: 'sof-text-control',\r\n  templateUrl: './text-control-component.html',\r\n  styleUrls: ['./text-control-component.scss'],\r\n})\r\nexport class TextMaterialControlComponent extends TextControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n>{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input\r\n      #inputRef=\"matInput\"\r\n      matInput\r\n      class=\"form-control\"\r\n      [placeholder]=\"placeholder\"\r\n      [value]=\"value\"\r\n      [disabled]=\"disabled\"\r\n      type=\"text\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [maxLength]=\"maxLength ? maxLength : 9999\"\r\n    />\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class TextAreaControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { TextAreaControlComponent } from '../../base/text-area-control/text-area-control.component';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-text-area-control',\r\n  templateUrl: './text-area-control-component.html',\r\n  styleUrls: ['./text-area-control-component.scss'],\r\n})\r\nexport class TextAreaMaterialControlComponent extends TextAreaControlComponent {\r\n\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n  @Input() resizeable = false\r\n  @Input() rowsArea = 2\r\n}\r\n","<mat-label [ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido,\r\n  'active-label': inputRef.focused,\r\n  'no-label': noLabel,\r\n  'side-label': sideLabel\r\n}\">{{label}}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\"\r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n\r\n    <textarea\r\n      [ngClass]=\"{'no-resizeable':!resizeable}\"\r\n      matInput\r\n      #inputRef=\"matInput\"\r\n      class=\"form-control\"\r\n      [placeholder]=\"placeholder\"\r\n      [rows]=\"rowsArea\"\r\n      [value]=\"value\"\r\n      [disabled]=\"disabled\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [maxLength]=\"maxLength ? maxLength : 9999\"\r\n    >\r\n    </textarea>\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class NumberControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[IntegerInput]',\r\n})\r\nexport class IntegerInputDirective  {\r\n  \r\n  @Input() ignoreSpaces: boolean = true;\r\n  private allowedKeyCodes: number[] = [\r\n    13, //Enter \r\n    8,  //Backspace\r\n    46, //Delete\r\n    9,  //Tab\r\n    35, //End\r\n    36, //Home\r\n    37, //Left\r\n    39, //Right\r\n    17, //Ctrl\r\n  ]\r\n\r\n  constructor() { }\r\n\r\n  private validInputCode(code: any) : boolean {\r\n    return this.allowedKeyCodes.indexOf(code) != -1;\r\n  }\r\n\r\n  private isPasteEvent(event: any) : boolean {\r\n    return event.ctrlKey && event.key == \"v\";\r\n  }\r\n\r\n  //Can be deleted since keydown is triggered before\r\n  @HostListener('keypress', ['$event'])\r\n  onKeypress(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    if (notNumbers.test(event.key) && !this.validInputCode(event.which ? event.which : event.keyCode) && !this.isPasteEvent(event)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  //Can be deleted since keydown is triggered before\r\n  @HostListener('keyup', ['$event'])\r\n  onKeyup(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    if (notNumbers.test(event.key) && !this.validInputCode(event.which ? event.which : event.keyCode) && !this.isPasteEvent(event)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    if (notNumbers.test(event.key) && !this.validInputCode(event.which ? event.which : event.keyCode) && !this.isPasteEvent(event)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  //Can be deleted since keydown is triggered before\r\n  @HostListener('input', ['$event'])\r\n  onInput(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    if (notNumbers.test(event.data)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  //Can be deleted since keydown is triggered before\r\n  @HostListener('ionChange', ['$event'])\r\n  onIonChange(event: any) {\r\n    event.currentTarget.value = event.currentTarget.value.replace(/\\D/g,'');\r\n  }\r\n\r\n  @HostListener('paste', ['$event'])\r\n  onPaste(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    let input = event.clipboardData.getData('text');\r\n\r\n    if (this.ignoreSpaces)\r\n      input = input.replaceAll(' ', '');\r\n\r\n    if (notNumbers.test(input)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: any) {\r\n    const notNumbers = /[^0-9]/;\r\n    let input = event.dataTransfer.getData(\"text\");\r\n\r\n    if (this.ignoreSpaces)\r\n      input = input.replaceAll(' ', '');\r\n    \r\n    if (notNumbers.test(input)) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n}","import { Component, ViewChild } from '@angular/core';\r\nimport { NumberControlComponent } from '../../base/number-control/number-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-number-control',\r\n  templateUrl: './number-control-component.html',\r\n  styleUrls: ['./number-control-component.scss'],\r\n})\r\nexport class NumberMaterialControlComponent extends NumberControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  \r\n}\r\n","<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n      [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n      <input \r\n          matInput\r\n          #inputRef=\"matInput\"\r\n          class=\"form-control\"\r\n          [placeholder]=\"placeholder\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          type=\"text\"\r\n          (input)=\"onInput($any($event.target).value)\"\r\n          IntegerInput\r\n          [maxLength]=\"maxLength ? maxLength : 9999\">\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class CheckboxControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { CheckboxControlComponent } from '../../base/checkbox-control/checkbox-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-checkbox-control',\r\n  templateUrl: './checkbox-control-component.html',\r\n  styleUrls: ['./checkbox-control-component.scss'],\r\n})\r\nexport class CheckboxMaterialControlComponent extends CheckboxControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-checkbox matInput\r\ncolor=\"primary\"\r\n    class=\"form-control\"\r\n    [checked]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"checkbox\"\r\n    (input)=\"onInput($any($event.target).checked)\">\r\n    {{label}}\r\n</mat-checkbox>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class RadioButtonControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() list!: any[];\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    // console.log(pathArray)\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n      return val;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { RadioButtonControlComponent } from '../../base/radio-button-control/radio-button-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-radio-button-control',\r\n  templateUrl: './radio-button-control-component.html',\r\n  styleUrls: ['./radio-button-control-component.scss'],\r\n})\r\nexport class RadioButtonMaterialControlComponent extends RadioButtonControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label [ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido,\r\n  'no-label': noLabel,\r\n  'side-label': sideLabel\r\n}\">{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n  <mat-radio-group style=\"margin-right: 10px;\"\r\n    matInput\r\n    [disabled]=\"disabled\"\r\n    [name]=\"label\" \r\n    [value]=\"value\" \r\n    [ngClass]=\"{'required-label': isRequired}\"\r\n    [ngClass]=\"{ 'error-field': EsInvalido }\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n    [ngClass]=\"{ 'no-label': noLabel }\"\r\n    [ngClass]=\"{ 'side-label': sideLabel }\"\r\n    >\r\n    <mat-radio-button\r\n      *ngFor=\"let item of list; let i=index\"\r\n      [checked]=\"getValue(item) === value\" \r\n      [value]=\"getValue(item)\">\r\n      {{getText(item)}}\r\n    </mat-radio-button>\r\n  </mat-radio-group>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class SelectControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() list!: any[];\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { SelectControlComponent } from '../../base/select-control/select-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-select-control',\r\n  templateUrl: './select-control-component.html',\r\n  styleUrls: ['./select-control-component.scss'],\r\n})\r\nexport class SelectMaterialControlComponent extends SelectControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","\r\n<mat-label\r\n[ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido,\r\n  'active-label': inputRef.focused,\r\n  'no-label': noLabel,\r\n  'side-label': sideLabel\r\n}\"\r\n>{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <mat-select\r\n      matSelect\r\n      #inputRef=\"matSelect\"\r\n      [disabled]=\"disabled\"\r\n      [(value)]=\"value\"\r\n      (selectionChange)=\"onInput($event.value)\"\r\n      [placeholder]=\"placeholder\"> \r\n      <mat-option \r\n        *ngFor=\"let item of list; let i=index\"\r\n        [value]=\"getValue(item)\">\r\n        {{getText(item)}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, Input, Optional, Self } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgControl } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class AutocompleteControlComponent extends BaseFormFieldComponent  {\r\n\r\nconstructor(\r\n  @Optional() @Self() public override controlDir: NgControl,\r\n  private httpClient: HttpClient) {\r\n  super(controlDir);\r\n}\r\n\r\n  onInput(value: string) {\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    if (!item)\r\n      return null;\r\n    \r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    if (!item)\r\n      return '';\r\n\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n    return val;\r\n  }\r\n\r\n\r\n  //Delay para filtrar\r\n  @Input() debounce: number = 300;\r\n\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  //Busqueda en memoria\r\n  @Input() list!: any[];\r\n  // @Input() searchPaths: string[] = ['text'];\r\n\r\n  //Busqueda usado una funcion definida en el componente\r\n  @Input() filterFn!: (filterText: string) => any[];\r\n\r\n  //Busqueda usando un endpoint\r\n  @Input() filterEndPoint!: string;\r\n\r\n  timeoutObj: any;\r\n  filteredList!: any[];\r\n  search(e: any) {\r\n    if (!!e.inputType || !e.target.value) {\r\n      this.changeValue(null);\r\n\r\n      clearTimeout(this.timeoutObj);\r\n      this.timeoutObj = setTimeout(async () => {\r\n        const results = await this.filter(e.target.value);\r\n        this.filteredList = results;\r\n      }, !!this.list ? 0 : this.debounce);\r\n    }\r\n    else\r\n      this.onSelection(e.target.value);\r\n  }\r\n\r\n  async filter(filter: string): Promise<any[]> {\r\n    if (!filter?.trim())\r\n      return [];\r\n    \r\n    if (!!this.list)\r\n      return await this.inMemorySearch(filter);\r\n    else if (!!this.filterFn)\r\n      return await this.functionSearch(filter);\r\n    else if (!!this.filterEndPoint)\r\n      return await this.endpointSearch(filter);\r\n    else\r\n      return [];\r\n  }\r\n\r\n  async inMemorySearch(filter: string): Promise<any[]> {\r\n    const inputArray = filter.split(' ').map(x => x.trim()).filter(x => !!x).map(x => this.normalizeString(x));\r\n    return this.list.filter(x => inputArray.every(f => this.normalizeString( this.getText(x) ).includes(f)))\r\n  }\r\n\r\n  normalizeString(x: string): any {\r\n    return x.toLowerCase().normalize('NFD'); //.replace(/\\p(Diacritic)/gu, \"\");\r\n  }\r\n  \r\n  async functionSearch(filter: string): Promise<any[]> {\r\n    return this.filterFn(filter);\r\n  }\r\n\r\n  async endpointSearch(filter: string): Promise<any> {\r\n    return await lastValueFrom(this.httpClient.get(`${this.filterEndPoint}${encodeURI(filter.trim())}`));\r\n  }\r\n\r\n  onSelection(selectedText: any) {\r\n    const selected = this.filteredList.find(x => this.getText(x) == selectedText);\r\n    this.changeValue(selected);\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { AutocompleteControlComponent } from '../../base/autocomplete-control/autocomplete-control.component';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { NgControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-autocomplete-control',\r\n  templateUrl: './autocomplete-control-component.html',\r\n  styleUrls: ['./autocomplete-control-component.scss'],\r\n})\r\nexport class AutocompleteMaterialControlComponent extends AutocompleteControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n      [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input type=\"text\"\r\n      #inputRef = matInput\r\n      [placeholder]=\"placeholder\"\r\n      matInput\r\n      [value]=\"getText(value)\"\r\n      [disabled]=\"disabled\"\r\n      (input)=\"search($event)\"\r\n      [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" (optionSelected)=\"onSelection($event.option.value)\">\r\n      <mat-option *ngFor=\"let item of filteredList\" [value]=\"getText(item)\">{{getText(item)}}</mat-option>\r\n    </mat-autocomplete>\r\n\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class DatePickerControlComponent extends BaseFormFieldComponent  {\r\n\r\n  onInput(value: string | DateTime) {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  normalizeValue(value: any) {\r\n    if (value == '')\r\n      return null;\r\n\r\n    if (typeof value == 'string') {\r\n      value = DateTime.fromISO(value);\r\n    }\r\n    return value;\r\n  }\r\n  \r\n  getDateString(value: DateTime) {\r\n    return !!value ? `${value.toISODate()}` : '';\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { DatePickerControlComponent } from '../../base/date-picker-control/date-picker-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-date-picker-control',\r\n  templateUrl: './date-picker-control-component.html',\r\n  styleUrls: ['./date-picker-control-component.scss'],\r\n})\r\nexport class DatePickerMaterialControlComponent extends DatePickerControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n          <input matInput\r\n          #inputRef=\"matInput\"\r\n          class=\"form-control\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          [matDatepicker]=\"picker\"\r\n          (dateChange)=\"onInput($any($event.target).value)\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class TimePickerControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: number\r\n\r\n  onInput(value: any) {\r\n    // console.log(value)\r\n    this.changeValue(value)\r\n  }\r\n\r\n  get Hour():number {\r\n    return Number(this.value.split(':')[0] && 0)\r\n  }\r\n\r\n  get Minute():number{\r\n    return Number(this.value.split(':')[1] && 0)\r\n  }\r\n\r\n\r\n  getValue() {\r\n    return { hour: this.Hour, minute:this.Minute }\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { TimePickerControlComponent } from '../../base/time-picker-control/time-picker-control.component';\r\nimport { NgxMaterialTimepickerComponent, NgxMaterialTimepickerTheme } from 'ngx-material-timepicker';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-time-picker-control',\r\n  templateUrl: './time-picker-control.component.html',\r\n  styleUrls: ['./time-picker-control.component.scss'],\r\n})\r\n\r\nexport class TimePickerMaterialControlComponent extends TimePickerControlComponent {\r\n  // @ViewChild('ngx-material-timepicker')\r\n  // timePicker!: NgxMaterialTimepickerComponent;\r\n  // override onInput(value: any): void {\r\n  //     console.log(value)\r\n  // }\r\n\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n\r\n  themes: NgxMaterialTimepickerTheme = {\r\n    container:{\r\n      bodyBackgroundColor:'#424242',\r\n    }\r\n  }\r\n\r\n  @Input() format24hs: boolean = false\r\n\r\n  override onInput(value: any): void {\r\n    value = this.normalizeValue(value);\r\n    this.changeValue(value);\r\n  }\r\n\r\n  \r\n  normalizeValue(value: string){\r\n    if(!value) return null;\r\n    \r\n    const minutes = Number(value.split(':')[1].substring(0,2))\r\n    \r\n    if(value.includes('AM')){\r\n      // console.log('normaliceAM :>> ', value);\r\n      const hours = Number(value.split(':')[0])\r\n      value = `${hours}:${minutes}` \r\n    }\r\n    if(value.includes('PM')){\r\n      // console.log('normalicePM :>> ', value);\r\n\r\n      let hours = Number(value.split(':')[0]) + 12\r\n      if(hours >= 24) {\r\n        hours -= 24\r\n      }\r\n      value = `${hours}:${minutes}`\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    matInput\r\n    #inputRef=\"matInput\"\r\n    [placeholder]=\"placeholder\"\r\n    aria-label=\"12hr format\"\r\n    [ngxTimepicker]=\"picker\"\r\n    [format]=\"format24hs ? 24 : 12\"\r\n    readonly\r\n    [disabled]=\"disabled\"\r\n    [value]=\"value\"\r\n  />\r\n  <ngx-material-timepicker\r\n    #picker\r\n    (timeSet)=\"onInput($event)\"\r\n  ></ngx-material-timepicker>\r\n  </mat-form-field>\r\n\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class FileUploadControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() multiple: boolean = false;\r\n  @Input() accept!: string;\r\n\r\n  onInput(value: any) {\r\n    value = this.normalizeValue(value);\r\n\r\n    this.changeValue(value);\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    value = this.normalizeValue(value);\r\n\r\n    if (value) {\r\n      this.value = value || [];\r\n    } else {\r\n      this.value = [];\r\n    }\r\n  }\r\n\r\n  protected normalizeValue(value: any) {\r\n    if (value instanceof FileList)\r\n      value = Array.from(value);\r\n    return value;\r\n  };\r\n  \r\n  getDisplayFileInfo(): string {\r\n    if (!this.value || this.value.length == 0)\r\n      return '';\r\n\r\n    if (!!this.value.length)\r\n      return Array.prototype.map.call(this.value, x => `${x.name}`).join(', '); \r\n          //o Array.from(this.value).map(x => `${x.name}`).join(', ')\r\n    else\r\n      return `${this.value.name}`;\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class DataValidators {\r\n\r\n  static cuitValidator(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const value: string = control.value!! ? control.value.toString() : null;\r\n      if (value) {\r\n          if (!value.match(/^(23)|(27)|(20)|(30)/)) {\r\n              return { cuit: { currentValue: value, customMessage } };\r\n          }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static email(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.email(control))\r\n        return { email: { email: true, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\"\r\nimport { DateTime } from \"luxon\"\r\n\r\nexport class DateTimeValidators {\r\n\r\n  static maxDate(max: DateTime, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control.value && control.value > max)\r\n        return { maxDate: { maxDate: max, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static minDate(min: DateTime, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control.value && control.value < min)\r\n        return { minDate: { minDate: min, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static afterOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!DateTimeValidators.minDate(formField.value)(control))\r\n        return { afterOrEqualTo: { minDate: formField.value, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static beforeOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!DateTimeValidators.maxDate(formField.value)(control))\r\n        return { beforeOrEqualTo: { maxDate: formField.value, customMessage } }; \r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\"\r\n\r\nexport class FileValidators {\r\n\r\n  static maxFileSize(maxBytes: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control && !!control.value) {\r\n        if (control.value instanceof Array) {\r\n          const overSizedFiles = control.value.filter((x: File) => x.size > maxBytes) as File[];\r\n          console.log('over size files',overSizedFiles)\r\n          console.log('maxBytes',maxBytes, control.value.map((x:File)=>x.size))\r\n          if (overSizedFiles.length > 0)\r\n            return { maxFileSize: { maxFileSize: maxBytes, actualSize: overSizedFiles.map(x => x.size), files: overSizedFiles, customMessage } };\r\n        } else if (control.value instanceof File && control.value.size > maxBytes)\r\n          return { maxFileSize: { maxFileSize: maxBytes, actualSize: control.value.size, files: control.value, customMessage } };\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static acceptedFileTypes(fileTypes: string[], customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!control && !!control.value) {\r\n        if (control.value instanceof Array) {\r\n          const wrongTypeFiles = control.value.filter((x: File) => !fileTypes.some(t => x.type.match(t))) as File[];\r\n          if (!!wrongTypeFiles)\r\n            return { acceptedFileTypes: { acceptedFileTypes: fileTypes, actualTypes: wrongTypeFiles.map(x => x.type), files: wrongTypeFiles, customMessage } };\r\n        } else if (control.value instanceof File && !fileTypes.some(t => control.value.type.match(t)))\r\n          return { acceptedFileTypes: { acceptedFileTypes: fileTypes, actualTypes: control.value.type, files: control.value, customMessage } };\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class NumberValidators {\r\n\r\n  static min(minValue: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.min(minValue)(control))\r\n        return { min: { min: minValue, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static max(maxValue: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.max(maxValue)(control))\r\n        return { max: { max: maxValue, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static lessOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!Validators.max(formField.value)(control))\r\n        return { lessOrEqualTo: { lessOrEqualTo: formField.value, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static moreOrEqualTo(formFieldName: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && !!formField.value && !!Validators.min(formField.value)(control))\r\n        return { moreOrEqualTo: { moreOrEqualTo: formField.value, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class RequiredValidators {\r\n\r\n  static required(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.required(control))\r\n          return { required: { required: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredTrue(customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.requiredTrue(control))\r\n          return { requiredTrue: { requiredTrue: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsEmpty(ifEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const emptyField = control.parent?.get(ifEmptyField);\r\n      if (!!emptyField && !emptyField.value && !!Validators.required(control))\r\n          return { requiredIfFieldIsEmpty: { requiredIfFieldIsEmpty: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsIn(formFieldName: string, values: any[], customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const formField = control?.parent?.get(formFieldName);\r\n      if (!!formField && values.find(x => x == formField.value) && !!Validators.required(control))\r\n        return { requiredIfFieldIsIn: { values: values, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static requiredIfFieldIsNotEmpty(ifNotEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      const emptyField = control.parent?.get(ifNotEmptyField);\r\n      if (!!emptyField && !!emptyField.value && !!Validators.required(control))\r\n          return { requiredIfFieldIsNotEmpty: { requiredIfFieldIsNotEmpty: true, customMessage }};\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //https://medium.com/ngx/3-ways-to-implement-conditional-validation-of-reactive-forms-c59ed6fc3325\r\n  static requiredIf(predicate: () => boolean, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (predicate() && !!Validators.required(control))\r\n        return { requiredIf: { requiredIf: true, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n  static fieldRequiredIfFieldEmpty(requiredField: string, ifEmptyField: string, customMessage?: string): ValidatorFn {\r\n    return (formGroup: AbstractControl) => {\r\n      const field = formGroup.get(requiredField);\r\n      const emptyField = formGroup.get(ifEmptyField);\r\n      if (!!field && !!emptyField)\r\n        if (!field.value && !emptyField.value) {\r\n          let errors = field.errors;\r\n          if (!errors)\r\n            errors = {};\r\n          errors['fieldRequiredIfFieldEmpty'] = { fieldRequiredIfFieldEmpty: { fieldRequiredIfFieldEmpty: true, customMessage }};\r\n          field.setErrors(errors);\r\n        }\r\n        else {\r\n          let errors = field.errors;\r\n          if (!!errors && errors.hasOwnProperty('required')) {\r\n            delete errors['fieldRequiredIfFieldEmpty'];\r\n            field.setErrors(errors);\r\n          }\r\n        }\r\n      return null;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { AbstractControl, ValidatorFn, Validators } from \"@angular/forms\"\r\n\r\nexport class TextValidators {\r\n\r\n  static minLength(minLength: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.minLength(minLength)(control))\r\n        return { minLength: { minLength: minLength, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static maxLength(maxLength: number, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.maxLength(maxLength)(control))\r\n        return { maxLength: { maxLength: maxLength, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n  \r\n  static pattern(pattern: string | RegExp, customMessage?: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      if (!!Validators.pattern(pattern)(control))\r\n        return { pattern: { pattern: pattern, customMessage }}; \r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * Todos los disntintos tipos de validacion\r\n */\r\nexport enum ValidationTypes {\r\n    Required = 'required',\r\n    Min = 'min',\r\n    Max = 'max',\r\n    Function = 'function',\r\n    MinLength = 'minLength',\r\n    MaxLength = 'maxLength',\r\n    Pattern = 'pattern',\r\n    MinDate = 'minDate',\r\n    MaxDate = 'maxDate', \r\n    AfterOrEqualTo = 'afterOrEqualTo',\r\n    BeforeOrEqualTo = 'beforeOrEqualTo',\r\n    MaxFileSize = 'maxFileSize',\r\n    AcceptedTypes = 'AcceptedTypes',\r\n    Email = 'email',\r\n    // Cross Field Validations (requires fieldTarget)\r\n    RequiredIf = 'requiredIf',\r\n    RequiredIfFieldIsEmpty = 'requiredIfFieldIsEmpty',\r\n    RequiredIfFieldIsNotEmpty = 'requiredIfFieldIsNotEmpty',\r\n    LessOrEqualTo = 'lessOrEqualTo',\r\n    MoreOrEqualTo = 'moreOrEqualTo'\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ValidationsModule { }\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FileUploadControlComponent } from '../../base/file-upload-control/file-upload-control.component';\r\nimport { FileInput } from 'ngx-material-file-input';\r\nimport {ValidationTypes  } from '../../validations'\r\nimport {ValidationForm} from '../../dynamic-form/interfaces'\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-file-upload-control',\r\n  templateUrl: './file-upload-control-component.html',\r\n  styleUrls: ['./file-upload-control-component.scss'],\r\n})\r\nexport class FileUploadMaterialControlComponent extends FileUploadControlComponent implements OnInit {\r\n\r\n  @Input() maxSize!:number\r\n  @ViewChild('field', {static: false}) Field: any;\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n\r\n  ngOnInit(): void {\r\n    document.querySelectorAll('ngx-mat-file-input[data-selector=\"mat-input-file\"] input[type=\"file\"]').forEach(e => e.addEventListener('focus', e => {\r\n\r\n      document.getElementById('mat-input-file')?.classList.remove('cdk-focused', 'cdk-keyboard-focused', 'mat-form-field-should-float')\r\n      this.Field._changeDetectorRef._cdRefInjectingView[0]?.classList.remove('mat-form-field-should-float');\r\n      this.Field._changeDetectorRef._cdRefInjectingView[0]?.classList.add('mat-form-field-hide-placeholder');\r\n    }))\r\n  }\r\n\r\n  override onInput(value: any): void {\r\n    value = this.normalizeValue(value);\r\n\r\n    this.changeValue(value);\r\n\r\n    if(this.multiple && value.length > 0 ) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'none';\r\n    } \r\n    else if( value  && !this.multiple) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'none';\r\n    } \r\n    \r\n  }\r\n\r\n  getMaxSizeValueInValidation(validations?: ValidationForm[]){\r\n    if(validations){\r\n      return validations.find(x=>x.type== ValidationTypes.MaxFileSize)?.value\r\n    }\r\n    else return 0\r\n  }\r\n\r\n  getFileInputFromValue(): FileInput {\r\n    if (this.value instanceof File)\r\n      return new FileInput([this.value]);\r\n    else\r\n      return new FileInput(this.value);\r\n  }\r\n\r\n  getFilesName(): string[] {\r\n    const files = this.getFileInputFromValue();\r\n    return files.fileNames? files.fileNames.split(',') : [];\r\n  }\r\n\r\n  deleteItem(key: string) {\r\n    if( this.multiple ){\r\n      this.value = this.value.filter( (f: File) => f.name != key)\r\n    } else {\r\n      this.value = null\r\n    }\r\n\r\n    if( !this.value || this.value.length < 1 ) {\r\n      (this.Field._changeDetectorRef._cdRefInjectingView[0] as HTMLElement).style.display = 'inline-block';\r\n    }\r\n  }\r\n}\r\n","<mat-form-field  appearance=\"outline\" #field >\r\n  <mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido\r\n  }\">\r\n  <mat-icon matSuffix>attachment</mat-icon>\r\n  {{ label }}\r\n  </mat-label>\r\n\r\n  <ngx-mat-file-input \r\n    data-selector=\"mat-input-file\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [disabled]=\"disabled\"\r\n    type=\"file\"\r\n    [multiple]=\"!!multiple\"\r\n    [value]=\"getFileInputFromValue()\"\r\n    [accept]=\"accept\"\r\n    (change)=\"onInput( !!multiple ? $any($event.target).files : $any($event.target).files[0] )\">\r\n  </ngx-mat-file-input>\r\n\r\n  \r\n</mat-form-field>\r\n\r\n<div  *ngIf=\"getFilesName().length > 0\" class=\"row\">\r\n  <div>\r\n    <mat-chip-list *ngFor=\"let file of getFilesName()\">\r\n      <mat-chip >\r\n        {{ file }}\r\n        <button matChipRemove (click)=\"deleteItem(file)\">\r\n          <mat-icon>cancel</mat-icon>\r\n        </button>\r\n      </mat-chip>\r\n    </mat-chip-list>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class PhoneControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: string\r\n\r\n  onInput(value: any) {\r\n    // console.log(value)\r\n    this.changeValue(value)\r\n  }\r\n\r\n  \r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { PhoneControlComponent } from '../../base/phone-control/phone-control';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-phone-control',\r\n  templateUrl: './phone-control.component.html',\r\n  styleUrls: ['./phone-control.component.scss']\r\n})\r\nexport class PhoneMaterialControlComponent extends PhoneControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n      [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n      <input\r\n          #inputRef=\"matInput\"\r\n          matInput\r\n          class=\"form-control\"\r\n          [placeholder]=\"placeholder\"\r\n          [value]=\"value\"\r\n          [disabled]=\"disabled\"\r\n          type=\"tel\"\r\n          (input)=\"onInput($any($event.target).value)\"\r\n          [maxLength]=\"maxLength ? maxLength : 9999\">\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport { BaseFormFieldComponent } from '../base-form-control/base-form-control';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class PasswordControlComponent extends BaseFormFieldComponent {\r\n\r\n  @Input() DefaultValue!: string\r\n\r\n  show: boolean = false;\r\n  showEye: boolean = true\r\n\r\n  onInput(value: any) {\r\n    this.changeValue(value)\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || '';\r\n    } else {\r\n      this.value = '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { PasswordControlComponent } from '../../base/password-control/password-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-password-control',\r\n  templateUrl: './password-control.component.html',\r\n  styleUrls: ['./password-control.component.scss']\r\n})\r\nexport class PasswordMaterialControlComponent extends PasswordControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n    <mat-form-field appearance=\"outline\" \r\n      [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input\r\n      matInput\r\n      #inputRef=\"matInput\"\r\n      [type]=\"show ? 'text' : 'password'\"\r\n      class=\"form-control\"\r\n      [placeholder]=\"placeholder\"\r\n      [value]=\"value\"\r\n      [disabled]=\"disabled\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [maxLength]=\"maxLength ? maxLength : 9999\"\r\n    />\r\n\r\n    <mat-icon *ngIf=\"showEye\" matSuffix (click)=\"show = !show\">\r\n      {{ show ? \"visibility_off\" : \"visibility\" }}\r\n    </mat-icon>\r\n  </mat-form-field>\r\n\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sof-card',\r\n  templateUrl: './card-component.html',\r\n  styleUrls: ['./card-component.scss'],\r\n})\r\nexport class CardComponent {\r\n  @Input() titleText!: string;\r\n  @Input() subTitleText: string = '';\r\n  @Input() expandable: boolean = false;\r\n  @Input() expanded: boolean = true;\r\n  @Output() onToggleExpand = new EventEmitter<any>();\r\n  @Input() isSubCard: boolean = false;\r\n\r\n  toggleExpand() {\r\n    this.expanded = !this.expanded;\r\n    this.onToggleExpand.emit({expanded: this.expanded});\r\n  }\r\n}\r\n","<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\" *ngIf=\"!expandable || expanded\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{titleText}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitleText}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-search-box-control',\r\n  templateUrl: './search-box-control-component.html',\r\n  styleUrls: ['./search-box-control-component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SearchBoxMaterialControlComponent {\r\n  @Input() placeholder!: string;\r\n  @Input() disabled!: boolean;\r\n  @Output() onInput = new EventEmitter<string>();\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  @ViewChild('input') input: ElementRef\r\n  \r\n  onInputEvent(val: string) {\r\n    this.onInput.emit(val);\r\n  }\r\n\r\n  reset(emit: boolean = false) {\r\n    this.input.nativeElement.value = '';\r\n    if (emit)\r\n      this.onInput.emit(this.input.nativeElement.value);\r\n  }\r\n\r\n}\r\n","<mat-form-field appearance=\"outline\"\r\nclass=\"dense\">\r\n  <span matPrefix>\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"Busqueda\" class=\"material-symbols-outlined\">search</mat-icon>\r\n    &nbsp;\r\n  </span>\r\n  <input\r\n    #input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    [placeholder]=\"placeholder\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInputEvent($any($event.target).value)\"\r\n  />\r\n</mat-form-field>","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-dense-text-control',\r\n  templateUrl: './dense-text-control-component.html',\r\n  styleUrls: ['./dense-text-control-component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DenseTextMaterialControlComponent extends TextControlComponent{\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n  \r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused,\r\n    'no-label': noLabel\r\n  }\"\r\n>{{label}}</mat-label>\r\n<mat-form-field appearance=\"outline\"\r\n    class=\"dense\"\r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n  <input\r\n    #inputRef=\"matInput\"\r\n    matInput\r\n    class=\"form-control\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"text\"\r\n    (input)=\"onInput($any($event.target).value)\"\r\n    [maxLength]=\"maxLength ? maxLength : 9999\"\r\n  />\r\n</mat-form-field>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n\r\n","import { Component, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, EventEmitter } from '@angular/core';\r\nimport { TextControlComponent } from '../../base/text-control/text-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\nimport { TypeDocuments } from './type.enum';\r\n\r\n@Component({\r\n  selector: 'sof-doc-control',\r\n  templateUrl: './doc-control.component.html',\r\n  styleUrls: ['./doc-control.component.scss']\r\n})\r\nexport class DocControlComponent extends TextControlComponent implements OnInit, OnChanges {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent;\r\n  \r\n  @Input() type: TypeDocuments = 'DNI';\r\n  @Output() minLength: EventEmitter<number> = new EventEmitter<number>();\r\n  customMask: any;\r\n  \r\n  ngOnInit(): void {\r\n    this.setMask();\r\n  }\r\n  \r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes){\r\n      setTimeout(() => { this.value = null }, 0);\r\n      this.setMask();\r\n    }\r\n  }\r\n\r\n  setMask(){\r\n    switch (this.type) {\r\n      case 'DNI':\r\n        this.customMask = '0.000.000||00.000.000';\r\n        this.minLength.emit(9);\r\n        break;\r\n\r\n      case 'CUIL': \r\n        this.customMask = '00-0.000.000-0||00-00.000.000-0';\r\n        this.minLength.emit(14);\r\n        break;\r\n\r\n      case 'PASAPORTE':\r\n        this.customMask = 'SSS000';\r\n        this.minLength.emit(6);\r\n        break;\r\n      \r\n      default:\r\n        this.customMask = '00.000.000||0.000.000';\r\n        this.minLength.emit(9);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired, \r\n    'text-error': EsInvalido,\r\n    'active-label':inputRef.focused,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\"\r\n>{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\" \r\n    [ngClass]=\"{ 'error-field': EsInvalido }\">\r\n    <input\r\n      #inputRef=\"matInput\"\r\n      matInput\r\n      class=\"form-control\"\r\n      [placeholder]=\"placeholder\"\r\n      [value]=\"value\"\r\n      [disabled]=\"disabled\"\r\n      type=\"text\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [mask]=\"customMask\"\r\n    />\r\n  </mat-form-field>\r\n  <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n  </div>","import { Component, DoCheck, Input } from '@angular/core';\r\nimport { AbstractControl, FormControl, Validators } from '@angular/forms';\r\nimport { BaseFormFieldComponent } from '../../base/base-form-control/base-form-control';\r\nimport { RequiredValidators } from '../../validations';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class CheckboxGroupControlComponent extends BaseFormFieldComponent  {\r\n\r\n  @Input() list!: any[];\r\n  @Input() valuePath: string = 'value';\r\n  @Input() textPath: string = 'text';\r\n\r\n  onInput(item: any, checked: boolean) {\r\n    if (!this.value)\r\n      this.value = {};\r\n\r\n    this.value[this.getValue(item)] = checked;\r\n\r\n    this.changeValue(this.value);\r\n\r\n    //Setear el error de IsRequired ya que solo salta con null y '', y no con {}\r\n    //Mantiene el customMessage original\r\n    if (!Object.keys(this.value).some(prop => this.value[prop] == true))\r\n      if (this.controlDir?.control instanceof FormControl) \r\n        if (!!this.controlDir.control.validator) {\r\n          const validator = this.controlDir.control.validator({} as AbstractControl);\r\n          if (!!validator && !!validator[\"required\"])\r\n            this.controlDir.control.setErrors({...this.controlDir.control.errors, required: validator[\"required\"]});\r\n        }\r\n  }\r\n\r\n  override writeValue(value: any): void {\r\n    if (value) {\r\n      this.value = value || {};\r\n    } else {\r\n      this.value = {};\r\n    }\r\n  }\r\n\r\n  getChecked(item: any) {\r\n    return !!this.value ? this.value[this.getValue(item)] : false;\r\n  }\r\n  \r\n  getValue(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.valuePath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n  \r\n  getText(item: any): any {\r\n    let val = item;\r\n    const pathArray = this.textPath.split('.');\r\n    for (const prop of pathArray)\r\n      val = val[prop];\r\n    \r\n      return val;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { CheckboxGroupControlComponent } from '../../base/checkbox-group-control/checkbox-group-control.component';\r\nimport { ErrorMaterialComponent } from '../error/error.component';\r\n\r\n@Component({\r\n  selector: 'sof-checkbox-group-control',\r\n  templateUrl: './checkbox-group-control-component.html',\r\n  styleUrls: ['./checkbox-group-control-component.scss'],\r\n})\r\nexport class CheckboxGroupMaterialControlComponent extends CheckboxGroupControlComponent {\r\n  @ViewChild(ErrorMaterialComponent) errorControl: ErrorMaterialComponent\r\n\r\n}\r\n","<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\">{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n    <div class=\"checkbox-group\"\r\n    [ngClass]=\"{ 'no-label': noLabel }\"\r\n    [ngClass]=\"{ 'side-label': sideLabel }\"\r\n    >\r\n        <mat-checkbox matInput\r\n            *ngFor=\"let item of list; let i=index\"\r\n            color=\"primary\"\r\n            class=\"form-control\"\r\n            [checked]=\"getChecked(item)\"\r\n            [disabled]=\"disabled\"\r\n            type=\"checkbox\"\r\n            (input)=\"onInput(item, $any($event.target).checked)\">\r\n            {{getText(item)}}\r\n        </mat-checkbox>\r\n    </div>\r\n    <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TextMaterialControlComponent } from './text-control/text-control-component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ErrorMaterialComponent } from './error/error.component';\r\nimport { TextAreaMaterialControlComponent } from './text-area-control/text-area-control-component';\r\nimport { NumberMaterialControlComponent } from './number-control/number-control-component';\r\nimport { CheckboxMaterialControlComponent } from './checkbox-control/checkbox-control-component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { RadioButtonMaterialControlComponent } from './radio-button-control/radio-button-control-component';\r\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SelectMaterialControlComponent } from './select-control/select-control-component';\r\nimport { AutocompleteMaterialControlComponent } from './autocomplete-control/autocomplete-control-component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { DatePickerMaterialControlComponent } from './date-picker-control/date-picker-control-component';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { TimePickerMaterialControlComponent } from './time-picker-control/time-picker-control.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FileUploadMaterialControlComponent } from './file-upload-control/file-upload-control-component';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatLuxonDateModule } from '@angular/material-luxon-adapter';\r\nimport { PhoneMaterialControlComponent } from './phone-control/phone-control.component';\r\nimport { PasswordMaterialControlComponent } from './password-control/password-control.component';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CardComponent } from './card/card-component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { HttpClientModule } from '@angular/common/http'; // Es para el autocomplete cuando se carga desde un endpoint\r\nimport { SearchBoxMaterialControlComponent } from './search-box-control/search-box-control-component';\r\nimport { DenseTextMaterialControlComponent } from './dense-text-control/dense-text-control-component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { DocControlComponent } from './doc-control/doc-control.component';\r\nimport { IntegerInputDirective } from '../directives/Integer-input.directive';\r\nimport { CheckboxGroupMaterialControlComponent } from './checkbox-group-control/checkbox-group-control-component';\r\n\r\n@NgModule({\r\n  providers:[\r\n  {\r\n    provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n    useValue: { color: 'primary' }}\r\n  ],\r\n  declarations: [\r\n    TextMaterialControlComponent,\r\n    TextAreaMaterialControlComponent,\r\n    NumberMaterialControlComponent,\r\n    CheckboxMaterialControlComponent,\r\n    RadioButtonMaterialControlComponent,\r\n    SelectMaterialControlComponent,\r\n    AutocompleteMaterialControlComponent,\r\n    TimePickerMaterialControlComponent,\r\n    DatePickerMaterialControlComponent,\r\n    FileUploadMaterialControlComponent,\r\n    ErrorMaterialComponent,\r\n    PhoneMaterialControlComponent,\r\n    PasswordMaterialControlComponent,\r\n    CardComponent,\r\n    SearchBoxMaterialControlComponent,\r\n    DenseTextMaterialControlComponent,\r\n    DocControlComponent,\r\n    IntegerInputDirective,\r\n    CheckboxGroupMaterialControlComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    NgxMaterialTimepickerModule,\r\n    MatDatepickerModule,\r\n    MatButtonModule,\r\n    MatLuxonDateModule,\r\n    MaterialFileInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  exports: [\r\n    TextMaterialControlComponent,\r\n    TextAreaMaterialControlComponent,\r\n    NumberMaterialControlComponent,\r\n    CheckboxMaterialControlComponent,\r\n    RadioButtonMaterialControlComponent,\r\n    SelectMaterialControlComponent,\r\n    AutocompleteMaterialControlComponent,\r\n    TimePickerMaterialControlComponent,\r\n    DatePickerMaterialControlComponent,\r\n    FileUploadMaterialControlComponent,\r\n    PhoneMaterialControlComponent,\r\n    PasswordMaterialControlComponent,\r\n    CardComponent,\r\n    SearchBoxMaterialControlComponent,\r\n    DenseTextMaterialControlComponent,\r\n    DocControlComponent,\r\n    CheckboxGroupMaterialControlComponent,\r\n  ]\r\n})\r\nexport class MaterialControlsModule { }\r\n","/**\r\n * Representa el tipo de una accion\r\n */\r\nexport enum ActionFormTypes {\r\n    Hide,\r\n    Show,\r\n    Reset,\r\n    Dissable,  \r\n    Enable,\r\n    SetValue,\r\n    FillOptions\r\n  }\r\n  ","/**\r\n * Representa el tipo de campo de un formulario\r\n */\r\nexport enum FormConfigTypes {\r\n  Text = 'text',\r\n  DenseText = 'dense-text',\r\n  TextArea = 'text-area',\r\n  Number = 'number',\r\n  Checkbox = 'checkbox',\r\n  Radio = 'radio',\r\n  Select = 'select',\r\n  Autocomplete = 'autocomplete',\r\n  Time = 'time',\r\n  Date = 'date',\r\n  File = 'file',\r\n  Phone = 'phone',\r\n  Password = 'password',\r\n  EmptyCol = 'empty-col',\r\n  CheckboxGroup = 'checkbox-group'\r\n}\r\n\r\n\r\nexport type FieldControlType = \r\n  FormConfigTypes.Text |\r\n  FormConfigTypes.DenseText |\r\n  FormConfigTypes.TextArea |\r\n  FormConfigTypes.Number |\r\n  FormConfigTypes.Checkbox |\r\n  FormConfigTypes.Radio |\r\n  FormConfigTypes.Select |\r\n  FormConfigTypes.Autocomplete |\r\n  FormConfigTypes.Date |\r\n  FormConfigTypes.Time |\r\n  FormConfigTypes.File |\r\n  FormConfigTypes.Phone |\r\n  FormConfigTypes.Password |\r\n  FormConfigTypes.CheckboxGroup \r\n\r\n\r\n  ","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActionForm,\r\n  ConditionForm,\r\n  Emptyfield,\r\n  FieldConfig,\r\n  FormFieldConfig,\r\n  ValidationForm,\r\n} from './interfaces';\r\nimport { ActionFormTypes, FormConfigTypes, ValidationTypes } from './enums';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n} from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DateTime } from 'luxon';\r\nimport {\r\n  DataValidators,\r\n  RequiredValidators,\r\n  NumberValidators,\r\n  TextValidators,\r\n  FileValidators,\r\n  DateTimeValidators,\r\n} from '../validations';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FormularioService {\r\n  private subs: Subscription;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient) {\r\n    console.log('Inicio servicio form');\r\n    this.subs = new Subscription();\r\n  }\r\n\r\n  buildFormGroup(fields: FormFieldConfig[]): FormGroup {\r\n    const formGroup = this.fb.group({});\r\n\r\n    fields.forEach((field) => {\r\n      if( field.type == FormConfigTypes.EmptyCol && (field as any)['key']){\r\n        console.error('Ver FielsConfig en: ', (field as any)['key'])\r\n        throw new Error('No se puede poner type:EmptyCol a un control que tiene que formar parte del formulario')\r\n      }\r\n\r\n      if(  field.type != FormConfigTypes.EmptyCol ) {\r\n        formGroup.addControl(\r\n          field.key,\r\n          new FormControl({\r\n            value: field.defaultValue || '',\r\n            disabled: field.dissabled,\r\n          })\r\n        );        \r\n      }\r\n    });\r\n\r\n    fields.forEach((field) => {\r\n      if( field.type != FormConfigTypes.EmptyCol ) {\r\n        field = field as FieldConfig\r\n        this.realizarRequestToUrl(formGroup, field);\r\n        const sub = this.procesarAcciones(fields.filter( f => f.type != FormConfigTypes.EmptyCol ) as FieldConfig[], field, formGroup);\r\n        if(sub){\r\n  \r\n          this.subs.add(sub);\r\n        }\r\n  \r\n        this.setValidations(\r\n          formGroup.get(field.key) as AbstractControl,\r\n          field.validations,\r\n          formGroup\r\n        );\r\n      }\r\n    });\r\n\r\n    return formGroup;\r\n  }\r\n\r\n  procesarAcciones(fields: FieldConfig[], field: FieldConfig, form: FormGroup) {\r\n    if (field.action.length == 0) return null;\r\n\r\n    return form.get(field.key)?.valueChanges.subscribe((newValue) => {\r\n      field.action.forEach((action: any) => {\r\n        const fieldTarget = this.getFieldTargetFromFields(\r\n          action.fieldTarget,\r\n          fields\r\n        );\r\n        const formControlTarget = form.get(action.fieldTarget) as FormControl;\r\n        if (!formControlTarget)\r\n          throw new Error('No se encontro el formControl');\r\n\r\n        switch (action.type) {\r\n          case ActionFormTypes.Hide:\r\n            this.procesarHide(newValue, fieldTarget, action, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Show:\r\n            this.procesarShow(newValue, fieldTarget, action, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Reset:\r\n            this.procesarReset(newValue, formControlTarget);\r\n            break;\r\n          case ActionFormTypes.Dissable:\r\n            this.procesarDisable(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.Enable:\r\n            this.procesarEnable(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.SetValue:\r\n            this.procesarSetValue(newValue, formControlTarget, action);\r\n            break;\r\n          case ActionFormTypes.FillOptions:\r\n            this.procesarFillOptions(\r\n              newValue,\r\n              formControlTarget,\r\n              fieldTarget,\r\n              action\r\n            );\r\n            break;\r\n          default:\r\n            throw new Error(\r\n              'No se reconoce el type de la accion: ' + action.type\r\n            );\r\n        }\r\n      });\r\n    });\r\n  }\r\n  realizarRequestToUrl(form: FormGroup, field: FieldConfig) {\r\n    if (!field.options?.url) {\r\n      return;\r\n    }\r\n    console.log('consulto en: ' + field.key);\r\n    console.log(field.options.url);\r\n\r\n    form.get(field.key)!.disable();\r\n    this.http.get(field.options?.url as string).subscribe((res: any) => {\r\n      field.options!.options = res;\r\n      form.get(field.key)!.enable();\r\n    });\r\n  }\r\n\r\n  private getFieldTargetFromFields(fieldTarget: string, fields: FieldConfig[]) {\r\n    const ft = fields.find((x) => x.key == fieldTarget) as FieldConfig;\r\n    if (!ft) throw new Error('No se enctontro el field');\r\n    return ft;\r\n  }\r\n\r\n  private procesarFillOptions(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    fieldTarget: FieldConfig,\r\n    action: ActionForm\r\n  ) {\r\n    //Rellenar opciones\r\n    //URL https://apis.datos.gob.ar/georef/api/municipios?provincia=tucuman\r\n    formControlTarget.reset('');\r\n    if (action.fillConfig?.url && newValue) {\r\n      formControlTarget.disable();\r\n\r\n      this.http\r\n        .get(`${action.fillConfig!.url}${newValue}`)\r\n        .subscribe((res: any) => {\r\n          let val = res;\r\n          const pathArray = action.dataPath!.split('.');\r\n          for (const prop of pathArray) val = val[prop];\r\n\r\n          fieldTarget.options!.options = val;\r\n\r\n          formControlTarget.enable();\r\n        });\r\n    } else if (!!action.fillConfig?.fillFn) {\r\n      const options = action.fillConfig?.fillFn(newValue);\r\n      if (options instanceof Promise)\r\n        options.then(x => fieldTarget.options!.options = x);\r\n      else\r\n        fieldTarget.options!.options = options;\r\n    } else {\r\n      fieldTarget.options = action.fillConfig?.fillOptionsConfig?.find(\r\n        (x) => x.onValue == newValue\r\n      )?.optionsConfig;\r\n    }\r\n  }\r\n\r\n  private procesarHide(\r\n    newValue: any,\r\n    fieldTarget: FieldConfig,\r\n    action: ActionForm,\r\n    formControlTarget: FormControl\r\n  ) {\r\n    formControlTarget.reset('');\r\n\r\n    fieldTarget.hidden = newValue == action.value;\r\n  }\r\n\r\n  private procesarShow(\r\n    newValue: any,\r\n    fieldTarget: FieldConfig,\r\n    action: ActionForm,\r\n    formControlTarget: FormControl\r\n  ) {\r\n    formControlTarget.reset('');\r\n\r\n    fieldTarget.hidden = !(newValue == action.value);\r\n  }\r\n\r\n  private procesarReset(newValue: any, formControlTarget: FormControl) {\r\n    if (formControlTarget?.value != '' && newValue !== '') {\r\n      formControlTarget.reset('');\r\n    }\r\n  }\r\n\r\n  private procesarDisable(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (newValue == action.value) {\r\n      formControlTarget.disable();\r\n    } else formControlTarget.enable();\r\n  }\r\n\r\n  private procesarEnable(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (newValue == action.value) {\r\n      formControlTarget.enable();\r\n    } else formControlTarget.disable();\r\n  }\r\n\r\n  private procesarSetValue(\r\n    newValue: any,\r\n    formControlTarget: FormControl,\r\n    action: ActionForm\r\n  ) {\r\n    if (!action.newValue)\r\n      throw new Error('La accion debe tener un nuevo valor para setear');\r\n\r\n    if (newValue == action.value) {\r\n      formControlTarget.setValue(action.newValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('Me caigo a pedazos!!!!');\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  private setValidations(\r\n    control: AbstractControl,\r\n    validations: ValidationForm[],\r\n    f: FormGroup\r\n  ) {\r\n    for (let validation of validations) {\r\n      switch (validation.type) {\r\n        // Single Fields Validations\r\n        case ValidationTypes.Required:\r\n          this.setRequiredValidation(control, validation.customMessage);\r\n          break;\r\n        case ValidationTypes.Function:\r\n          this.setFuncValidation(\r\n            control,\r\n            validation.func,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Min:\r\n          this.setMinValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Max:\r\n          this.setMaxValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MinLength:\r\n          this.setMinLengthValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxLength:\r\n          this.setMaxLengthValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Pattern:\r\n          this.setPatternValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MinDate:\r\n          this.setMinDateValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxDate:\r\n          this.setMaxDateValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MaxFileSize:\r\n          this.setMaxFileSizeValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.AcceptedTypes:\r\n          this.setAcceptedTypesValidation(\r\n            control,\r\n            validation.value,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.Email:\r\n          this.setEmailValidation(control, validation.customMessage);\r\n          break;\r\n        // Cross Fields Validations\r\n        case ValidationTypes.RequiredIf:\r\n          this.setRequiredIfValidation(\r\n            control,\r\n            validation.conditions,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.RequiredIfFieldIsEmpty:\r\n          this.setRequiredIfFieldIsEmptyValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.RequiredIfFieldIsNotEmpty:\r\n          this.setRequiredIfFieldIsNotEmptyValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.LessOrEqualTo:\r\n          this.setLessOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.MoreOrEqualTo:\r\n          this.setMoreOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.AfterOrEqualTo:\r\n          this.setAfterOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n        case ValidationTypes.BeforeOrEqualTo:\r\n          this.setBeforeOrEqualToValidation(\r\n            control,\r\n            validation.fieldTarget!,\r\n            f,\r\n            validation.customMessage\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  // Single Fields Validations\r\n\r\n  private setRequiredValidation(\r\n    control: AbstractControl,\r\n    customMessage?: string\r\n  ) {\r\n    control.addValidators(RequiredValidators.required(customMessage));\r\n  }\r\n\r\n  private setMinValidation(\r\n    control: AbstractControl,\r\n    minValue: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minValue) {\r\n      throw new Error('minValue must be declared');\r\n    }\r\n    control.addValidators(NumberValidators.min(minValue, customMessage));\r\n  }\r\n\r\n  private setMaxValidation(\r\n    control: AbstractControl,\r\n    maxValue: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxValue) {\r\n      throw new Error('maxValue must be declared');\r\n    }\r\n    control.addValidators(NumberValidators.max(maxValue, customMessage));\r\n  }\r\n\r\n  private setMinLengthValidation(\r\n    control: AbstractControl,\r\n    minLength: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minLength) {\r\n      throw new Error('minLength must be declared');\r\n    }\r\n    control.addValidators(TextValidators.minLength(minLength, customMessage));\r\n  }\r\n\r\n  private setMaxLengthValidation(\r\n    control: AbstractControl,\r\n    maxLength: number | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxLength) {\r\n      throw new Error('maxLength must be declared');\r\n    }\r\n    control.addValidators(TextValidators.maxLength(maxLength, customMessage));\r\n  }\r\n\r\n  private setPatternValidation(\r\n    control: AbstractControl,\r\n    pattern: string | RegExp | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!pattern) {\r\n      throw new Error('pattern must be declared');\r\n    }\r\n    control.addValidators(TextValidators.pattern(pattern, customMessage));\r\n  }\r\n\r\n  private setMinDateValidation(\r\n    control: AbstractControl,\r\n    minDate: DateTime,\r\n    customMessage?: string\r\n  ) {\r\n    if (!minDate) {\r\n      throw new Error('minDate must be declared');\r\n    }\r\n    control.addValidators(DateTimeValidators.minDate(minDate, customMessage));\r\n  }\r\n\r\n  private setMaxDateValidation(\r\n    control: AbstractControl,\r\n    maxDate: DateTime,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxDate) {\r\n      throw new Error('maxDate must be declared');\r\n    }\r\n    control.addValidators(DateTimeValidators.minDate(maxDate, customMessage));\r\n  }\r\n\r\n  private setMaxFileSizeValidation(\r\n    control: AbstractControl,\r\n    maxSize: number,\r\n    customMessage?: string\r\n  ) {\r\n    if (!maxSize) {\r\n      throw new Error('maxSize must be declared');\r\n    }\r\n    control.addValidators(FileValidators.maxFileSize(maxSize, customMessage));\r\n  }\r\n\r\n  private setAcceptedTypesValidation(\r\n    control: AbstractControl,\r\n    acceptedTypes: string[],\r\n    customMessage?: string\r\n  ) {\r\n    if (!acceptedTypes) {\r\n      throw new Error('acceptedTypes must be declared');\r\n    }\r\n    control.addValidators(\r\n      FileValidators.acceptedFileTypes(acceptedTypes, customMessage)\r\n    );\r\n  }\r\n\r\n  private setEmailValidation(control: AbstractControl, customMessage?: string) {\r\n    control.addValidators(DataValidators.email(customMessage));\r\n  }\r\n\r\n  // Cross Fields Validations\r\n\r\n  private setFuncValidation(\r\n    control: AbstractControl,\r\n    func: Function | undefined,\r\n    customMessage?: string\r\n  ) {\r\n    if (!func) {\r\n      throw new Error('func must be declared');\r\n    }\r\n    const setError = (error: string) => {\r\n      control.setErrors(\r\n        control.errors\r\n          ? { ...control.errors, [error]: { [error]: true, customMessage } }\r\n          : { [error]: { [error]: true, customMessage } }\r\n      );\r\n    };\r\n\r\n    control.valueChanges.subscribe((val) => {\r\n      func(val, setError);\r\n    });\r\n  }\r\n\r\n  private setRequiredIfValidation(\r\n    control: AbstractControl,\r\n    conditions: ConditionForm[] | undefined,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    if (!conditions) {\r\n      throw new Error('conditions must be declared');\r\n    }\r\n\r\n    for (let condition of conditions) {\r\n      if (!f.get(condition.field)) {\r\n        throw new Error('field not found');\r\n      }\r\n\r\n      f.get(condition.field)?.valueChanges.subscribe((val) => {\r\n        if (val == condition.value) {\r\n          control.addValidators(RequiredValidators.required(customMessage));\r\n        } else {\r\n          control.removeValidators(RequiredValidators.required(customMessage));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private setRequiredIfFieldIsEmptyValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      RequiredValidators.requiredIfFieldIsEmpty(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setRequiredIfFieldIsNotEmptyValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      RequiredValidators.requiredIfFieldIsNotEmpty(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setLessOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      NumberValidators.lessOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setMoreOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      NumberValidators.moreOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setAfterOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      DateTimeValidators.afterOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private setBeforeOrEqualToValidation(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup,\r\n    customMessage?: string\r\n  ) {\r\n    this.checkTargetAndSubscribeToRefreshValidations(control, fieldTarget, f);\r\n    control.addValidators(\r\n      DateTimeValidators.beforeOrEqualTo(fieldTarget, customMessage)\r\n    );\r\n  }\r\n\r\n  private checkTargetAndSubscribeToRefreshValidations(\r\n    control: AbstractControl,\r\n    fieldTarget: string,\r\n    f: FormGroup\r\n  ) {\r\n    if (!fieldTarget) throw new Error('formControlTarget must be declared');\r\n\r\n    const formControlTarget = f.get(fieldTarget) as FormControl;\r\n    if (!formControlTarget)\r\n      throw new Error(`${fieldTarget} formControl not exists`);\r\n\r\n    this.subs.add(\r\n      formControlTarget.valueChanges.subscribe((val) =>\r\n        control.updateValueAndValidity({ emitEvent: false })\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormConfigTypes } from '../enums';\r\nimport { FormularioService } from '../formulario.service';\r\nimport { FormConfig, FormFieldConfig } from '../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-dyn-form',\r\n  templateUrl: './dyn-form.component.html',\r\n  styleUrls: ['./dyn-form.component.scss'],\r\n  providers: [ FormularioService ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DynFormComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n \r\n  fieldsP: FormFieldConfig[]  = []\r\n  enum = FormConfigTypes\r\n  valueChanges: Subscription;\r\n  @Input() cols: number = 2;\r\n  @Input() gutterSize: string = '1em';\r\n  @Input() rowHeight: string = '130px'\r\n  @Input() fields!: FormFieldConfig[] \r\n  @Output() submitEvent: EventEmitter<any>= new EventEmitter()\r\n  @Output() onChangeEvent: EventEmitter<any> = new EventEmitter()\r\n\r\n  /**\r\n   * Valores a setear en el formulario\r\n   * \r\n   * Setea los valores solo a los campos de las propiedades del objeto\r\n   * \r\n   * Si se quiere limpiar/resetear todo el formulario, pasar null\r\n   */\r\n  @Input() FieldsValues: any;\r\n\r\n  @Input() formConfig: FormConfig = {\r\n    formCustomClass: '',\r\n    submitButtonConfig:{\r\n      text:'SUBMIT',\r\n      color:'primary',\r\n      hidden: false,\r\n      materialButtonType:'raised'\r\n    }\r\n  };\r\n\r\n  forma: FormGroup;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private fs: FormularioService) {\r\n    \r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if( !!changes['FieldsValues'] && changes['FieldsValues'].previousValue != changes['FieldsValues'].currentValue ) {\r\n      this.SetValues()\r\n    }\r\n  }\r\n\r\n  get FormValues(){\r\n    return this.forma.value\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getRowHeight();\r\n  }\r\n\r\n  private SetValues() {\r\n    if (!!this.forma) {\r\n      if (!!this.FieldsValues)\r\n        Object.keys( this.FieldsValues ).forEach( key => {\r\n          this.forma.get(key)?.setValue( this.FieldsValues[key])\r\n        });\r\n      else \r\n        this.forma.reset();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.forma = this.fs.buildFormGroup(this.fields);\r\n    console.log(this.forma);\r\n    this.fieldsP = this.fields\r\n    this.valueChanges = this.forma.valueChanges.subscribe( v => {\r\n      this.onChangeEvent.emit( this.forma.value )\r\n    });\r\n    if (!!this.FieldsValues)\r\n      this.SetValues();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueChanges.unsubscribe();\r\n    this.fs.ngOnDestroy()\r\n  }\r\n\r\n  OnSubmit(){\r\n    console.log(this.forma)\r\n    this.forma.markAllAsTouched()\r\n    this.submitEvent.emit(this.FormValues)\r\n  }\r\n\r\n\r\n  getRowHeight() {\r\n    var matchesNumber = this.rowHeight.match(/(\\d+)/);\r\n    let matchesString = this.rowHeight.replace(/[0-9]/g, '');\r\n    this.rowHeight = (Number((matchesNumber as any)[0]) / 5 ).toString() + matchesString\r\n    console.log(this.rowHeight)\r\n    return this.rowHeight;\r\n  }\r\n\r\n}\r\n","<div style=\"display: flex\" *ngIf=\"!!forma\">\r\n  <form\r\n    [formGroup]=\"forma\"\r\n    autocomplete=\"off\"\r\n    [class]=\"formConfig.formCustomClass\"\r\n    (ngSubmit)=\"OnSubmit()\"\r\n  >\r\n  <mat-grid-list [rowHeight]=\"rowHeight\" [cols]=\"cols\" [gutterSize]=\"gutterSize\">\r\n\r\n    <ng-container\r\n      *ngFor=\"let field of fields\"\r\n      [class.field-container]=\"field.type != enum.EmptyCol && !field.hidden\"\r\n    >\r\n\r\n    <mat-grid-tile colspan=\"{{  field.cols  }}\" rowspan=\"{{ field.type == enum.EmptyCol && field.subtitle ? 1 : 5 }}\" [class]=\"field.type === enum.EmptyCol && field.subtitle ? 'mh-30px' : ''\">\r\n\r\n      <div *ngIf=\"field.type != enum.EmptyCol && !field.hidden\" class=\"{{'mw-100 mh-100 ' + field.templateOptions.customClass || ''}} \">\r\n        <div [ngSwitch]=\"field.type\">\r\n  \r\n          <div *ngSwitchCase=\"'text'\">\r\n            <sof-text-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-text-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'dense-text'\">\r\n            <sof-dense-text-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-dense-text-control>\r\n          </div>\r\n  \r\n  \r\n          <div *ngSwitchCase=\"'checkbox'\">\r\n            <sof-checkbox-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-checkbox-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'text-area'\">\r\n            <sof-text-area-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [rowsArea]=\"field.templateOptions.rowsArea || 2\"\r\n              [resizeable]=\"field.templateOptions.resizeable || false\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-text-area-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'number'\">\r\n            <sof-number-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-number-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'radio'\">\r\n            <sof-radio-button-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [list]=\"field.options?.options || []\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-radio-button-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'select'\">\r\n            <sof-select-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [list]=\"field.options?.options || []\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-select-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'autocomplete'\">\r\n            <sof-autocomplete-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [list]=\"field.options?.options || []\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-autocomplete-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'time'\">\r\n            <sof-time-picker-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [format24hs]=\"true\"\r\n              [formControlName]=\"field.key\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-time-picker-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'date'\">\r\n            <sof-date-picker-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n            ></sof-date-picker-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'phone'\">\r\n            <sof-phone-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-phone-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'file'\">\r\n            <sof-file-upload-control\r\n              #fileControl\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [multiple]=\"!!field.templateOptions.multiple\"\r\n              [maxSize]=\"\r\n                fileControl.getMaxSizeValueInValidation(field.validations)\r\n              \"\r\n            ></sof-file-upload-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'password'\">\r\n            <sof-password-control\r\n              [label]=\"field.templateOptions.label || ''\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [maxLength]=\"field.templateOptions.maxLength || ''\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-password-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchCase=\"'empty-col'\">\r\n            <div *ngIf=\"field.subtitle\">\r\n              <p>{{ field.subtitle }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div *ngSwitchCase=\"'checkbox-group'\">\r\n            <sof-checkbox-group-control\r\n              [label]=\"field.templateOptions.label\"\r\n              [placeholder]=\"field.templateOptions.placeholder || ''\"\r\n              [formControlName]=\"field.key\"\r\n              [list]=\"field.options?.options || []\"\r\n              [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n              [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              [noLabel]=\"field.templateOptions.noLabel\"\r\n              [sideLabel]=\"field.templateOptions.sideLabel\"\r\n            ></sof-checkbox-group-control>\r\n          </div>\r\n  \r\n          <div *ngSwitchDefault>\r\n            <h3>Se desconoce el tipo {{ field.type }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div *ngIf=\"field.type === enum.EmptyCol\">\r\n        <div *ngIf=\"field.subtitle\">\r\n          <h2>{{ field.subtitle }}</h2>\r\n        </div>\r\n      </div>\r\n    </mat-grid-tile>\r\n\r\n    </ng-container>\r\n  </mat-grid-list>\r\n\r\n    <div\r\n      [ngSwitch]=\"formConfig.submitButtonConfig.materialButtonType\"\r\n      *ngIf=\"!formConfig.submitButtonConfig.hidden\"\r\n    >\r\n      <button\r\n        *ngSwitchCase=\"'raised'\"\r\n        mat-raised-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n\r\n      <button\r\n      *ngSwitchCase=\"'outline'\"\r\n      mat-stroked-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    <button\r\n      *ngSwitchCase=\"'text'\"\r\n      mat-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    <button\r\n      *ngSwitchCase=\"'flat'\"\r\n      mat-flat-button\r\n      [color]=\"formConfig.submitButtonConfig.color\"\r\n      type=\"submit\"\r\n    >\r\n      {{ formConfig.submitButtonConfig.text }}\r\n    </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynFormComponent } from './dyn-form/dyn-form.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialControlsModule } from '../material-controls/material-controls.module';\r\nimport { CustomControlsModule } from '../custom-controls/custom-controls.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n@NgModule({\r\n    declarations: [DynFormComponent],\r\n    imports: [ \r\n        CommonModule, \r\n        ReactiveFormsModule,\r\n        MaterialControlsModule,\r\n        MatButtonModule,\r\n        MatGridListModule\r\n    ],\r\n    exports: [DynFormComponent],\r\n    providers: [],\r\n})\r\nexport class DynamicFormModule {}","// Example locale file for English, give this to your locale team to translate\r\n\r\nexport const AG_GRID_LOCALE_ES = {\r\n \r\n    inRangeStart: 'desde',\r\n    inRangeEnd: 'a',\r\n\r\n    // Enterprise Menu Aggregation and Status Bar\r\n    sum: 'Sum',\r\n    min: 'Min',\r\n    max: 'Max',\r\n    none: 'None',\r\n    count: 'Count',\r\n    avg: 'Average',\r\n    filteredRows: 'Filtrado',\r\n    selectedRows: 'Seleccionado',\r\n    totalRows: 'Total Filas',\r\n    totalAndFilteredRows: 'Filas',\r\n    more: 'Mas',\r\n    to: '-',\r\n    of: 'de',\r\n    page: 'Pagina',\r\n    nextPage: 'Siguiente',\r\n    lastPage: 'Anterior',\r\n    firstPage: 'Primera pagina',\r\n    previousPage: 'Pagina previa',\r\n    \r\n    // Row Drag\r\n    rowDragRows: 'rows',\r\n  \r\n    // Other\r\n    loadingOoo: 'Cargando...',\r\n    noRowsToShow: 'No hay filas para mostrar',\r\n    enabled: 'Habilitado',\r\n  \r\n    \r\n  \r\n    // Number Format (Status Bar, Pagination Panel)\r\n    thousandSeparator: ',',\r\n    decimalSeparator: '.',\r\n  };\r\n  ","export const AG_GRID_LOCALE_EN = {\r\n    // Set Filter\r\n    selectAll: '(Select All)',\r\n    selectAllSearchResults: '(Select All Search Results)',\r\n    searchOoo: 'Search...',\r\n    blanks: '(Blanks)',\r\n    noMatches: 'No matches',\r\n\r\n    // Number Filter & Text Filter\r\n    filterOoo: 'Filter...',\r\n    equals: 'Equals',\r\n    notEqual: 'Not equal',\r\n    blank: 'Blank',\r\n    notBlank: 'Not blank',\r\n    empty: 'Choose One',\r\n\r\n    \r\n    \r\n    // Row Drag\r\n    rowDragRows:'rows',\r\n\r\n    // Other\r\n    loadingOoo: 'Loading...',\r\n    noRowsToShow: 'No Rows To Show',\r\n    enabled: 'Enabled',\r\n\r\n    // Menu\r\n    pinColumn: 'Pin Column',\r\n    pinLeft: 'Pin Left',\r\n    pinRight: 'Pin Right',\r\n    noPin: 'No Pin',\r\n    valueAggregation: 'Value Aggregation',\r\n    autosizeThiscolumn: 'Autosize This Column',\r\n    autosizeAllColumns: 'Autosize All Columns',\r\n    groupBy: 'Group by',\r\n    ungroupBy: 'Un-Group by',\r\n    addToValues: 'Add ${variable} to values',\r\n    removeFromValues: 'Remove ${variable} from values',\r\n    addToLabels: 'Add ${variable} to labels',\r\n    removeFromLabels: 'Remove ${variable} from labels',\r\n    resetColumns: 'Reset Columns',\r\n    expandAll: 'Expand All',\r\n    collapseAll: 'Close All',\r\n    copy: 'Copy',\r\n    ctrlC: 'Ctrl+C',\r\n    copyWithHeaders: 'Copy With Headers',\r\n    copyWithHeaderGroups: 'Copy With Header Groups',\r\n    paste: 'Paste',\r\n    ctrlV: 'Ctrl+V',\r\n    export: 'Export',\r\n    csvExport: 'CSV Export',\r\n    excelExport: 'Excel Export',\r\n\r\n    // Enterprise Menu Aggregation and Status Bar\r\n    sum: 'Sum',\r\n    min: 'Min',\r\n    max: 'Max',\r\n    none: 'None',\r\n    count: 'Count',\r\n    avg: 'Average',\r\n    filteredRows: 'Filtered',\r\n    selectedRows: 'Selected',\r\n    totalRows: 'Total Rows',\r\n    totalAndFilteredRows: 'Rows',\r\n    more: 'More',\r\n    to: 'to',\r\n    of: 'of',\r\n    page: 'Page',\r\n    nextPage: 'Next Page',\r\n    lastPage: 'Last Page',\r\n    firstPage: 'First Page',\r\n    previousPage: 'Previous Page',\r\n\r\n    // Pivoting\r\n    pivotColumnGroupTotals: 'Total',\r\n\r\n    // Number Format (Status Bar, Pagination Panel)\r\n    thousandSeparator: ',',\r\n    decimalSeparator: '.'\r\n\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-size',\r\n  templateUrl: './page-size.component.html',\r\n  styleUrls: ['./page-size.component.scss']\r\n})\r\nexport class PageSizeComponent implements OnInit {\r\n\r\n  @Input() pageSize: number = 10;\r\n  previusPageSize: number = this.pageSize\r\n  \r\n  @Output() sizeChangeEvent: EventEmitter<number> = new EventEmitter<number>()\r\n  @Input() pageSizeText: string \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSizeChange(){\r\n    if(this.previusPageSize != this.pageSize){\r\n      this.sizeChangeEvent.emit(this.pageSize)\r\n      this.previusPageSize = this.pageSize\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-custom-group\">\r\n  <label for=\"size\">{{ pageSizeText }}</label>\r\n  <mat-form-field>\r\n    <input\r\n      id=\"size\"\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"pageSize\"\r\n      (blur)=\"onSizeChange()\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\n\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { ColDef, ColGroupDef, GetRowIdFunc, GetRowIdParams, GridApi } from 'ag-grid-community';\r\n\r\n//Idiomas\r\nimport { AG_GRID_LOCALE_ES } from './lang/locale.es'\r\nimport { AG_GRID_LOCALE_EN } from './lang/locale.en'\r\nimport { OnChanges } from '@angular/core';\r\n@Component({\r\n  selector: 'sof-grid-control',\r\n  templateUrl: './grid-control.component.html',\r\n  styleUrls: ['./grid-control.component.scss']\r\n})\r\nexport class GridControlComponent implements OnInit,OnChanges {\r\n  private gridApi!: GridApi;\r\n\r\n  @Output() gridReady = new EventEmitter<GridApi>()\r\n\r\n  @Input() gridRowOptions: boolean = false\r\n  @Input() gridRowData: any[] | null;\r\n  @Input() gridColDefsRaw: (ColDef | ColGroupDef |string)[] = [];\r\n  @Input() gridPaginationPageSize: number = 10;\r\n  @Input() gridPagination: boolean = true;\r\n  /**\r\n   * @summary gridRowSelection indica el tipo de seleccion en la grilla\r\n   * @param single solo se puede seleccionar una fila a la vez\r\n   * @param multiple se pueden seleccionar varias filas\r\n   */\r\n  @Input() gridRowSelection: 'single' | 'multiple' | 'none' = 'single';\r\n  gridColDefs: (ColDef | ColGroupDef)[];\r\n  @Input() localeText:{[key:string]:string} = AG_GRID_LOCALE_EN\r\n  @Input() gridAnimateRows: boolean= false\r\n  @Input() gridPageSizeEditable: boolean= true\r\n  @Input() gridPageSizeText: string = \"Filas por pagina\"\r\n  @ViewChild(AgGridAngular) grid: AgGridAngular;\r\n\r\n  @Input() gridChecboxesToSelection: boolean = true\r\n  rerender: boolean;\r\n\r\n  @Input() rowId: string = 'id';\r\n\r\n  constructor(\r\n    private _cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.transformColumnRaws();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    /**\r\n     * Espero a que cambie el input de locale para cambiar la propiedad \r\n     * localeText y volver a renderizar ag-grid con este nuevo locale\r\n     */\r\n    const currentLocale = changes['localeText']?.currentValue\r\n    if(currentLocale && currentLocale != changes['localeText'].previousValue){\r\n      this.changeLocale(currentLocale)\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Cambia el localeText en la grilla\r\n   * @param locale objeto con las traducciones que necesito en la configuracion de la grilla\r\n   * @example  \r\n   * ```ts\r\n   * { \r\n     * of: 'de',\r\n      page: 'Pagina',\r\n      nextPage: 'Siguiente',\r\n      lastPage: 'Anterior',\r\n      firstPage: 'Primera pagina',\r\n      previousPage: 'Pagina previa',\r\n    }\r\n   * ```\r\n   */\r\n\r\n  changeLocale(locale?:any){\r\n    if(locale){\r\n      this.localeText = locale\r\n    }\r\n    else {\r\n      this.localeText = (this.localeText == AG_GRID_LOCALE_EN) \r\n      ? AG_GRID_LOCALE_ES : AG_GRID_LOCALE_EN\r\n    }\r\n    this.doRerender()\r\n  }\r\n\r\n  /**\r\n   * Metodo para volver a renderizar la grilla con un ngif en el componente de ag-grid\r\n   */\r\n  doRerender(){\r\n    this.rerender = true;\r\n    this._cdRef.detectChanges();\r\n    this.rerender = false;\r\n  }\r\n  \r\n\r\n  transformColumnRaws() {\r\n    const columnDefs: ColDef[] = this.gridColDefsRaw.map(\r\n      (x: (string|ColDef), i: number) => {\r\n        //Agrego checkbox selection en primer columna\r\n        if (i == 0 && this.gridChecboxesToSelection) {\r\n          const firstColDef = typeof(x) == 'string' ? \r\n              this.normaliseStringToColDef(x) : this.normaliseColDef(x)\r\n          firstColDef.headerCheckboxSelection= true\r\n          firstColDef.checkboxSelection= true\r\n          \r\n          return firstColDef;\r\n        }\r\n         else {\r\n            return typeof(x) == 'string' ?\r\n              this.normaliseStringToColDef(x) : this.normaliseColDef(x)\r\n        }\r\n      }\r\n    );\r\n\r\n    this.gridColDefs = columnDefs;\r\n  }\r\n\r\n  /**\r\n   * Si flex y width estan definidos, flex tiene mas prioridad e ignora el width\r\n   * \r\n   * De ambos, solo el width se normaliza (200)\r\n   * @summary la Normalizacion de una columna consiste en dejar parametros por default(width, soertable, flex,...)\r\n   */\r\n  normaliseColDef(param: ColDef){\r\n    const cd: ColDef = param;\r\n    cd.suppressMovable = true;\r\n    cd.width = param.width ?? 200;\r\n    cd.minWidth = param.minWidth ?? 150;\r\n    cd.sortable = true;\r\n    cd.resizable = param.resizable ?? false ;\r\n    cd.flex = param.flex;\r\n    return cd;\r\n  }\r\n\r\n  normaliseStringToColDef(param: string):ColDef{\r\n    const cd: ColDef = {field:param}\r\n    this.normaliseColDef(cd) \r\n    return cd;\r\n  }\r\n\r\n  onGridReady() {\r\n    this.gridApi = this.grid.api;\r\n    this.gridReady.emit(this.gridApi);\r\n  }\r\n\r\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\r\n    return params.data[this.rowId]; \r\n  };\r\n\r\n  sizeChanged(size: number){\r\n    this.grid.api.paginationSetPageSize(size);\r\n  }\r\n  \r\n}\r\n","\r\n<ng-container *ngIf=\"!rerender && (gridRowData && gridColDefs)\">\r\n    <ag-grid-angular\r\n        style=\"width: 100%;\"\r\n        class=\"ag-theme-material\"\r\n        [rowData]=\"gridRowData\"\r\n        [columnDefs]=\"gridColDefs\"\r\n        [pagination]=\"gridPagination\"\r\n        [paginationPageSize]=\"gridPaginationPageSize\"\r\n        [rowSelection]=\"gridRowSelection\"\r\n        (gridReady)=\"onGridReady()\"\r\n        [suppressRowClickSelection]=\"true\"\r\n        [domLayout]=\"'autoHeight'\"\r\n        [localeText]=\"localeText\"\r\n        [animateRows]=\"gridAnimateRows\"\r\n        [getRowId]=\"getRowId\"\r\n    >\r\n    </ag-grid-angular>\r\n    <app-page-size *ngIf=\"gridPageSizeEditable\" \r\n    [pageSizeText]=\"gridPageSizeText\" \r\n    (sizeChangeEvent)=\"sizeChanged($event)\" ></app-page-size>\r\n</ng-container>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { MenuOptionConfig } from '../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-row-options',\r\n  templateUrl:'./row-options.component.html',\r\n  styleUrls:['./row-options.component.scss']\r\n})\r\nexport class RowOptionsComponent<T> implements ICellRendererAngularComp {\r\n \r\n  public cellValue!: string;\r\n\r\n  public params: any\r\n  options: MenuOptionConfig<T>[]= []\r\n  constructor(){}\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.params = params;\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(parameters: ICellRendererParams): void {\r\n    this.params = parameters;\r\n    this.options= this.params.menuOptions.filter((opt: MenuOptionConfig<T>)=> {\r\n      // En el caso de que tenga una condicion, la valido\r\n      if(opt.condicion){\r\n        // Valido que entre los values de la condicion este el valor del parametro que apunto (compareToParam)\r\n        return ( opt.condicion.values.includes( this.params.data[opt.condicion.compareToParam])) ?  opt : null\r\n      }\r\n      // Caso contrario devuelvo la opcion,util para casos en lo que la opcion este presente siempre\r\n      else{\r\n        return opt\r\n      }\r\n    })\r\n  }\r\n\r\n  accionar(opt: MenuOptionConfig<T>){\r\n    if (!!opt.actionFn)\r\n      opt.actionFn(this.params.data as T);\r\n  }\r\n\r\n}\r\n\r\n","<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon  matTooltip=\"Opciones\">\r\n      more_vert\r\n  </mat-icon>\r\n</button>\r\n<div >\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item *ngFor=\"let opt of options\" (click)=\"accionar(opt)\" >{{ opt.option }}</button>\r\n  </mat-menu>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { Badge } from '../../interfaces/badge-config';\r\n\r\n@Component({\r\n  selector: 'app-budge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss']\r\n})\r\nexport class BadgeComponent implements ICellRendererAngularComp {\r\n\r\n  config: Badge\r\n  params: any\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(params: ICellRendererParams): void {\r\n    this.params = params\r\n    const configs:  Badge[]  = this.params.badgeConfig;\r\n    const conf = configs.find\r\n      (x => {\r\n        const match =x.condition.values.includes(params.data[x.condition.compareToParam]) \r\n        return match\r\n      })\r\n    if (conf) \r\n      {this.config = conf} \r\n    else \r\n      {throw Error('No hubo match para encontrar el badge')}\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"badge-container\">\r\n  <span *ngIf=\"config\" \r\n      class=\"badge-text\" \r\n      [style.background-color]=\"config.badgeColor\"\r\n      [style.color]=\"config.badgeTextColor\"\r\n      >{{config.text}}</span>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { ICellRendererParams } from 'ag-grid-community';\r\nimport { DateTime } from 'luxon';\r\nimport { DateTimeCellFormat, MenuOptionConfig } from '../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-luxon-datetime-renderer',\r\n  templateUrl:'./luxon-datetime-renderer.component.html',\r\n  styleUrls:['./luxon-datetime-renderer.component.scss']\r\n})\r\nexport class LuxonDateTimeRendererComponent implements ICellRendererAngularComp {\r\n \r\n  public cellValue!: string;\r\n  public params: any;\r\n\r\n  constructor(){}\r\n\r\n  refresh(params: ICellRendererParams): boolean {\r\n    this.params = params;\r\n    this.setCellValue(this.params);\r\n    return true  \r\n  }\r\n\r\n  // gets called once before the renderer is used\r\n  agInit(parameters: ICellRendererParams): void {\r\n    this.params = parameters;\r\n    this.setCellValue(this.params);\r\n  }\r\n\r\n  setCellValue(params: any) {\r\n    const config = params.dateTimeConfig as DateTimeCellFormat;\r\n  \r\n    if (!!config?.toFormat)\r\n      this.cellValue = (params.value as DateTime).toFormat(config.toFormat, config.opts);\r\n    else if (!!config?.toLocale)\r\n      this.cellValue = (params.value as DateTime).toLocaleString(config.toLocale, config.opts);\r\n    else\r\n      this.cellValue = (params.value as DateTime).toLocaleString(DateTime.DATETIME_SHORT, config?.opts);\r\n  }\r\n\r\n}\r\n\r\n","{{cellValue}}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GridControlComponent } from './grid-control.component';\r\n\r\nimport {AgGridModule} from 'ag-grid-angular'\r\nimport { RowOptionsComponent } from './components/row-options/row-options.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MaterialControlsModule } from '../material-controls/material-controls.module';\r\nimport {MatButtonModule} from '@angular/material/button'\r\nimport {MatMenuModule} from '@angular/material/menu'\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { BadgeComponent, LuxonDateTimeRendererComponent } from './components';\r\nimport { PageSizeComponent } from './components/page-size/page-size.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MatTooltipModule} from '@angular/material/tooltip'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GridControlComponent,\r\n    RowOptionsComponent, \r\n    BadgeComponent, \r\n    PageSizeComponent, \r\n    LuxonDateTimeRendererComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialControlsModule,FormsModule,\r\n    MatIconModule,\r\n    AgGridModule.withComponents(RowOptionsComponent),\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    GridControlComponent,\r\n    RowOptionsComponent, \r\n    BadgeComponent, \r\n    PageSizeComponent, \r\n    LuxonDateTimeRendererComponent\r\n  ],\r\n\r\n})\r\nexport class GridControlModule { }\r\n","export class LinkSweet{\r\n    private _text: string;\r\n    private _redirecTo: string;\r\n  \r\n  \r\n    public get text(): string {\r\n        return this._text;\r\n    }\r\n    public set text(value: string) {\r\n        this._text = value;\r\n    }\r\n   \r\n    public get redirecTo(): string {\r\n        return this._redirecTo;\r\n    }\r\n    public set redirecTo(value: string) {\r\n        this._redirecTo = value;\r\n    }\r\n  \r\n    constructor(text: string, redirecTo: string){\r\n      this._redirecTo = redirecTo;\r\n      this._text = text;\r\n    }\r\n  }\r\n  ","export interface Dialog{\r\n    confirmButton: string;\r\n    cancelButton: string;\r\n    denyButton: string;\r\n}\r\n\r\nexport interface Confirm{\r\n    confirmButton: string;\r\n    cancelButton: string;\r\n}\r\n\r\nexport class CustomClassSweet{\r\n    basic: string;\r\n    dialog: Dialog;\r\n    confirm: Confirm;\r\n}\r\n  ","import { Inject, Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { SweetAlertIcon, SweetAlertPosition } from 'sweetalert2';\r\nimport { LinkSweet } from '../models/linkSweet.class';\r\nimport { CustomClassSweet } from '../models/customClassSweet.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  private swalWithMatButtonsBasic!: any;\r\n  private swalWithMatButtonsDialog!: any;\r\n  private swalWithMatButtonsConfirm!: any;\r\n\r\n  constructor( @Inject('customClass') customClass?: CustomClassSweet ) { \r\n\r\n    if(customClass){\r\n      this.swalWithMatButtonsBasic = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.basic\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n  \r\n      this.swalWithMatButtonsDialog = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.dialog.confirmButton,\r\n          cancelButton: customClass.dialog.cancelButton,\r\n          denyButton: customClass.dialog.denyButton\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n  \r\n      this.swalWithMatButtonsConfirm = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: customClass.confirm.confirmButton,\r\n          cancelButton: customClass.confirm.cancelButton\r\n        },\r\n        buttonsStyling: false\r\n      });\r\n    }else{\r\n      this.swalWithMatButtonsBasic = Swal.mixin({});\r\n      this.swalWithMatButtonsDialog = Swal.mixin({});\r\n      this.swalWithMatButtonsConfirm = Swal.mixin({});\r\n    }\r\n  }\r\n\r\n  \r\n  showBasic( \r\n    title?: string, \r\n    text?: string, \r\n    icon?: SweetAlertIcon \r\n  ){\r\n\r\n    this.swalWithMatButtonsBasic.fire(\r\n      title,\r\n      text,\r\n      icon\r\n    );\r\n\r\n  }\r\n\r\n  showCustom( \r\n    position?: SweetAlertPosition, \r\n    title?: string, \r\n    text?: string, \r\n    icon?: SweetAlertIcon, \r\n    timer: number = 2500, \r\n    showConfirmButton: boolean = false, \r\n    confirmButtonText: string = 'OK' \r\n  ){\r\n\r\n    if(timer){\r\n      showConfirmButton = false;\r\n      confirmButtonText = '';\r\n    }\r\n\r\n    this.swalWithMatButtonsBasic.fire({\r\n      position,\r\n      title,\r\n      text,\r\n      icon,\r\n      timer,\r\n      showConfirmButton,\r\n      confirmButtonText\r\n    });\r\n\r\n  }\r\n\r\n  showCustomHTML( \r\n    position?: SweetAlertPosition, \r\n    title?: string, \r\n    html?: string, \r\n    icon?: SweetAlertIcon, \r\n    showCloseButton: boolean = true,\r\n    showCancelButton: boolean = true,\r\n    focusConfirm: boolean = false,\r\n    confirmButtonText?: string,\r\n    cancelButtonText?: string\r\n  ){\r\n\r\n    if(!showCancelButton) cancelButtonText = '';\r\n\r\n    this.swalWithMatButtonsConfirm.fire({\r\n      position,\r\n      title,\r\n      html,\r\n      icon,\r\n      showCloseButton,\r\n      showCancelButton,\r\n      focusConfirm,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: true\r\n    });\r\n    \r\n  }\r\n\r\n  showCustomImage( \r\n    imageUrl: string,\r\n    position?: SweetAlertPosition, \r\n    title?: string,\r\n    text?: string,\r\n    imageWidth: number = 360,\r\n    imageHeight: number = 160,\r\n    imageAlt: string = 'Custom image',\r\n  ){\r\n\r\n    this.swalWithMatButtonsBasic.fire({\r\n      position,\r\n      title,\r\n      text,\r\n      showConfirmButton: false,\r\n      showCloseButton: true,\r\n      imageUrl,\r\n      imageWidth,\r\n      imageHeight,\r\n      imageAlt\r\n    });\r\n\r\n  }\r\n \r\n  async showDialog( \r\n    title?: string, \r\n    text?: string,\r\n    confirmButtonText?: string,\r\n    denyButtonText?: string,\r\n    cancelButtonText?: string,\r\n    mode: boolean = true,\r\n  ): Promise<any>{\r\n\r\n    return await this.swalWithMatButtonsDialog.fire({\r\n      title,\r\n      text,\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      denyButtonText: denyButtonText ? denyButtonText : 'DENEGAR',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: mode\r\n    });\r\n\r\n  }\r\n\r\n  async showConfirm( \r\n    title?: string, \r\n    text?: string,\r\n    icon?: SweetAlertIcon, \r\n    confirmButtonText?: string,\r\n    cancelButtonText?: string,\r\n  ){\r\n\r\n    return await this.swalWithMatButtonsConfirm.fire({\r\n      title,\r\n      text,\r\n      icon,\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText ? confirmButtonText : 'OK',\r\n      cancelButtonText: cancelButtonText ? cancelButtonText : 'CANCELAR',\r\n      reverseButtons: true\r\n    });\r\n  \r\n  }\r\n\r\n  showBasicErrorFooter( \r\n    title?: string, \r\n    text?: string, \r\n    link: LinkSweet | HTMLElement | string = '', \r\n    icon?: SweetAlertIcon  \r\n  ){\r\n\r\n    const footer: LinkSweet | HTMLElement | string = \r\n      link instanceof LinkSweet ? `<a href=\"${link.redirecTo}\" target=\"_blank\">${link.text}</a>` : link;\r\n\r\n      this.swalWithMatButtonsBasic.fire({\r\n      icon,\r\n      title,\r\n      text,\r\n      footer\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { AlertService } from './services/alert.service';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { CustomClassSweet } from './models/customClassSweet.interface';\r\n\r\n//To implement in style.scss or angular.json\r\n/* @import 'node_modules/sof-ng-controls/assets/alerts/scss/alert.global.scss'; */\r\n\r\n@NgModule({\r\n  imports: [\r\n    SweetAlert2Module.forRoot()\r\n  ],\r\n  declarations: [\r\n    \r\n  ],\r\n  providers: [\r\n    AlertService\r\n  ],\r\n  schemas:[]\r\n})\r\nexport class AlertModule { \r\n  static forRoot( customClass: CustomClassSweet | undefined ): ModuleWithProviders<AlertModule> {\r\n    return {\r\n      ngModule: AlertModule,\r\n      providers: [\r\n        AlertModule, \r\n        { \r\n          provide: 'customClass', \r\n          useValue: customClass\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ControlsComponent } from './controls.component';\r\nimport { ErrorsConfigurations } from './validations/configuration/errors-configuration';\r\nimport { MaterialControlsModule } from './material-controls/material-controls.module';\r\nimport { DynamicFormModule } from './dynamic-form/dyn-form.module';\r\nimport { GridControlModule } from './grid-control/grid-control.module';\r\nimport { AlertModule } from './alerts/alert.module';\r\nimport { CustomClassSweet } from './alerts/models/customClassSweet.interface';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ControlsComponent,\r\n  ],\r\n  imports: [],\r\n  exports: [\r\n    ControlsComponent,\r\n    MaterialControlsModule,\r\n    DynamicFormModule,\r\n    GridControlModule,\r\n    AlertModule\r\n  ]\r\n})\r\nexport class ControlsModule {\r\n  static forRoot(\r\n    libConfiguration: ErrorsConfigurations,\r\n    customClass: CustomClassSweet | undefined\r\n  ): ModuleWithProviders<ControlsModule> {\r\n    AlertModule.forRoot(customClass);\r\n    return {\r\n      ngModule: ControlsModule,\r\n      providers: [\r\n        {\r\n          provide: ErrorsConfigurations,\r\n          useValue: libConfiguration,\r\n        },\r\n        { \r\n          provide: 'customClass', \r\n          useValue: customClass\r\n        }\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GridApi } from 'ag-grid-community';\r\n\r\n@Injectable()\r\nexport class GridHandlerService {\r\n\r\n  private gridApi!: GridApi;\r\n  private rowData: any[] = [];\r\n  private dataId: any = 'id';\r\n\r\n  get RowData() {\r\n    return this.rowData;\r\n  }\r\n\r\n  get isSelectedRows(){\r\n    return this.gridApi?.getSelectedNodes().length > 0;\r\n  }\r\n\r\n  get selectedRows(){\r\n    return this.gridApi?.getSelectedNodes();\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  setConfigs(gridApiParam: GridApi, rowDataParam: any[], dataIdParam: any) {\r\n    this.gridApi = gridApiParam;\r\n    this.rowData = rowDataParam;\r\n    this.dataId = dataIdParam;\r\n  }\r\n\r\n  addRow(objToAdd: any){\r\n    if (this.rowData.length > 0) {\r\n      const indexRepeat = this.rowData.findIndex((row: any) => row[this.dataId] === objToAdd[this.dataId]);\r\n      if (indexRepeat === -1) this.finalTransaction([ ...this.rowData, objToAdd ]);\r\n\r\n    } else {\r\n      this.finalTransaction([ ...this.rowData, objToAdd ]);\r\n    }\r\n  }\r\n\r\n  updateRowState(obj: any, action: string, column: string = 'Estado'){\r\n    const indexObj = this.rowData.findIndex( (row) => row[this.dataId] === obj[this.dataId] );\r\n    if(indexObj === -1) return;\r\n\r\n    this.rowData[indexObj][column] = action;\r\n    this.finalTransaction(this.rowData);\r\n  }\r\n\r\n  updateDataState( action: string ){\r\n    let newRowData: any[] = this.rowData.map((row) => { return  { ...row, Estado: action } } );\r\n    this.finalTransaction(newRowData);\r\n  }\r\n\r\n  deleteRowsSelected() {\r\n    if(this.selectedRows.length > 0) \r\n    this.selectedRows.forEach( (node: any) => {\r\n      let newRowData: any[] = this.rowData.filter((row) => row[this.dataId] !== node.id);\r\n      this.finalTransaction(newRowData);\r\n    });\r\n  }\r\n\r\n  finalTransaction( data: any[] ){\r\n    this.rowData = data;\r\n    this.gridApi.setRowData(this.rowData);\r\n    this.gridApi.redrawRows();\r\n  }\r\n  \r\n}\r\n","import { from } from 'rxjs';\r\n\r\n/*\r\n * Public API Surface of controls\r\n */\r\nexport * from './lib/controls.service';\r\nexport * from './lib/controls.component';\r\nexport * from './lib/controls.module';\r\n\r\n// Dynamic form\r\nexport * from './lib/dynamic-form/dyn-form.module'\r\nexport * from './lib/dynamic-form/formulario.service'\r\nexport * from './lib/dynamic-form/dyn-form/dyn-form.component'\r\n\r\n//Base Control\r\nexport * from './lib/base/base-form-control/base-form-control'\r\n\r\n//Grid Control\r\nexport * from './lib/grid-control/components'\r\nexport * from './lib/grid-control/grid-control.component'\r\nexport * from './lib/grid-control/grid-control.module'\r\nexport * from './lib/grid-control/services/grid-handler.service'\r\n\r\n//export * from './lib/grid-control/services/grid-option-action-handler.service'\r\nexport * from './lib/grid-control/interfaces'\r\nexport * from './lib/grid-control/lang'\r\n\r\n\r\n// Material controls\r\nexport * from './lib/material-controls/material-controls.module'\r\nexport * from './lib/material-controls'\r\n\r\n\r\n\r\nexport * from './lib/dynamic-form/interfaces'\r\nexport * from './lib/dynamic-form/enums'\r\nexport * from './lib/validations'\r\n\r\n\r\n//Alerts Module\r\nexport * from './lib/alerts/alert.module';\r\nexport * from './lib/alerts/services/alert.service';\r\nexport * from './lib/alerts/models/customClassSweet.interface';\r\nexport * from './lib/alerts/models/linkSweet.class';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ErrorsConfigurations","i1","i2","i2.ErrorMaterialComponent","i3","i4","i5.IntegerInputDirective","i4.ErrorMaterialComponent","i5","i6","i3.ErrorMaterialComponent","i5.ErrorMaterialComponent","i1.FormularioService","i3.TextMaterialControlComponent","i4.DenseTextMaterialControlComponent","i5.CheckboxMaterialControlComponent","i6.TextAreaMaterialControlComponent","i7.NumberMaterialControlComponent","i8.RadioButtonMaterialControlComponent","i9.SelectMaterialControlComponent","i10.AutocompleteMaterialControlComponent","i11.TimePickerMaterialControlComponent","i12.DatePickerMaterialControlComponent","i13.PhoneMaterialControlComponent","i14.FileUploadMaterialControlComponent","i15.PasswordMaterialControlComponent","i16.CheckboxGroupMaterialControlComponent","i17","i18","i19","i2.PageSizeComponent"],"mappings":"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"}