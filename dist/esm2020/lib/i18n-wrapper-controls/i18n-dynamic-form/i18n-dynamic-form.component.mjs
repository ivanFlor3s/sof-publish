import { Component, EventEmitter, Input, Output } from '@angular/core';
import { FormConfigTypes } from 'sof-ng-controls';
import * as i0 from "@angular/core";
import * as i1 from "sof-ng-controls";
import * as i2 from "@angular/material/grid-list";
import * as i3 from "../i18n-text-control/i18n-text-control.component";
import * as i4 from "../i18n-dense-text-control/i18n-dense-text-control.component";
import * as i5 from "../i18n-checkbox-control/i18n-checkbox-control.component";
import * as i6 from "../i18n-textarea-control/i18n-textarea-control.component";
import * as i7 from "../i18n-number-control/i18n-number-control.component";
import * as i8 from "../i18n-radio-button/i18n-radio-button.component";
import * as i9 from "../i18n-select-control/i18n-select-control.component.";
import * as i10 from "../i18n-autocomplete-control/i18n-autocomplete-control.component";
import * as i11 from "../i18n-timer-picker-control/i18n-timer-picker-control.component";
import * as i12 from "../i18n-date-picker-control/i18n-date-picker-control.component";
import * as i13 from "../i18n-phone-control/i18n-phone-control.component";
import * as i14 from "../i18n-file-upload-control/i18n-file-upload-control.component";
import * as i15 from "../i18n-password-control/i18n-password-control.component";
import * as i16 from "@angular/material/button";
import * as i17 from "@angular/common";
import * as i18 from "@angular/forms";
export class I18nDynamicFormComponent {
    constructor(cdRef, fs) {
        this.cdRef = cdRef;
        this.fs = fs;
        // fieldsP: FormFieldConfig[] = []
        this.cols = 2;
        this.enum = FormConfigTypes;
        this.gutterSize = '1em';
        this.rowHeight = '130px';
        this.submitEvent = new EventEmitter();
        this.onChangeEvent = new EventEmitter();
        this.formConfig = {
            formCustomClass: '',
            submitButtonConfig: {
                text: 'SUBMIT',
                color: 'primary',
                hidden: false,
                materialButtonType: 'raised'
            }
        };
    }
    get FormValues() {
        return this.forma.value;
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        if (!!changes['FieldsValues'] && changes['FieldsValues'].previousValue != changes['FieldsValues'].currentValue) {
            this.SetValues();
        }
    }
    SetValues() {
        if (!!this.forma)
            Object.keys(this.FieldsValues).forEach(key => {
                this.forma.get(key)?.setValue(this.FieldsValues[key]);
            });
    }
    ngAfterViewInit() {
        this.forma = this.fs.buildFormGroup(this.fields);
        this.valueChanges = this.forma.valueChanges.subscribe(v => {
            this.onChangeEvent.emit(this.forma.value);
        });
        if (!!this.FieldsValues)
            this.SetValues();
    }
    ngAfterViewChecked() {
        this.cdRef.detectChanges();
    }
    ngOnDestroy() {
        this.valueChanges.unsubscribe();
        this.fs.ngOnDestroy();
    }
    OnSubmit() {
        console.log(this.forma);
        this.forma.markAllAsTouched();
        this.submitEvent.emit(this.FormValues);
    }
}
I18nDynamicFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nDynamicFormComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.FormularioService }], target: i0.ɵɵFactoryTarget.Component });
I18nDynamicFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: I18nDynamicFormComponent, selector: "lib-i18n-dynamic-form", inputs: { cols: "cols", gutterSize: "gutterSize", rowHeight: "rowHeight", fields: "fields", FieldsValues: "FieldsValues", formConfig: "formConfig" }, outputs: { submitEvent: "submitEvent", onChangeEvent: "onChangeEvent" }, usesOnChanges: true, ngImport: i0, template: "<div style=\"display: flex\" *ngIf=\"!!forma\">\r\n    <form\r\n      [formGroup]=\"forma\"\r\n      autocomplete=\"off\"\r\n      [class]=\"formConfig.formCustomClass\"\r\n      (ngSubmit)=\"OnSubmit()\"\r\n    >\r\n    <mat-grid-list [rowHeight]=\"rowHeight\" [cols]=\"cols\" [gutterSize]=\"gutterSize\">\r\n  \r\n      <ng-container\r\n        *ngFor=\"let field of fields\"\r\n        [class.field-container]=\"field.type != enum.EmptyCol && !field.hidden\"\r\n      >\r\n      <mat-grid-tile colspan=\"{{ field.cols }}\" >\r\n        <div *ngIf=\"field.type != enum.EmptyCol && !field.hidden\" class=\"{{'mw-100 ' + field.templateOptions.customClass || ''}} \">\r\n          <div [ngSwitch]=\"field.type\">\r\n  \r\n            <div *ngSwitchCase=\"'text'\">\r\n              <app-i18n-text-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-text-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'dense-text'\">\r\n              <app-i18n-dense-text-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-dense-text-control>\r\n            </div>\r\n  \r\n  \r\n            <div *ngSwitchCase=\"'checkbox'\">\r\n              <app-i18n-checkbox-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-checkbox-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'text-area'\">\r\n              <app-i18n-textarea-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [rowsArea]=\"field.templateOptions.rowsArea || 2\"\r\n                [resizeable]=\"field.templateOptions.resizeable || false\"\r\n              ></app-i18n-textarea-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'number'\">\r\n              <app-i18n-number-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-number-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'radio'\">\r\n              <app-i18n-radio-button\r\n                [formControlName]=\"field.key\"\r\n                [listToTranslate]=\"field.options?.options || []\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              ></app-i18n-radio-button>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'select'\">\r\n              <app-i18n-select-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n                [listTmp]=\"field.toTranslate ? field.listKey : field.options?.options\"\r\n                [toTranslate]=\"field.toTranslate || false\"\r\n              ></app-i18n-select-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'autocomplete'\">\r\n              <app-i18n-autocomplete-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n                [listTmp]=\"field.toTranslate ? field.listKey : field.options?.options\"\r\n                [toTranslate]=\"field.toTranslate || false\"\r\n              ></app-i18n-autocomplete-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'time'\">\r\n              <app-i18n-timer-picker-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [format24hs]=\"true\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-timer-picker-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'date'\">\r\n              <app-i18n-date-picker-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-date-picker-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'phone'\">\r\n              <app-i18n-phone-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-phone-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'file'\">\r\n              <app-i18n-file-upload-control\r\n                #fileControl\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [multiple]=\"!!field.templateOptions.multiple\"\r\n                [maxSize]=\"fileControl.getMaxSizeValueInValidation(field.validations)\"\r\n              ></app-i18n-file-upload-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'password'\">\r\n              <app-i18n-password-control\r\n                [labelToTranslate]=\"field.templateOptions.label || ''\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-password-control>\r\n            </div>\r\n            \r\n            <div *ngSwitchCase=\"'empty-col'\">\r\n            </div>\r\n  \r\n            <div *ngSwitchDefault>\r\n              <h3>Se desconoce el tipo {{ field.type }}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-grid-tile>\r\n      </ng-container>\r\n    </mat-grid-list>\r\n  \r\n      <div\r\n        [ngSwitch]=\"formConfig.submitButtonConfig.materialButtonType\"\r\n        *ngIf=\"!formConfig.submitButtonConfig.hidden\"\r\n      >\r\n        <button\r\n          *ngSwitchCase=\"'raised'\"\r\n          mat-raised-button\r\n          [color]=\"formConfig.submitButtonConfig.color\"\r\n          type=\"submit\"\r\n        >\r\n          {{ formConfig.submitButtonConfig.text }}\r\n        </button>\r\n  \r\n        <button\r\n        *ngSwitchCase=\"'outline'\"\r\n        mat-stroked-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      <button\r\n        *ngSwitchCase=\"'text'\"\r\n        mat-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      <button\r\n        *ngSwitchCase=\"'flat'\"\r\n        mat-flat-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n", styles: [".field-container{padding:10px;margin:10px 0}form{width:100%}.mw-100{max-width:100%;width:100%}.mh-100{max-height:100%;height:100%}\n"], components: [{ type: i2.MatGridList, selector: "mat-grid-list", inputs: ["cols", "gutterSize", "rowHeight"], exportAs: ["matGridList"] }, { type: i2.MatGridTile, selector: "mat-grid-tile", inputs: ["rowspan", "colspan"], exportAs: ["matGridTile"] }, { type: i3.I18nTextControlComponent, selector: "app-i18n-text-control" }, { type: i4.I18nDenseTextControlComponent, selector: "app-i18n-dense-text-control" }, { type: i5.I18nCheckboxControlComponent, selector: "app-i18n-checkbox-control" }, { type: i6.I18nTextAreaControlComponent, selector: "app-i18n-textarea-control", inputs: ["rowsArea", "resizeable"] }, { type: i7.I18nNumberControlComponent, selector: "app-i18n-number-control" }, { type: i8.I18nRadioButtonComponent, selector: "app-i18n-radio-button", inputs: ["listToTranslate"] }, { type: i9.I18nSelectControlComponent, selector: "app-i18n-select-control" }, { type: i10.I18nAutocompleteComponent, selector: "app-i18n-autocomplete-control" }, { type: i11.I18nTimePickerControlComponent, selector: "app-i18n-timer-picker-control", inputs: ["format24hs"] }, { type: i12.I18nDatePickerControlComponent, selector: "app-i18n-date-picker-control" }, { type: i13.I18nPhoneControlComponent, selector: "app-i18n-phone-control" }, { type: i14.I18nFileUploadControlComponent, selector: "app-i18n-file-upload-control", inputs: ["maxSize", "multiple"] }, { type: i15.I18nPasswordControlComponent, selector: "app-i18n-password-control" }, { type: i16.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i17.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i18.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i18.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i18.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i17.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i17.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i17.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i18.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i18.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i17.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nDynamicFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-i18n-dynamic-form', template: "<div style=\"display: flex\" *ngIf=\"!!forma\">\r\n    <form\r\n      [formGroup]=\"forma\"\r\n      autocomplete=\"off\"\r\n      [class]=\"formConfig.formCustomClass\"\r\n      (ngSubmit)=\"OnSubmit()\"\r\n    >\r\n    <mat-grid-list [rowHeight]=\"rowHeight\" [cols]=\"cols\" [gutterSize]=\"gutterSize\">\r\n  \r\n      <ng-container\r\n        *ngFor=\"let field of fields\"\r\n        [class.field-container]=\"field.type != enum.EmptyCol && !field.hidden\"\r\n      >\r\n      <mat-grid-tile colspan=\"{{ field.cols }}\" >\r\n        <div *ngIf=\"field.type != enum.EmptyCol && !field.hidden\" class=\"{{'mw-100 ' + field.templateOptions.customClass || ''}} \">\r\n          <div [ngSwitch]=\"field.type\">\r\n  \r\n            <div *ngSwitchCase=\"'text'\">\r\n              <app-i18n-text-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-text-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'dense-text'\">\r\n              <app-i18n-dense-text-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-dense-text-control>\r\n            </div>\r\n  \r\n  \r\n            <div *ngSwitchCase=\"'checkbox'\">\r\n              <app-i18n-checkbox-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-checkbox-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'text-area'\">\r\n              <app-i18n-textarea-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [rowsArea]=\"field.templateOptions.rowsArea || 2\"\r\n                [resizeable]=\"field.templateOptions.resizeable || false\"\r\n              ></app-i18n-textarea-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'number'\">\r\n              <app-i18n-number-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-number-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'radio'\">\r\n              <app-i18n-radio-button\r\n                [formControlName]=\"field.key\"\r\n                [listToTranslate]=\"field.options?.options || []\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n              ></app-i18n-radio-button>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'select'\">\r\n              <app-i18n-select-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n                [listTmp]=\"field.toTranslate ? field.listKey : field.options?.options\"\r\n                [toTranslate]=\"field.toTranslate || false\"\r\n              ></app-i18n-select-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'autocomplete'\">\r\n              <app-i18n-autocomplete-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [textPath]=\"field.options?.config?.textPath || 'text'\"\r\n                [valuePath]=\"field.options?.config?.valuePath || 'value'\"\r\n                [listTmp]=\"field.toTranslate ? field.listKey : field.options?.options\"\r\n                [toTranslate]=\"field.toTranslate || false\"\r\n              ></app-i18n-autocomplete-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'time'\">\r\n              <app-i18n-timer-picker-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [format24hs]=\"true\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-timer-picker-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'date'\">\r\n              <app-i18n-date-picker-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-date-picker-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'phone'\">\r\n              <app-i18n-phone-control\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-phone-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'file'\">\r\n              <app-i18n-file-upload-control\r\n                #fileControl\r\n                [labelToTranslate]=\"field.templateOptions.label\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n                [multiple]=\"!!field.templateOptions.multiple\"\r\n                [maxSize]=\"fileControl.getMaxSizeValueInValidation(field.validations)\"\r\n              ></app-i18n-file-upload-control>\r\n            </div>\r\n  \r\n            <div *ngSwitchCase=\"'password'\">\r\n              <app-i18n-password-control\r\n                [labelToTranslate]=\"field.templateOptions.label || ''\"\r\n                [placeholderToTranslate]=\"field.templateOptions.placeholder || ''\"\r\n                [formControlName]=\"field.key\"\r\n              ></app-i18n-password-control>\r\n            </div>\r\n            \r\n            <div *ngSwitchCase=\"'empty-col'\">\r\n            </div>\r\n  \r\n            <div *ngSwitchDefault>\r\n              <h3>Se desconoce el tipo {{ field.type }}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-grid-tile>\r\n      </ng-container>\r\n    </mat-grid-list>\r\n  \r\n      <div\r\n        [ngSwitch]=\"formConfig.submitButtonConfig.materialButtonType\"\r\n        *ngIf=\"!formConfig.submitButtonConfig.hidden\"\r\n      >\r\n        <button\r\n          *ngSwitchCase=\"'raised'\"\r\n          mat-raised-button\r\n          [color]=\"formConfig.submitButtonConfig.color\"\r\n          type=\"submit\"\r\n        >\r\n          {{ formConfig.submitButtonConfig.text }}\r\n        </button>\r\n  \r\n        <button\r\n        *ngSwitchCase=\"'outline'\"\r\n        mat-stroked-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      <button\r\n        *ngSwitchCase=\"'text'\"\r\n        mat-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      <button\r\n        *ngSwitchCase=\"'flat'\"\r\n        mat-flat-button\r\n        [color]=\"formConfig.submitButtonConfig.color\"\r\n        type=\"submit\"\r\n      >\r\n        {{ formConfig.submitButtonConfig.text }}\r\n      </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n", styles: [".field-container{padding:10px;margin:10px 0}form{width:100%}.mw-100{max-width:100%;width:100%}.mh-100{max-height:100%;height:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.FormularioService }]; }, propDecorators: { cols: [{
                type: Input
            }], gutterSize: [{
                type: Input
            }], rowHeight: [{
                type: Input
            }], fields: [{
                type: Input
            }], FieldsValues: [{
                type: Input
            }], submitEvent: [{
                type: Output
            }], onChangeEvent: [{
                type: Output
            }], formConfig: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi1keW5hbWljLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi1jb250cm9scy9zcmMvbGliL2kxOG4td3JhcHBlci1jb250cm9scy9pMThuLWR5bmFtaWMtZm9ybS9pMThuLWR5bmFtaWMtZm9ybS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pMThuLWNvbnRyb2xzL3NyYy9saWIvaTE4bi13cmFwcGVyLWNvbnRyb2xzL2kxOG4tZHluYW1pYy1mb3JtL2kxOG4tZHluYW1pYy1mb3JtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFrQixLQUFLLEVBQUUsTUFBTSxFQUEwRCxNQUFNLGVBQWUsQ0FBQztBQUcvSSxPQUFPLEVBQWdGLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFoSSxNQUFNLE9BQU8sd0JBQXdCO0lBd0JuQyxZQUFvQixLQUF3QixFQUFVLEVBQXFCO1FBQXZELFVBQUssR0FBTCxLQUFLLENBQW1CO1FBQVUsT0FBRSxHQUFGLEVBQUUsQ0FBbUI7UUF0QjNFLGtDQUFrQztRQUN6QixTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLFNBQUksR0FBRyxlQUFlLENBQUM7UUFFZCxlQUFVLEdBQVcsS0FBSyxDQUFDO1FBQzNCLGNBQVMsR0FBVyxPQUFPLENBQUE7UUFHMUIsZ0JBQVcsR0FBcUIsSUFBSSxZQUFZLEVBQUUsQ0FBQTtRQUNsRCxrQkFBYSxHQUFxQixJQUFJLFlBQVksRUFBRSxDQUFBO1FBQ3JELGVBQVUsR0FBZTtZQUNoQyxlQUFlLEVBQUUsRUFBRTtZQUNuQixrQkFBa0IsRUFBQztnQkFDakIsSUFBSSxFQUFDLFFBQVE7Z0JBQ2IsS0FBSyxFQUFDLFNBQVM7Z0JBQ2YsTUFBTSxFQUFFLEtBQUs7Z0JBQ2Isa0JBQWtCLEVBQUMsUUFBUTthQUM1QjtTQUNGLENBQUE7SUFLRCxDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQTtJQUN6QixDQUFDO0lBRUQsUUFBUSxLQUFVLENBQUM7SUFFbkIsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsYUFBYSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxZQUFZLEVBQUc7WUFDL0csSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFBO1NBQ2pCO0lBQ0gsQ0FBQztJQUNPLFNBQVM7UUFDZixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSztZQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFDLFlBQVksQ0FBRSxDQUFDLE9BQU8sQ0FBRSxHQUFHLENBQUMsRUFBRTtnQkFDOUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsUUFBUSxDQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtZQUN4RCxDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBYSxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUUsQ0FBQyxDQUFDLEVBQUU7WUFDekQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUUsQ0FBQTtRQUM3QyxDQUFDLENBQUMsQ0FBQTtRQUNGLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZO1lBQ3JCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDdkIsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixFQUFFLENBQUE7UUFDN0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ3hDLENBQUM7O3FIQW5FVSx3QkFBd0I7eUdBQXhCLHdCQUF3QixpVENYckMsc2tRQThMQTsyRkRuTGEsd0JBQXdCO2tCQUxwQyxTQUFTOytCQUNFLHVCQUF1Qjt3SUFPeEIsSUFBSTtzQkFBWixLQUFLO2dCQUdHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDSSxXQUFXO3NCQUFwQixNQUFNO2dCQUNHLGFBQWE7c0JBQXRCLE1BQU07Z0JBQ0UsVUFBVTtzQkFBbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyICwgQWZ0ZXJWaWV3SW5pdCwgSW5wdXQsIE91dHB1dCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IER5bkZvcm1Db21wb25lbnQsIEZvcm1Db25maWcsIEZvcm1GaWVsZENvbmZpZywgRm9ybXVsYXJpb1NlcnZpY2UsIEVtcHR5ZmllbGQsIEZvcm1Db25maWdUeXBlcyB9IGZyb20gJ3NvZi1uZy1jb250cm9scyc7XHJcbmltcG9ydCB7IGkxOG5EeW5hbWljRm9ybUNvbmZpZyB9IGZyb20gJy4vRHluYW1pY0Zvcm1Db25maWcnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItaTE4bi1keW5hbWljLWZvcm0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9pMThuLWR5bmFtaWMtZm9ybS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vaTE4bi1keW5hbWljLWZvcm0uY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJMThuRHluYW1pY0Zvcm1Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XHJcbiAgXHJcbiAgLy8gZmllbGRzUDogRm9ybUZpZWxkQ29uZmlnW10gPSBbXVxyXG4gIEBJbnB1dCgpIGNvbHM6IG51bWJlciA9IDI7XHJcbiAgZW51bSA9IEZvcm1Db25maWdUeXBlcztcclxuICB2YWx1ZUNoYW5nZXMhOiBTdWJzY3JpcHRpb247XHJcbiAgQElucHV0KCkgZ3V0dGVyU2l6ZTogc3RyaW5nID0gJzFlbSc7XHJcbiAgQElucHV0KCkgcm93SGVpZ2h0OiBzdHJpbmcgPSAnMTMwcHgnXHJcbiAgQElucHV0KCkgZmllbGRzITogKGkxOG5EeW5hbWljRm9ybUNvbmZpZyB8IEVtcHR5ZmllbGQgKVtdIFxyXG4gIEBJbnB1dCgpIEZpZWxkc1ZhbHVlczogYW55O1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRFdmVudDogRXZlbnRFbWl0dGVyPGFueT49IG5ldyBFdmVudEVtaXR0ZXIoKVxyXG4gIEBPdXRwdXQoKSBvbkNoYW5nZUV2ZW50OiBFdmVudEVtaXR0ZXI8YW55Pj0gbmV3IEV2ZW50RW1pdHRlcigpXHJcbiAgQElucHV0KCkgZm9ybUNvbmZpZzogRm9ybUNvbmZpZyA9IHtcclxuICAgIGZvcm1DdXN0b21DbGFzczogJycsXHJcbiAgICBzdWJtaXRCdXR0b25Db25maWc6e1xyXG4gICAgICB0ZXh0OidTVUJNSVQnLFxyXG4gICAgICBjb2xvcjoncHJpbWFyeScsXHJcbiAgICAgIGhpZGRlbjogZmFsc2UsXHJcbiAgICAgIG1hdGVyaWFsQnV0dG9uVHlwZToncmFpc2VkJ1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZm9ybWEhOiBGb3JtR3JvdXA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCBwcml2YXRlIGZzOiBGb3JtdWxhcmlvU2VydmljZSkge1xyXG4gIH1cclxuXHJcbiAgZ2V0IEZvcm1WYWx1ZXMoKXtcclxuICAgIHJldHVybiB0aGlzLmZvcm1hLnZhbHVlXHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmKCAhIWNoYW5nZXNbJ0ZpZWxkc1ZhbHVlcyddICYmIGNoYW5nZXNbJ0ZpZWxkc1ZhbHVlcyddLnByZXZpb3VzVmFsdWUgIT0gY2hhbmdlc1snRmllbGRzVmFsdWVzJ10uY3VycmVudFZhbHVlICkge1xyXG4gICAgICB0aGlzLlNldFZhbHVlcygpXHJcbiAgICB9XHJcbiAgfVxyXG4gIHByaXZhdGUgU2V0VmFsdWVzKCkge1xyXG4gICAgaWYgKCEhdGhpcy5mb3JtYSlcclxuICAgICAgT2JqZWN0LmtleXMoIHRoaXMuRmllbGRzVmFsdWVzICkuZm9yRWFjaCgga2V5ID0+IHtcclxuICAgICAgICB0aGlzLmZvcm1hLmdldChrZXkpPy5zZXRWYWx1ZSggdGhpcy5GaWVsZHNWYWx1ZXNba2V5XSlcclxuICAgICAgfSlcclxuICB9XHJcbiAgXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgdGhpcy5mb3JtYSA9IHRoaXMuZnMuYnVpbGRGb3JtR3JvdXAodGhpcy5maWVsZHMgYXMgYW55KTtcclxuICAgIHRoaXMudmFsdWVDaGFuZ2VzID0gdGhpcy5mb3JtYS52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKCB2ID0+IHtcclxuICAgICAgdGhpcy5vbkNoYW5nZUV2ZW50LmVtaXQoIHRoaXMuZm9ybWEudmFsdWUgKVxyXG4gICAgfSlcclxuICAgIGlmICghIXRoaXMuRmllbGRzVmFsdWVzKVxyXG4gICAgICB0aGlzLlNldFZhbHVlcygpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdDaGVja2VkKCkge1xyXG4gICAgdGhpcy5jZFJlZi5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIHRoaXMudmFsdWVDaGFuZ2VzLnVuc3Vic2NyaWJlKCk7XHJcbiAgICB0aGlzLmZzLm5nT25EZXN0cm95KClcclxuICB9XHJcblxyXG4gIE9uU3VibWl0KCl7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLmZvcm1hKVxyXG4gICAgdGhpcy5mb3JtYS5tYXJrQWxsQXNUb3VjaGVkKClcclxuICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCh0aGlzLkZvcm1WYWx1ZXMpXHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgc3R5bGU9XCJkaXNwbGF5OiBmbGV4XCIgKm5nSWY9XCIhIWZvcm1hXCI+XHJcbiAgICA8Zm9ybVxyXG4gICAgICBbZm9ybUdyb3VwXT1cImZvcm1hXCJcclxuICAgICAgYXV0b2NvbXBsZXRlPVwib2ZmXCJcclxuICAgICAgW2NsYXNzXT1cImZvcm1Db25maWcuZm9ybUN1c3RvbUNsYXNzXCJcclxuICAgICAgKG5nU3VibWl0KT1cIk9uU3VibWl0KClcIlxyXG4gICAgPlxyXG4gICAgPG1hdC1ncmlkLWxpc3QgW3Jvd0hlaWdodF09XCJyb3dIZWlnaHRcIiBbY29sc109XCJjb2xzXCIgW2d1dHRlclNpemVdPVwiZ3V0dGVyU2l6ZVwiPlxyXG4gIFxyXG4gICAgICA8bmctY29udGFpbmVyXHJcbiAgICAgICAgKm5nRm9yPVwibGV0IGZpZWxkIG9mIGZpZWxkc1wiXHJcbiAgICAgICAgW2NsYXNzLmZpZWxkLWNvbnRhaW5lcl09XCJmaWVsZC50eXBlICE9IGVudW0uRW1wdHlDb2wgJiYgIWZpZWxkLmhpZGRlblwiXHJcbiAgICAgID5cclxuICAgICAgPG1hdC1ncmlkLXRpbGUgY29sc3Bhbj1cInt7IGZpZWxkLmNvbHMgfX1cIiA+XHJcbiAgICAgICAgPGRpdiAqbmdJZj1cImZpZWxkLnR5cGUgIT0gZW51bS5FbXB0eUNvbCAmJiAhZmllbGQuaGlkZGVuXCIgY2xhc3M9XCJ7eydtdy0xMDAgJyArIGZpZWxkLnRlbXBsYXRlT3B0aW9ucy5jdXN0b21DbGFzcyB8fCAnJ319IFwiPlxyXG4gICAgICAgICAgPGRpdiBbbmdTd2l0Y2hdPVwiZmllbGQudHlwZVwiPlxyXG4gIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCIndGV4dCdcIj5cclxuICAgICAgICAgICAgICA8YXBwLWkxOG4tdGV4dC1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi10ZXh0LWNvbnRyb2w+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInZGVuc2UtdGV4dCdcIj5cclxuICAgICAgICAgICAgICA8YXBwLWkxOG4tZGVuc2UtdGV4dC1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi1kZW5zZS10ZXh0LWNvbnRyb2w+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gIFxyXG4gIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInY2hlY2tib3gnXCI+XHJcbiAgICAgICAgICAgICAgPGFwcC1pMThuLWNoZWNrYm94LWNvbnRyb2xcclxuICAgICAgICAgICAgICAgIFtsYWJlbFRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5sYWJlbFwiXHJcbiAgICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMucGxhY2Vob2xkZXIgfHwgJydcIlxyXG4gICAgICAgICAgICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJmaWVsZC5rZXlcIlxyXG4gICAgICAgICAgICAgID48L2FwcC1pMThuLWNoZWNrYm94LWNvbnRyb2w+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCIndGV4dC1hcmVhJ1wiPlxyXG4gICAgICAgICAgICAgIDxhcHAtaTE4bi10ZXh0YXJlYS1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICAgIFtyb3dzQXJlYV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMucm93c0FyZWEgfHwgMlwiXHJcbiAgICAgICAgICAgICAgICBbcmVzaXplYWJsZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMucmVzaXplYWJsZSB8fCBmYWxzZVwiXHJcbiAgICAgICAgICAgICAgPjwvYXBwLWkxOG4tdGV4dGFyZWEtY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgXHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCI+XHJcbiAgICAgICAgICAgICAgPGFwcC1pMThuLW51bWJlci1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi1udW1iZXItY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgXHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidyYWRpbydcIj5cclxuICAgICAgICAgICAgICA8YXBwLWkxOG4tcmFkaW8tYnV0dG9uXHJcbiAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImZpZWxkLmtleVwiXHJcbiAgICAgICAgICAgICAgICBbbGlzdFRvVHJhbnNsYXRlXT1cImZpZWxkLm9wdGlvbnM/Lm9wdGlvbnMgfHwgW11cIlxyXG4gICAgICAgICAgICAgICAgW3RleHRQYXRoXT1cImZpZWxkLm9wdGlvbnM/LmNvbmZpZz8udGV4dFBhdGggfHwgJ3RleHQnXCJcclxuICAgICAgICAgICAgICAgIFt2YWx1ZVBhdGhdPVwiZmllbGQub3B0aW9ucz8uY29uZmlnPy52YWx1ZVBhdGggfHwgJ3ZhbHVlJ1wiXHJcbiAgICAgICAgICAgICAgPjwvYXBwLWkxOG4tcmFkaW8tYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICBcclxuICAgICAgICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ3NlbGVjdCdcIj5cclxuICAgICAgICAgICAgICA8YXBwLWkxOG4tc2VsZWN0LWNvbnRyb2xcclxuICAgICAgICAgICAgICAgIFtsYWJlbFRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5sYWJlbFwiXHJcbiAgICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMucGxhY2Vob2xkZXIgfHwgJydcIlxyXG4gICAgICAgICAgICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJmaWVsZC5rZXlcIlxyXG4gICAgICAgICAgICAgICAgW3RleHRQYXRoXT1cImZpZWxkLm9wdGlvbnM/LmNvbmZpZz8udGV4dFBhdGggfHwgJ3RleHQnXCJcclxuICAgICAgICAgICAgICAgIFt2YWx1ZVBhdGhdPVwiZmllbGQub3B0aW9ucz8uY29uZmlnPy52YWx1ZVBhdGggfHwgJ3ZhbHVlJ1wiXHJcbiAgICAgICAgICAgICAgICBbbGlzdFRtcF09XCJmaWVsZC50b1RyYW5zbGF0ZSA/IGZpZWxkLmxpc3RLZXkgOiBmaWVsZC5vcHRpb25zPy5vcHRpb25zXCJcclxuICAgICAgICAgICAgICAgIFt0b1RyYW5zbGF0ZV09XCJmaWVsZC50b1RyYW5zbGF0ZSB8fCBmYWxzZVwiXHJcbiAgICAgICAgICAgICAgPjwvYXBwLWkxOG4tc2VsZWN0LWNvbnRyb2w+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInYXV0b2NvbXBsZXRlJ1wiPlxyXG4gICAgICAgICAgICAgIDxhcHAtaTE4bi1hdXRvY29tcGxldGUtY29udHJvbFxyXG4gICAgICAgICAgICAgICAgW2xhYmVsVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLmxhYmVsXCJcclxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlclRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5wbGFjZWhvbGRlciB8fCAnJ1wiXHJcbiAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImZpZWxkLmtleVwiXHJcbiAgICAgICAgICAgICAgICBbdGV4dFBhdGhdPVwiZmllbGQub3B0aW9ucz8uY29uZmlnPy50ZXh0UGF0aCB8fCAndGV4dCdcIlxyXG4gICAgICAgICAgICAgICAgW3ZhbHVlUGF0aF09XCJmaWVsZC5vcHRpb25zPy5jb25maWc/LnZhbHVlUGF0aCB8fCAndmFsdWUnXCJcclxuICAgICAgICAgICAgICAgIFtsaXN0VG1wXT1cImZpZWxkLnRvVHJhbnNsYXRlID8gZmllbGQubGlzdEtleSA6IGZpZWxkLm9wdGlvbnM/Lm9wdGlvbnNcIlxyXG4gICAgICAgICAgICAgICAgW3RvVHJhbnNsYXRlXT1cImZpZWxkLnRvVHJhbnNsYXRlIHx8IGZhbHNlXCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi1hdXRvY29tcGxldGUtY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgXHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIid0aW1lJ1wiPlxyXG4gICAgICAgICAgICAgIDxhcHAtaTE4bi10aW1lci1waWNrZXItY29udHJvbFxyXG4gICAgICAgICAgICAgICAgW2xhYmVsVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLmxhYmVsXCJcclxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlclRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5wbGFjZWhvbGRlciB8fCAnJ1wiXHJcbiAgICAgICAgICAgICAgICBbZm9ybWF0MjRoc109XCJ0cnVlXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi10aW1lci1waWNrZXItY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgXHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidkYXRlJ1wiPlxyXG4gICAgICAgICAgICAgIDxhcHAtaTE4bi1kYXRlLXBpY2tlci1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi1kYXRlLXBpY2tlci1jb250cm9sPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICBcclxuICAgICAgICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ3Bob25lJ1wiPlxyXG4gICAgICAgICAgICAgIDxhcHAtaTE4bi1waG9uZS1jb250cm9sXHJcbiAgICAgICAgICAgICAgICBbbGFiZWxUb1RyYW5zbGF0ZV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiZmllbGQua2V5XCJcclxuICAgICAgICAgICAgICA+PC9hcHAtaTE4bi1waG9uZS1jb250cm9sPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICBcclxuICAgICAgICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ2ZpbGUnXCI+XHJcbiAgICAgICAgICAgICAgPGFwcC1pMThuLWZpbGUtdXBsb2FkLWNvbnRyb2xcclxuICAgICAgICAgICAgICAgICNmaWxlQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgW2xhYmVsVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLmxhYmVsXCJcclxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlclRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5wbGFjZWhvbGRlciB8fCAnJ1wiXHJcbiAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImZpZWxkLmtleVwiXHJcbiAgICAgICAgICAgICAgICBbbXVsdGlwbGVdPVwiISFmaWVsZC50ZW1wbGF0ZU9wdGlvbnMubXVsdGlwbGVcIlxyXG4gICAgICAgICAgICAgICAgW21heFNpemVdPVwiZmlsZUNvbnRyb2wuZ2V0TWF4U2l6ZVZhbHVlSW5WYWxpZGF0aW9uKGZpZWxkLnZhbGlkYXRpb25zKVwiXHJcbiAgICAgICAgICAgICAgPjwvYXBwLWkxOG4tZmlsZS11cGxvYWQtY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgXHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidwYXNzd29yZCdcIj5cclxuICAgICAgICAgICAgICA8YXBwLWkxOG4tcGFzc3dvcmQtY29udHJvbFxyXG4gICAgICAgICAgICAgICAgW2xhYmVsVG9UcmFuc2xhdGVdPVwiZmllbGQudGVtcGxhdGVPcHRpb25zLmxhYmVsIHx8ICcnXCJcclxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlclRvVHJhbnNsYXRlXT1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucy5wbGFjZWhvbGRlciB8fCAnJ1wiXHJcbiAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImZpZWxkLmtleVwiXHJcbiAgICAgICAgICAgICAgPjwvYXBwLWkxOG4tcGFzc3dvcmQtY29udHJvbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInZW1wdHktY29sJ1wiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICBcclxuICAgICAgICAgICAgPGRpdiAqbmdTd2l0Y2hEZWZhdWx0PlxyXG4gICAgICAgICAgICAgIDxoMz5TZSBkZXNjb25vY2UgZWwgdGlwbyB7eyBmaWVsZC50eXBlIH19PC9oMz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9tYXQtZ3JpZC10aWxlPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvbWF0LWdyaWQtbGlzdD5cclxuICBcclxuICAgICAgPGRpdlxyXG4gICAgICAgIFtuZ1N3aXRjaF09XCJmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy5tYXRlcmlhbEJ1dHRvblR5cGVcIlxyXG4gICAgICAgICpuZ0lmPVwiIWZvcm1Db25maWcuc3VibWl0QnV0dG9uQ29uZmlnLmhpZGRlblwiXHJcbiAgICAgID5cclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAqbmdTd2l0Y2hDYXNlPVwiJ3JhaXNlZCdcIlxyXG4gICAgICAgICAgbWF0LXJhaXNlZC1idXR0b25cclxuICAgICAgICAgIFtjb2xvcl09XCJmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy5jb2xvclwiXHJcbiAgICAgICAgICB0eXBlPVwic3VibWl0XCJcclxuICAgICAgICA+XHJcbiAgICAgICAgICB7eyBmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy50ZXh0IH19XHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgXHJcbiAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICpuZ1N3aXRjaENhc2U9XCInb3V0bGluZSdcIlxyXG4gICAgICAgIG1hdC1zdHJva2VkLWJ1dHRvblxyXG4gICAgICAgIFtjb2xvcl09XCJmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy5jb2xvclwiXHJcbiAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbiAgICAgID5cclxuICAgICAgICB7eyBmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy50ZXh0IH19XHJcbiAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIid0ZXh0J1wiXHJcbiAgICAgICAgbWF0LWJ1dHRvblxyXG4gICAgICAgIFtjb2xvcl09XCJmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy5jb2xvclwiXHJcbiAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbiAgICAgID5cclxuICAgICAgICB7eyBmb3JtQ29uZmlnLnN1Ym1pdEJ1dHRvbkNvbmZpZy50ZXh0IH19XHJcbiAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidmbGF0J1wiXHJcbiAgICAgICAgbWF0LWZsYXQtYnV0dG9uXHJcbiAgICAgICAgW2NvbG9yXT1cImZvcm1Db25maWcuc3VibWl0QnV0dG9uQ29uZmlnLmNvbG9yXCJcclxuICAgICAgICB0eXBlPVwic3VibWl0XCJcclxuICAgICAgPlxyXG4gICAgICAgIHt7IGZvcm1Db25maWcuc3VibWl0QnV0dG9uQ29uZmlnLnRleHQgfX1cclxuICAgICAgPC9idXR0b24+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9mb3JtPlxyXG4gIDwvZGl2PlxyXG4gIFxyXG4iXX0=