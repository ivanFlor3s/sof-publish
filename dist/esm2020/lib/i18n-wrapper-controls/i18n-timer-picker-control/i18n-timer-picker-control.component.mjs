import { Component, ViewChild, Input } from '@angular/core';
import { TimePickerMaterialControlComponent } from 'sof-ng-controls';
import { I18nBase } from '../../shared/models/base';
import * as i0 from "@angular/core";
import * as i1 from "sof-ng-controls";
import * as i2 from "@angular/forms";
import * as i3 from "@ngx-translate/core";
export class I18nTimePickerControlComponent extends I18nBase {
    constructor() {
        super(...arguments);
        this.format24hs = false;
    }
    ngAfterViewInit() {
        this.control.errorControl.translateFuncion = (param) => {
            return this.pipeTranslate.transform(param);
        };
    }
}
I18nTimePickerControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nTimePickerControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
I18nTimePickerControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: I18nTimePickerControlComponent, selector: "app-i18n-timer-picker-control", inputs: { format24hs: "format24hs" }, viewQueries: [{ propertyName: "control", first: true, predicate: TimePickerMaterialControlComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-container [formGroup]=\"getFbGroup()\">\r\n    <sof-time-picker-control  \r\n        label=\"{{ labelToTranslate | translate }}\"\r\n        placeholder=\"{{ placeholderToTranslate | translate}}\"\r\n        [format24hs]=\"format24hs\"\r\n        [formControlName]=\"controlDir.name\"\r\n        [noLabel]=\"noLabel\"\r\n        [sideLabel]=\"sideLabel\"\r\n        [readOnly]=\"readOnly\"\r\n    >\r\n    </sof-time-picker-control>\r\n</ng-container>", components: [{ type: i1.TimePickerMaterialControlComponent, selector: "sof-time-picker-control", inputs: ["format24hs"] }], directives: [{ type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }], pipes: { "translate": i3.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nTimePickerControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-i18n-timer-picker-control', template: "<ng-container [formGroup]=\"getFbGroup()\">\r\n    <sof-time-picker-control  \r\n        label=\"{{ labelToTranslate | translate }}\"\r\n        placeholder=\"{{ placeholderToTranslate | translate}}\"\r\n        [format24hs]=\"format24hs\"\r\n        [formControlName]=\"controlDir.name\"\r\n        [noLabel]=\"noLabel\"\r\n        [sideLabel]=\"sideLabel\"\r\n        [readOnly]=\"readOnly\"\r\n    >\r\n    </sof-time-picker-control>\r\n</ng-container>" }]
        }], propDecorators: { control: [{
                type: ViewChild,
                args: [TimePickerMaterialControlComponent]
            }], format24hs: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi10aW1lci1waWNrZXItY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pMThuLWNvbnRyb2xzL3NyYy9saWIvaTE4bi13cmFwcGVyLWNvbnRyb2xzL2kxOG4tdGltZXItcGlja2VyLWNvbnRyb2wvaTE4bi10aW1lci1waWNrZXItY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pMThuLWNvbnRyb2xzL3NyYy9saWIvaTE4bi13cmFwcGVyLWNvbnRyb2xzL2kxOG4tdGltZXItcGlja2VyLWNvbnRyb2wvaTE4bi10aW1lci1waWNrZXItY29udHJvbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFpQixTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7QUFNcEQsTUFBTSxPQUFPLDhCQUNYLFNBQVEsUUFBUTtJQUxsQjs7UUFVVyxlQUFVLEdBQVksS0FBSyxDQUFDO0tBTXRDO0lBTEMsZUFBZTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGdCQUFnQixHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7WUFDN0QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUM7SUFDSixDQUFDOzsySEFYVSw4QkFBOEI7K0dBQTlCLDhCQUE4QixvSkFJOUIsa0NBQWtDLHVFQ1ovQyx5Y0FXZTsyRkRIRiw4QkFBOEI7a0JBSjFDLFNBQVM7K0JBQ0UsK0JBQStCOzhCQVF6QyxPQUFPO3NCQUROLFNBQVM7dUJBQUMsa0NBQWtDO2dCQUVwQyxVQUFVO3NCQUFsQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBBZnRlclZpZXdJbml0LCBWaWV3Q2hpbGQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpbWVQaWNrZXJNYXRlcmlhbENvbnRyb2xDb21wb25lbnQgfSBmcm9tICdzb2YtbmctY29udHJvbHMnO1xyXG5pbXBvcnQgeyBJMThuQmFzZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9tb2RlbHMvYmFzZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1pMThuLXRpbWVyLXBpY2tlci1jb250cm9sJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaTE4bi10aW1lci1waWNrZXItY29udHJvbC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJMThuVGltZVBpY2tlckNvbnRyb2xDb21wb25lbnRcclxuICBleHRlbmRzIEkxOG5CYXNlXHJcbiAgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0XHJcbntcclxuICBAVmlld0NoaWxkKFRpbWVQaWNrZXJNYXRlcmlhbENvbnRyb2xDb21wb25lbnQpXHJcbiAgY29udHJvbCE6IFRpbWVQaWNrZXJNYXRlcmlhbENvbnRyb2xDb21wb25lbnQ7XHJcbiAgQElucHV0KCkgZm9ybWF0MjRoczogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuY29udHJvbC5lcnJvckNvbnRyb2wudHJhbnNsYXRlRnVuY2lvbiA9IChwYXJhbTogc3RyaW5nKSA9PiB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBpcGVUcmFuc2xhdGUudHJhbnNmb3JtKHBhcmFtKTtcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiIsIjxuZy1jb250YWluZXIgW2Zvcm1Hcm91cF09XCJnZXRGYkdyb3VwKClcIj5cclxuICAgIDxzb2YtdGltZS1waWNrZXItY29udHJvbCAgXHJcbiAgICAgICAgbGFiZWw9XCJ7eyBsYWJlbFRvVHJhbnNsYXRlIHwgdHJhbnNsYXRlIH19XCJcclxuICAgICAgICBwbGFjZWhvbGRlcj1cInt7IHBsYWNlaG9sZGVyVG9UcmFuc2xhdGUgfCB0cmFuc2xhdGV9fVwiXHJcbiAgICAgICAgW2Zvcm1hdDI0aHNdPVwiZm9ybWF0MjRoc1wiXHJcbiAgICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sRGlyLm5hbWVcIlxyXG4gICAgICAgIFtub0xhYmVsXT1cIm5vTGFiZWxcIlxyXG4gICAgICAgIFtzaWRlTGFiZWxdPVwic2lkZUxhYmVsXCJcclxuICAgICAgICBbcmVhZE9ubHldPVwicmVhZE9ubHlcIlxyXG4gICAgPlxyXG4gICAgPC9zb2YtdGltZS1waWNrZXItY29udHJvbD5cclxuPC9uZy1jb250YWluZXI+Il19