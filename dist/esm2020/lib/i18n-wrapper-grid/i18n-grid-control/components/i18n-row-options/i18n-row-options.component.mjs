import { Component } from '@angular/core';
import { RowOptionsComponent } from 'sof-ng-controls';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/menu";
import * as i4 from "@angular/common";
import * as i5 from "@angular/material/tooltip";
import * as i6 from "@ngx-translate/core";
export class I18nRowOptionsComponent extends RowOptionsComponent {
}
I18nRowOptionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nRowOptionsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
I18nRowOptionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: I18nRowOptionsComponent, selector: "app-i18n-row-options", usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"options.length > 0\">\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon matTooltip=\"{{'GRID.MENU.TYPEHEAD-OPTIONS'|translate}}\"> more_vert </mat-icon>\r\n  </button>\r\n  <div>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button\r\n        mat-menu-item\r\n        *ngFor=\"let opt of options\"\r\n        (click)=\"accionar(opt)\"\r\n      >\r\n        {{ opt.option | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</ng-container>\r\n\r\n", components: [{ type: i1.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i3.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { type: i3.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { type: i5.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "translate": i6.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: I18nRowOptionsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-i18n-row-options', template: "<ng-container *ngIf=\"options.length > 0\">\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon matTooltip=\"{{'GRID.MENU.TYPEHEAD-OPTIONS'|translate}}\"> more_vert </mat-icon>\r\n  </button>\r\n  <div>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button\r\n        mat-menu-item\r\n        *ngFor=\"let opt of options\"\r\n        (click)=\"accionar(opt)\"\r\n      >\r\n        {{ opt.option | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</ng-container>\r\n\r\n", styles: [] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi1yb3ctb3B0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pMThuLWNvbnRyb2xzL3NyYy9saWIvaTE4bi13cmFwcGVyLWdyaWQvaTE4bi1ncmlkLWNvbnRyb2wvY29tcG9uZW50cy9pMThuLXJvdy1vcHRpb25zL2kxOG4tcm93LW9wdGlvbnMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi1jb250cm9scy9zcmMvbGliL2kxOG4td3JhcHBlci1ncmlkL2kxOG4tZ3JpZC1jb250cm9sL2NvbXBvbmVudHMvaTE4bi1yb3ctb3B0aW9ucy9pMThuLXJvdy1vcHRpb25zLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFHLG1CQUFtQixFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7O0FBUXZELE1BQU0sT0FBTyx1QkFBNEIsU0FBUSxtQkFBc0I7O29IQUExRCx1QkFBdUI7d0dBQXZCLHVCQUF1QixtRkNUcEMsZ2dCQWlCQTsyRkRSYSx1QkFBdUI7a0JBTm5DLFNBQVM7K0JBQ0Usc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7ICBSb3dPcHRpb25zQ29tcG9uZW50IH0gZnJvbSAnc29mLW5nLWNvbnRyb2xzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLWkxOG4tcm93LW9wdGlvbnMnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9pMThuLXJvdy1vcHRpb25zLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFtdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgSTE4blJvd09wdGlvbnNDb21wb25lbnQ8VD4gIGV4dGVuZHMgUm93T3B0aW9uc0NvbXBvbmVudDxUPntcclxuXHJcbn1cclxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIm9wdGlvbnMubGVuZ3RoID4gMFwiPlxyXG4gIDxidXR0b24gbWF0LWljb24tYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCI+XHJcbiAgICA8bWF0LWljb24gbWF0VG9vbHRpcD1cInt7J0dSSUQuTUVOVS5UWVBFSEVBRC1PUFRJT05TJ3x0cmFuc2xhdGV9fVwiPiBtb3JlX3ZlcnQgPC9tYXQtaWNvbj5cclxuICA8L2J1dHRvbj5cclxuICA8ZGl2PlxyXG4gICAgPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgbWF0LW1lbnUtaXRlbVxyXG4gICAgICAgICpuZ0Zvcj1cImxldCBvcHQgb2Ygb3B0aW9uc1wiXHJcbiAgICAgICAgKGNsaWNrKT1cImFjY2lvbmFyKG9wdClcIlxyXG4gICAgICA+XHJcbiAgICAgICAge3sgb3B0Lm9wdGlvbiB8IHRyYW5zbGF0ZSB9fVxyXG4gICAgICA8L2J1dHRvbj5cclxuICAgIDwvbWF0LW1lbnU+XHJcbiAgPC9kaXY+XHJcbjwvbmctY29udGFpbmVyPlxyXG5cclxuIl19