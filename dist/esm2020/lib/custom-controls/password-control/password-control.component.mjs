import { Component } from '@angular/core';
import { PasswordControlComponent } from '../../base/password-control/password-control.component';
import * as i0 from "@angular/core";
import * as i1 from "../error/error.component";
export class PasswordCustomControlComponent extends PasswordControlComponent {
    ngOnInit() {
    }
}
PasswordCustomControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PasswordCustomControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PasswordCustomControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: PasswordCustomControlComponent, selector: "sof-password-control", usesInheritance: true, ngImport: i0, template: "<label>{{label}}\r\n    <input \r\n        class=\"form-control\" \r\n        [type]=\"show ? 'text' : 'password'\" \r\n        [placeholder]=\"placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        (input)=\"onInput($any($event.target).value)\"\r\n    />\r\n</label>\r\n<sof-error [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [""], components: [{ type: i1.ErrorCustomComponent, selector: "sof-error" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PasswordCustomControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-password-control', template: "<label>{{label}}\r\n    <input \r\n        class=\"form-control\" \r\n        [type]=\"show ? 'text' : 'password'\" \r\n        [placeholder]=\"placeholder\"\r\n        [value]=\"value\"\r\n        [disabled]=\"disabled\"\r\n        (input)=\"onInput($any($event.target).value)\"\r\n    />\r\n</label>\r\n<sof-error [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [""] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL2N1c3RvbS1jb250cm9scy9wYXNzd29yZC1jb250cm9sL3Bhc3N3b3JkLWNvbnRyb2wuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29udHJvbHMvc3JjL2xpYi9jdXN0b20tY29udHJvbHMvcGFzc3dvcmQtY29udHJvbC9wYXNzd29yZC1jb250cm9sLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sd0RBQXdELENBQUM7OztBQU9sRyxNQUFNLE9BQU8sOEJBQStCLFNBQVEsd0JBQXdCO0lBRTFFLFFBQVE7SUFDUixDQUFDOzs0SEFIVSw4QkFBOEI7Z0hBQTlCLDhCQUE4QixtRkNSM0Msb1hBV0E7NEZESGEsOEJBQThCO2tCQUwxQyxTQUFTOytCQUNFLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYXNzd29yZENvbnRyb2xDb21wb25lbnQgfSBmcm9tICcuLi8uLi9iYXNlL3Bhc3N3b3JkLWNvbnRyb2wvcGFzc3dvcmQtY29udHJvbC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzb2YtcGFzc3dvcmQtY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Bhc3N3b3JkLWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3Bhc3N3b3JkLWNvbnRyb2wuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQYXNzd29yZEN1c3RvbUNvbnRyb2xDb21wb25lbnQgZXh0ZW5kcyBQYXNzd29yZENvbnRyb2xDb21wb25lbnQgIHtcclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxufVxyXG4iLCI8bGFiZWw+e3tsYWJlbH19XHJcbiAgICA8aW5wdXQgXHJcbiAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBcclxuICAgICAgICBbdHlwZV09XCJzaG93ID8gJ3RleHQnIDogJ3Bhc3N3b3JkJ1wiIFxyXG4gICAgICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXHJcbiAgICAgICAgW3ZhbHVlXT1cInZhbHVlXCJcclxuICAgICAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxyXG4gICAgICAgIChpbnB1dCk9XCJvbklucHV0KCRhbnkoJGV2ZW50LnRhcmdldCkudmFsdWUpXCJcclxuICAgIC8+XHJcbjwvbGFiZWw+XHJcbjxzb2YtZXJyb3IgW2xhYmVsXT1cImxhYmVsXCIgW2Vycm9yc109XCJlcnJvcnNcIj48L3NvZi1lcnJvcj5cclxuIl19