import { Component, ViewChild } from '@angular/core';
import { RadioButtonControlComponent } from '../../base/radio-button-control/radio-button-control.component';
import { ErrorMaterialComponent } from '../error/error.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/radio";
import * as i2 from "../error/error.component";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/common";
export class RadioButtonMaterialControlComponent extends RadioButtonControlComponent {
}
RadioButtonMaterialControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: RadioButtonMaterialControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
RadioButtonMaterialControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: RadioButtonMaterialControlComponent, selector: "sof-radio-button-control", viewQueries: [{ propertyName: "errorControl", first: true, predicate: ErrorMaterialComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-label [ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido\r\n}\">{{label}}</mat-label>\r\n<mat-radio-group style=\"margin-right: 10px;\"\r\n  matInput\r\n  [disabled]=\"disabled\"\r\n  [name]=\"label\" \r\n  [value]=\"value\" \r\n  [ngClass]=\"{'required-label': isRequired}\"\r\n  [ngClass]=\"{ 'error-field': EsInvalido }\"\r\n  (input)=\"onInput($any($event.target).value)\"\r\n  >\r\n  <mat-radio-button\r\n    *ngFor=\"let item of list; let i=index\"\r\n    [checked]=\"getValue(item) === value\" \r\n    [value]=\"getValue(item)\">\r\n    {{getText(item)}}\r\n  </mat-radio-button>\r\n</mat-radio-group>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}:host{display:flex;flex-direction:column}:host mat-label{white-space:break-spaces}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:#f44336}:host mat-radio-group{margin-top:23px;margin-bottom:50px;display:flex;justify-content:flex-start;gap:22px}\n"], components: [{ type: i1.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { type: i2.ErrorMaterialComponent, selector: "sof-error" }], directives: [{ type: i3.MatLabel, selector: "mat-label" }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: RadioButtonMaterialControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-radio-button-control', template: "<mat-label [ngClass]=\"{\r\n  'required-label': isRequired,\r\n  'text-error': EsInvalido\r\n}\">{{label}}</mat-label>\r\n<mat-radio-group style=\"margin-right: 10px;\"\r\n  matInput\r\n  [disabled]=\"disabled\"\r\n  [name]=\"label\" \r\n  [value]=\"value\" \r\n  [ngClass]=\"{'required-label': isRequired}\"\r\n  [ngClass]=\"{ 'error-field': EsInvalido }\"\r\n  (input)=\"onInput($any($event.target).value)\"\r\n  >\r\n  <mat-radio-button\r\n    *ngFor=\"let item of list; let i=index\"\r\n    [checked]=\"getValue(item) === value\" \r\n    [value]=\"getValue(item)\">\r\n    {{getText(item)}}\r\n  </mat-radio-button>\r\n</mat-radio-group>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}:host{display:flex;flex-direction:column}:host mat-label{white-space:break-spaces}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:#f44336}:host mat-radio-group{margin-top:23px;margin-bottom:50px;display:flex;justify-content:flex-start;gap:22px}\n"] }]
        }], propDecorators: { errorControl: [{
                type: ViewChild,
                args: [ErrorMaterialComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tYnV0dG9uLWNvbnRyb2wtY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29udHJvbHMvc3JjL2xpYi9tYXRlcmlhbC1jb250cm9scy9yYWRpby1idXR0b24tY29udHJvbC9yYWRpby1idXR0b24tY29udHJvbC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL3JhZGlvLWJ1dHRvbi1jb250cm9sL3JhZGlvLWJ1dHRvbi1jb250cm9sLWNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7QUFPbEUsTUFBTSxPQUFPLG1DQUFvQyxTQUFRLDJCQUEyQjs7Z0lBQXZFLG1DQUFtQztvSEFBbkMsbUNBQW1DLDhHQUNuQyxzQkFBc0IsdUVDVm5DLHl1QkFxQkE7MkZEWmEsbUNBQW1DO2tCQUwvQyxTQUFTOytCQUNFLDBCQUEwQjs4QkFLRCxZQUFZO3NCQUE5QyxTQUFTO3VCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJhZGlvQnV0dG9uQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2Jhc2UvcmFkaW8tYnV0dG9uLWNvbnRyb2wvcmFkaW8tYnV0dG9uLWNvbnRyb2wuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRXJyb3JNYXRlcmlhbENvbXBvbmVudCB9IGZyb20gJy4uL2Vycm9yL2Vycm9yLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NvZi1yYWRpby1idXR0b24tY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3JhZGlvLWJ1dHRvbi1jb250cm9sLWNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9yYWRpby1idXR0b24tY29udHJvbC1jb21wb25lbnQuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUmFkaW9CdXR0b25NYXRlcmlhbENvbnRyb2xDb21wb25lbnQgZXh0ZW5kcyBSYWRpb0J1dHRvbkNvbnRyb2xDb21wb25lbnQge1xyXG4gIEBWaWV3Q2hpbGQoRXJyb3JNYXRlcmlhbENvbXBvbmVudCkgZXJyb3JDb250cm9sOiBFcnJvck1hdGVyaWFsQ29tcG9uZW50XHJcblxyXG59XHJcbiIsIjxtYXQtbGFiZWwgW25nQ2xhc3NdPVwie1xyXG4gICdyZXF1aXJlZC1sYWJlbCc6IGlzUmVxdWlyZWQsXHJcbiAgJ3RleHQtZXJyb3InOiBFc0ludmFsaWRvXHJcbn1cIj57e2xhYmVsfX08L21hdC1sYWJlbD5cclxuPG1hdC1yYWRpby1ncm91cCBzdHlsZT1cIm1hcmdpbi1yaWdodDogMTBweDtcIlxyXG4gIG1hdElucHV0XHJcbiAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcclxuICBbbmFtZV09XCJsYWJlbFwiIFxyXG4gIFt2YWx1ZV09XCJ2YWx1ZVwiIFxyXG4gIFtuZ0NsYXNzXT1cInsncmVxdWlyZWQtbGFiZWwnOiBpc1JlcXVpcmVkfVwiXHJcbiAgW25nQ2xhc3NdPVwieyAnZXJyb3ItZmllbGQnOiBFc0ludmFsaWRvIH1cIlxyXG4gIChpbnB1dCk9XCJvbklucHV0KCRhbnkoJGV2ZW50LnRhcmdldCkudmFsdWUpXCJcclxuICA+XHJcbiAgPG1hdC1yYWRpby1idXR0b25cclxuICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIGxpc3Q7IGxldCBpPWluZGV4XCJcclxuICAgIFtjaGVja2VkXT1cImdldFZhbHVlKGl0ZW0pID09PSB2YWx1ZVwiIFxyXG4gICAgW3ZhbHVlXT1cImdldFZhbHVlKGl0ZW0pXCI+XHJcbiAgICB7e2dldFRleHQoaXRlbSl9fVxyXG4gIDwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuPC9tYXQtcmFkaW8tZ3JvdXA+XHJcbjxzb2YtZXJyb3IgW2NvbnRyb2xJbnZhbGlkb109XCJFc0ludmFsaWRvXCIgW2xhYmVsXT1cImxhYmVsXCIgW2Vycm9yc109XCJlcnJvcnNcIj48L3NvZi1lcnJvcj5cclxuIl19