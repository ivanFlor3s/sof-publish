import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/card";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/common";
export class CardComponent {
    constructor() {
        this.subTitleText = '';
        this.expandable = false;
        this.expanded = true;
        this.onToggleExpand = new EventEmitter();
        this.isSubCard = false;
    }
    toggleExpand() {
        this.expanded = !this.expanded;
        this.onToggleExpand.emit({ expanded: this.expanded });
    }
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: CardComponent, selector: "sof-card", inputs: { titleText: "titleText", subTitleText: "subTitleText", expandable: "expandable", expanded: "expanded", isSubCard: "isSubCard" }, outputs: { onToggleExpand: "onToggleExpand" }, ngImport: i0, template: "<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\" *ngIf=\"!expandable || expanded\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{titleText}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitleText}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>", styles: ["mat-card{padding:40px 21px 32px}.mat-card-title-content{display:inline-flex;justify-content:flex-end;float:right;max-height:1.44em;gap:12px}mat-card>.mat-card-title-content{margin-top:-12px}.body{margin:32px 0}mat-card:not(.collapsed)>*:not(mat-card-title){transition:all .5s ease-in-out}mat-card.collapsed>*:not(mat-card-title){height:0px;margin:0;padding:0;overflow:hidden;opacity:0;transition:all .5s ease-in-out}.mat-sub-card{padding:26px 15px 23px}.mat-sub-card>mat-card-title:not(.mat-card-title-content){font-size:1.25em}\n"], components: [{ type: i1.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i1.MatCardTitle, selector: "mat-card-title, [mat-card-title], [matCardTitle]" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.MatCardSubtitle, selector: "mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-card', template: "<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\" *ngIf=\"!expandable || expanded\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{titleText}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitleText}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>", styles: ["mat-card{padding:40px 21px 32px}.mat-card-title-content{display:inline-flex;justify-content:flex-end;float:right;max-height:1.44em;gap:12px}mat-card>.mat-card-title-content{margin-top:-12px}.body{margin:32px 0}mat-card:not(.collapsed)>*:not(mat-card-title){transition:all .5s ease-in-out}mat-card.collapsed>*:not(mat-card-title){height:0px;margin:0;padding:0;overflow:hidden;opacity:0;transition:all .5s ease-in-out}.mat-sub-card{padding:26px 15px 23px}.mat-sub-card>mat-card-title:not(.mat-card-title-content){font-size:1.25em}\n"] }]
        }], propDecorators: { titleText: [{
                type: Input
            }], subTitleText: [{
                type: Input
            }], expandable: [{
                type: Input
            }], expanded: [{
                type: Input
            }], onToggleExpand: [{
                type: Output
            }], isSubCard: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NhcmQvY2FyZC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NhcmQvY2FyZC1jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFPdkUsTUFBTSxPQUFPLGFBQWE7SUFMMUI7UUFPVyxpQkFBWSxHQUFXLEVBQUUsQ0FBQztRQUMxQixlQUFVLEdBQVksS0FBSyxDQUFDO1FBQzVCLGFBQVEsR0FBWSxJQUFJLENBQUM7UUFDeEIsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzFDLGNBQVMsR0FBWSxLQUFLLENBQUM7S0FNckM7SUFKQyxZQUFZO1FBQ1YsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQzs7MEdBWFUsYUFBYTs4RkFBYixhQUFhLHlPQ1AxQixtNEJBd0JXOzJGRGpCRSxhQUFhO2tCQUx6QixTQUFTOytCQUNFLFVBQVU7OEJBS1gsU0FBUztzQkFBakIsS0FBSztnQkFDRyxZQUFZO3NCQUFwQixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDSSxjQUFjO3NCQUF2QixNQUFNO2dCQUNFLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzb2YtY2FyZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcmQtY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NhcmQtY29tcG9uZW50LnNjc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENhcmRDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpIHRpdGxlVGV4dCE6IHN0cmluZztcclxuICBASW5wdXQoKSBzdWJUaXRsZVRleHQ6IHN0cmluZyA9ICcnO1xyXG4gIEBJbnB1dCgpIGV4cGFuZGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBASW5wdXQoKSBleHBhbmRlZDogYm9vbGVhbiA9IHRydWU7XHJcbiAgQE91dHB1dCgpIG9uVG9nZ2xlRXhwYW5kID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgQElucHV0KCkgaXNTdWJDYXJkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIHRvZ2dsZUV4cGFuZCgpIHtcclxuICAgIHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcclxuICAgIHRoaXMub25Ub2dnbGVFeHBhbmQuZW1pdCh7ZXhwYW5kZWQ6IHRoaXMuZXhwYW5kZWR9KTtcclxuICB9XHJcbn1cclxuIiwiPG1hdC1jYXJkIFtjbGFzcy5jb2xsYXBzZWRdPVwiIWV4cGFuZGVkXCIgW2NsYXNzLm1hdC1zdWItY2FyZF09XCJpc1N1YkNhcmRcIiBbY2xhc3MubWF0LWVsZXZhdGlvbi16N109XCIhaXNTdWJDYXJkXCI+XHJcblxyXG4gIDxtYXQtY2FyZC10aXRsZSBjbGFzcz1cIm1hdC1jYXJkLXRpdGxlLWNvbnRlbnRcIj5cclxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltoZWFkZXJdXCIgKm5nSWY9XCIhZXhwYW5kYWJsZSB8fCBleHBhbmRlZFwiPjwvbmctY29udGVudD5cclxuICAgIFxyXG4gICAgPGJ1dHRvbiBtYXQtc3Ryb2tlZC1idXR0b24gY29sb3I9XCJwcmltYXJ5XCIgYXJpYS1sYWJlbD1cIkV4cGFuZGlyXCIgKm5nSWY9XCJleHBhbmRhYmxlXCIgKGNsaWNrKT1cInRvZ2dsZUV4cGFuZCgpXCI+XHJcbiAgICAgIDxtYXQtaWNvbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zLW91dGxpbmVkXCI+XHJcbiAgICAgICAge3tleHBhbmRlZCA/ICdleHBhbmRfbGVzcycgOiAnZXhwYW5kX21vcmUnfX1cclxuICAgICAgPC9tYXQtaWNvbj5cclxuICAgIDwvYnV0dG9uPlxyXG4gIDwvbWF0LWNhcmQtdGl0bGU+XHJcblxyXG4gIDxtYXQtY2FyZC10aXRsZT57e3RpdGxlVGV4dH19PC9tYXQtY2FyZC10aXRsZT5cclxuXHJcbiAgPG1hdC1jYXJkLXN1YnRpdGxlPnt7c3ViVGl0bGVUZXh0fX08L21hdC1jYXJkLXN1YnRpdGxlPlxyXG5cclxuICA8ZGl2IGNsYXNzPVwiYm9keVwiPlxyXG4gICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW2JvZHldXCI+PC9uZy1jb250ZW50PlxyXG4gIDwvZGl2PlxyXG5cclxuICA8ZGl2IGNsYXNzPVwiZm9vdGVyXCI+XHJcbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbZm9vdGVyXVwiPjwvbmctY29udGVudD5cclxuICA8L2Rpdj5cclxuXHJcbjwvbWF0LWNhcmQ+Il19