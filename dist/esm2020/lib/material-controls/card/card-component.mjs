import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/card";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/common";
export class CardComponent {
    constructor() {
        this.subTitle = '';
        this.expandable = false;
        this.expanded = true;
        this.onToggleExpand = new EventEmitter();
        this.isSubCard = false;
    }
    toggleExpand() {
        this.expanded = !this.expanded;
        this.onToggleExpand.emit({ expanded: this.expanded });
    }
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: CardComponent, selector: "sof-card", inputs: { title: "title", subTitle: "subTitle", expandable: "expandable", isSubCard: "isSubCard" }, outputs: { onToggleExpand: "onToggleExpand" }, ngImport: i0, template: "<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{title}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitle}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>", styles: ["mat-card{padding:40px 21px 32px}.mat-card-title-content{display:inline-flex;justify-content:flex-end;float:right;max-height:1.44em}.mat-card-title-content>*{margin-left:9px}mat-card>.mat-card-title-content{margin-top:-12px}.body{margin:32px 0}mat-card:not(.collapsed)>*:not(mat-card-title){transition:all .5s ease-in-out}mat-card.collapsed>*:not(mat-card-title){height:0px;margin:0;padding:0;overflow:hidden;opacity:0;transition:all .5s ease-in-out}.mat-sub-card{padding:26px 15px 23px}.mat-sub-card>mat-card-title:not(.mat-card-title-content){font-size:1.25em}\n"], components: [{ type: i1.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i1.MatCardTitle, selector: "mat-card-title, [mat-card-title], [matCardTitle]" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.MatCardSubtitle, selector: "mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-card', template: "<mat-card [class.collapsed]=\"!expanded\" [class.mat-sub-card]=\"isSubCard\" [class.mat-elevation-z7]=\"!isSubCard\">\r\n\r\n  <mat-card-title class=\"mat-card-title-content\">\r\n    <ng-content select=\"[header]\"></ng-content>\r\n    \r\n    <button mat-stroked-button color=\"primary\" aria-label=\"Expandir\" *ngIf=\"expandable\" (click)=\"toggleExpand()\">\r\n      <mat-icon class=\"material-icons-outlined\">\r\n        {{expanded ? 'expand_less' : 'expand_more'}}\r\n      </mat-icon>\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-title>{{title}}</mat-card-title>\r\n\r\n  <mat-card-subtitle>{{subTitle}}</mat-card-subtitle>\r\n\r\n  <div class=\"body\">\r\n    <ng-content select=\"[body]\"></ng-content>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <ng-content select=\"[footer]\"></ng-content>\r\n  </div>\r\n\r\n</mat-card>", styles: ["mat-card{padding:40px 21px 32px}.mat-card-title-content{display:inline-flex;justify-content:flex-end;float:right;max-height:1.44em}.mat-card-title-content>*{margin-left:9px}mat-card>.mat-card-title-content{margin-top:-12px}.body{margin:32px 0}mat-card:not(.collapsed)>*:not(mat-card-title){transition:all .5s ease-in-out}mat-card.collapsed>*:not(mat-card-title){height:0px;margin:0;padding:0;overflow:hidden;opacity:0;transition:all .5s ease-in-out}.mat-sub-card{padding:26px 15px 23px}.mat-sub-card>mat-card-title:not(.mat-card-title-content){font-size:1.25em}\n"] }]
        }], propDecorators: { title: [{
                type: Input
            }], subTitle: [{
                type: Input
            }], expandable: [{
                type: Input
            }], onToggleExpand: [{
                type: Output
            }], isSubCard: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NhcmQvY2FyZC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NhcmQvY2FyZC1jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFPdkUsTUFBTSxPQUFPLGFBQWE7SUFMMUI7UUFPVyxhQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFDckMsYUFBUSxHQUFZLElBQUksQ0FBQztRQUNmLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUMxQyxjQUFTLEdBQVksS0FBSyxDQUFDO0tBTXJDO0lBSkMsWUFBWTtRQUNWLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7OzBHQVhVLGFBQWE7OEZBQWIsYUFBYSxtTUNQMUIseTFCQXdCVzsyRkRqQkUsYUFBYTtrQkFMekIsU0FBUzsrQkFDRSxVQUFVOzhCQUtYLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBRUksY0FBYztzQkFBdkIsTUFBTTtnQkFDRSxTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc29mLWNhcmQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXJkLWNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jYXJkLWNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDYXJkQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSB0aXRsZSE6IHN0cmluZztcclxuICBASW5wdXQoKSBzdWJUaXRsZTogc3RyaW5nID0gJyc7XHJcbiAgQElucHV0KCkgZXhwYW5kYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIGV4cGFuZGVkOiBib29sZWFuID0gdHJ1ZTtcclxuICBAT3V0cHV0KCkgb25Ub2dnbGVFeHBhbmQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBASW5wdXQoKSBpc1N1YkNhcmQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgdG9nZ2xlRXhwYW5kKCkge1xyXG4gICAgdGhpcy5leHBhbmRlZCA9ICF0aGlzLmV4cGFuZGVkO1xyXG4gICAgdGhpcy5vblRvZ2dsZUV4cGFuZC5lbWl0KHtleHBhbmRlZDogdGhpcy5leHBhbmRlZH0pO1xyXG4gIH1cclxufVxyXG4iLCI8bWF0LWNhcmQgW2NsYXNzLmNvbGxhcHNlZF09XCIhZXhwYW5kZWRcIiBbY2xhc3MubWF0LXN1Yi1jYXJkXT1cImlzU3ViQ2FyZFwiIFtjbGFzcy5tYXQtZWxldmF0aW9uLXo3XT1cIiFpc1N1YkNhcmRcIj5cclxuXHJcbiAgPG1hdC1jYXJkLXRpdGxlIGNsYXNzPVwibWF0LWNhcmQtdGl0bGUtY29udGVudFwiPlxyXG4gICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW2hlYWRlcl1cIj48L25nLWNvbnRlbnQ+XHJcbiAgICBcclxuICAgIDxidXR0b24gbWF0LXN0cm9rZWQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIGFyaWEtbGFiZWw9XCJFeHBhbmRpclwiICpuZ0lmPVwiZXhwYW5kYWJsZVwiIChjbGljayk9XCJ0b2dnbGVFeHBhbmQoKVwiPlxyXG4gICAgICA8bWF0LWljb24gY2xhc3M9XCJtYXRlcmlhbC1pY29ucy1vdXRsaW5lZFwiPlxyXG4gICAgICAgIHt7ZXhwYW5kZWQgPyAnZXhwYW5kX2xlc3MnIDogJ2V4cGFuZF9tb3JlJ319XHJcbiAgICAgIDwvbWF0LWljb24+XHJcbiAgICA8L2J1dHRvbj5cclxuICA8L21hdC1jYXJkLXRpdGxlPlxyXG5cclxuICA8bWF0LWNhcmQtdGl0bGU+e3t0aXRsZX19PC9tYXQtY2FyZC10aXRsZT5cclxuXHJcbiAgPG1hdC1jYXJkLXN1YnRpdGxlPnt7c3ViVGl0bGV9fTwvbWF0LWNhcmQtc3VidGl0bGU+XHJcblxyXG4gIDxkaXYgY2xhc3M9XCJib2R5XCI+XHJcbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbYm9keV1cIj48L25nLWNvbnRlbnQ+XHJcbiAgPC9kaXY+XHJcblxyXG4gIDxkaXYgY2xhc3M9XCJmb290ZXJcIj5cclxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltmb290ZXJdXCI+PC9uZy1jb250ZW50PlxyXG4gIDwvZGl2PlxyXG5cclxuPC9tYXQtY2FyZD4iXX0=