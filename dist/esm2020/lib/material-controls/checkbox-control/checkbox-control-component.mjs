import { Component, ViewChild } from '@angular/core';
import { CheckboxControlComponent } from '../../base/checkbox-control/checkbox-control.component';
import { ErrorMaterialComponent } from '../error/error.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/checkbox";
import * as i2 from "../error/error.component";
export class CheckboxMaterialControlComponent extends CheckboxControlComponent {
}
CheckboxMaterialControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CheckboxMaterialControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CheckboxMaterialControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: CheckboxMaterialControlComponent, selector: "sof-checkbox-control", viewQueries: [{ propertyName: "errorControl", first: true, predicate: ErrorMaterialComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-checkbox matInput\r\ncolor=\"primary\"\r\n    class=\"form-control\"\r\n    [checked]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"checkbox\"\r\n    (input)=\"onInput($any($event.target).checked)\">\r\n    {{label}}\r\n</mat-checkbox>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}\n"], components: [{ type: i1.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { type: i2.ErrorMaterialComponent, selector: "sof-error" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CheckboxMaterialControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-checkbox-control', template: "<mat-checkbox matInput\r\ncolor=\"primary\"\r\n    class=\"form-control\"\r\n    [checked]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    type=\"checkbox\"\r\n    (input)=\"onInput($any($event.target).checked)\">\r\n    {{label}}\r\n</mat-checkbox>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}\n"] }]
        }], propDecorators: { errorControl: [{
                type: ViewChild,
                args: [ErrorMaterialComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtY29udHJvbC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWNvbnRyb2wvY2hlY2tib3gtY29udHJvbC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWNvbnRyb2wvY2hlY2tib3gtY29udHJvbC1jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNsRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7OztBQU9sRSxNQUFNLE9BQU8sZ0NBQWlDLFNBQVEsd0JBQXdCOzs4SEFBakUsZ0NBQWdDO2tIQUFoQyxnQ0FBZ0MsMEdBQ2hDLHNCQUFzQix1RUNWbkMsaVdBVUE7NEZERGEsZ0NBQWdDO2tCQUw1QyxTQUFTOytCQUNFLHNCQUFzQjs4QkFLRyxZQUFZO3NCQUE5QyxTQUFTO3VCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENoZWNrYm94Q29udHJvbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2Jhc2UvY2hlY2tib3gtY29udHJvbC9jaGVja2JveC1jb250cm9sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEVycm9yTWF0ZXJpYWxDb21wb25lbnQgfSBmcm9tICcuLi9lcnJvci9lcnJvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzb2YtY2hlY2tib3gtY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94LWNvbnRyb2wtY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NoZWNrYm94LWNvbnRyb2wtY29tcG9uZW50LnNjc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENoZWNrYm94TWF0ZXJpYWxDb250cm9sQ29tcG9uZW50IGV4dGVuZHMgQ2hlY2tib3hDb250cm9sQ29tcG9uZW50IHtcclxuICBAVmlld0NoaWxkKEVycm9yTWF0ZXJpYWxDb21wb25lbnQpIGVycm9yQ29udHJvbDogRXJyb3JNYXRlcmlhbENvbXBvbmVudFxyXG5cclxufVxyXG4iLCI8bWF0LWNoZWNrYm94IG1hdElucHV0XHJcbmNvbG9yPVwicHJpbWFyeVwiXHJcbiAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXHJcbiAgICBbY2hlY2tlZF09XCJ2YWx1ZVwiXHJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxyXG4gICAgdHlwZT1cImNoZWNrYm94XCJcclxuICAgIChpbnB1dCk9XCJvbklucHV0KCRhbnkoJGV2ZW50LnRhcmdldCkuY2hlY2tlZClcIj5cclxuICAgIHt7bGFiZWx9fVxyXG48L21hdC1jaGVja2JveD5cclxuPHNvZi1lcnJvciBbY29udHJvbEludmFsaWRvXT1cIkVzSW52YWxpZG9cIiBbbGFiZWxdPVwibGFiZWxcIiBbZXJyb3JzXT1cImVycm9yc1wiPjwvc29mLWVycm9yPlxyXG4iXX0=