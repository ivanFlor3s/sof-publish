import { Component, ViewChild } from '@angular/core';
import { CheckboxGroupControlComponent } from '../../base/checkbox-group-control/checkbox-group-control.component';
import { ErrorMaterialComponent } from '../error/error.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/checkbox";
import * as i2 from "../error/error.component";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/common";
export class CheckboxGroupMaterialControlComponent extends CheckboxGroupControlComponent {
}
CheckboxGroupMaterialControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CheckboxGroupMaterialControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CheckboxGroupMaterialControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: CheckboxGroupMaterialControlComponent, selector: "sof-checkbox-group-control", viewQueries: [{ propertyName: "errorControl", first: true, predicate: ErrorMaterialComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'no-label': noLabel\r\n  }\">{{label}}</mat-label>\r\n<div class=\"checkbox-group\"\r\n[ngClass]=\"{ 'no-label': noLabel }\"\r\n>\r\n    <mat-checkbox matInput\r\n        *ngFor=\"let item of list; let i=index\"\r\n        color=\"primary\"\r\n        class=\"form-control\"\r\n        [checked]=\"getChecked(item)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"checkbox\"\r\n        (input)=\"onInput(item, $any($event.target).checked)\">\r\n        {{getText(item)}}\r\n    </mat-checkbox>\r\n</div>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}:host{display:inline-block}:host mat-label{white-space:break-spaces}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:#f44336}:host mat-label.no-label{display:none}:host .checkbox-group{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:22px}:host .checkbox-group:not(.no-label){margin-top:25px;margin-bottom:30px}\n"], components: [{ type: i1.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { type: i2.ErrorMaterialComponent, selector: "sof-error" }], directives: [{ type: i3.MatLabel, selector: "mat-label" }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: CheckboxGroupMaterialControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-checkbox-group-control', template: "<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'no-label': noLabel\r\n  }\">{{label}}</mat-label>\r\n<div class=\"checkbox-group\"\r\n[ngClass]=\"{ 'no-label': noLabel }\"\r\n>\r\n    <mat-checkbox matInput\r\n        *ngFor=\"let item of list; let i=index\"\r\n        color=\"primary\"\r\n        class=\"form-control\"\r\n        [checked]=\"getChecked(item)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"checkbox\"\r\n        (input)=\"onInput(item, $any($event.target).checked)\">\r\n        {{getText(item)}}\r\n    </mat-checkbox>\r\n</div>\r\n<sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n", styles: [".required-label:after{content:\"*\";color:red}:host{display:inline-block}:host mat-label{white-space:break-spaces}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:#f44336}:host mat-label.no-label{display:none}:host .checkbox-group{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:22px}:host .checkbox-group:not(.no-label){margin-top:25px;margin-bottom:30px}\n"] }]
        }], propDecorators: { errorControl: [{
                type: ViewChild,
                args: [ErrorMaterialComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wvY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wvY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQztBQUNuSCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7O0FBT2xFLE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSw2QkFBNkI7O2tJQUEzRSxxQ0FBcUM7c0hBQXJDLHFDQUFxQyxnSEFDckMsc0JBQXNCLHVFQ1ZuQywyc0JBb0JBOzJGRFhhLHFDQUFxQztrQkFMakQsU0FBUzsrQkFDRSw0QkFBNEI7OEJBS0gsWUFBWTtzQkFBOUMsU0FBUzt1QkFBQyxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDaGVja2JveEdyb3VwQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2Jhc2UvY2hlY2tib3gtZ3JvdXAtY29udHJvbC9jaGVja2JveC1ncm91cC1jb250cm9sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEVycm9yTWF0ZXJpYWxDb21wb25lbnQgfSBmcm9tICcuLi9lcnJvci9lcnJvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzb2YtY2hlY2tib3gtZ3JvdXAtY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wtY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wtY29tcG9uZW50LnNjc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENoZWNrYm94R3JvdXBNYXRlcmlhbENvbnRyb2xDb21wb25lbnQgZXh0ZW5kcyBDaGVja2JveEdyb3VwQ29udHJvbENvbXBvbmVudCB7XHJcbiAgQFZpZXdDaGlsZChFcnJvck1hdGVyaWFsQ29tcG9uZW50KSBlcnJvckNvbnRyb2w6IEVycm9yTWF0ZXJpYWxDb21wb25lbnRcclxuXHJcbn1cclxuIiwiPG1hdC1sYWJlbCBbbmdDbGFzc109XCJ7XHJcbiAgICAncmVxdWlyZWQtbGFiZWwnOiBpc1JlcXVpcmVkLFxyXG4gICAgJ3RleHQtZXJyb3InOiBFc0ludmFsaWRvLFxyXG4gICAgJ25vLWxhYmVsJzogbm9MYWJlbFxyXG4gIH1cIj57e2xhYmVsfX08L21hdC1sYWJlbD5cclxuPGRpdiBjbGFzcz1cImNoZWNrYm94LWdyb3VwXCJcclxuW25nQ2xhc3NdPVwieyAnbm8tbGFiZWwnOiBub0xhYmVsIH1cIlxyXG4+XHJcbiAgICA8bWF0LWNoZWNrYm94IG1hdElucHV0XHJcbiAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgbGlzdDsgbGV0IGk9aW5kZXhcIlxyXG4gICAgICAgIGNvbG9yPVwicHJpbWFyeVwiXHJcbiAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxyXG4gICAgICAgIFtjaGVja2VkXT1cImdldENoZWNrZWQoaXRlbSlcIlxyXG4gICAgICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXHJcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcclxuICAgICAgICAoaW5wdXQpPVwib25JbnB1dChpdGVtLCAkYW55KCRldmVudC50YXJnZXQpLmNoZWNrZWQpXCI+XHJcbiAgICAgICAge3tnZXRUZXh0KGl0ZW0pfX1cclxuICAgIDwvbWF0LWNoZWNrYm94PlxyXG48L2Rpdj5cclxuPHNvZi1lcnJvciBbY29udHJvbEludmFsaWRvXT1cIkVzSW52YWxpZG9cIiBbbGFiZWxdPVwibGFiZWxcIiBbZXJyb3JzXT1cImVycm9yc1wiPjwvc29mLWVycm9yPlxyXG4iXX0=