import { Component, ViewChild } from '@angular/core';
import { CheckboxGroupControlComponent } from '../../base/checkbox-group-control/checkbox-group-control.component';
import { ErrorMaterialComponent } from '../error/error.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/checkbox";
import * as i2 from "../error/error.component";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/common";
export class CheckboxGroupMaterialControlComponent extends CheckboxGroupControlComponent {
}
CheckboxGroupMaterialControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CheckboxGroupMaterialControlComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CheckboxGroupMaterialControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: CheckboxGroupMaterialControlComponent, selector: "sof-checkbox-group-control", viewQueries: [{ propertyName: "errorControl", first: true, predicate: ErrorMaterialComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\">{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n    <div class=\"checkbox-group\"\r\n    [ngClass]=\"{ 'no-label': noLabel }\"\r\n    [ngClass]=\"{ 'side-label': sideLabel }\"\r\n    >\r\n        <mat-checkbox matInput\r\n            *ngFor=\"let item of list; let i=index\"\r\n            color=\"primary\"\r\n            class=\"form-control\"\r\n            [checked]=\"getChecked(item)\"\r\n            [disabled]=\"disabled\"\r\n            type=\"checkbox\"\r\n            (input)=\"onInput(item, $any($event.target).checked)\">\r\n            {{getText(item)}}\r\n        </mat-checkbox>\r\n    </div>\r\n    <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>\r\n", styles: [":host{display:flex;flex-wrap:wrap}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:red}:host mat-label.required-label:after{content:\"*\";color:red}:host mat-label.no-label{visibility:hidden}:host mat-label.no-label.side-label{display:none}:host mat-label.side-label{margin-right:30px}:host mat-label:not(.side-label){width:100%}:host .input-container{display:flex;flex-direction:column;flex-grow:1}:host mat-label{white-space:break-spaces}:host mat-label *{align-self:flex-start}:host sof-error{margin-top:0}:host .checkbox-group{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:22px}:host .checkbox-group:not(.side-label){margin-top:25px}\n"], components: [{ type: i1.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { type: i2.ErrorMaterialComponent, selector: "sof-error" }], directives: [{ type: i3.MatLabel, selector: "mat-label" }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CheckboxGroupMaterialControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-checkbox-group-control', template: "<mat-label [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'no-label': noLabel,\r\n    'side-label': sideLabel\r\n  }\">{{label}}</mat-label>\r\n<div class=\"input-container\">\r\n    <div class=\"checkbox-group\"\r\n    [ngClass]=\"{ 'no-label': noLabel }\"\r\n    [ngClass]=\"{ 'side-label': sideLabel }\"\r\n    >\r\n        <mat-checkbox matInput\r\n            *ngFor=\"let item of list; let i=index\"\r\n            color=\"primary\"\r\n            class=\"form-control\"\r\n            [checked]=\"getChecked(item)\"\r\n            [disabled]=\"disabled\"\r\n            type=\"checkbox\"\r\n            (input)=\"onInput(item, $any($event.target).checked)\">\r\n            {{getText(item)}}\r\n        </mat-checkbox>\r\n    </div>\r\n    <sof-error [controlInvalido]=\"EsInvalido\" [label]=\"label\" [errors]=\"errors\"></sof-error>\r\n</div>\r\n", styles: [":host{display:flex;flex-wrap:wrap}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:red}:host mat-label.required-label:after{content:\"*\";color:red}:host mat-label.no-label{visibility:hidden}:host mat-label.no-label.side-label{display:none}:host mat-label.side-label{margin-right:30px}:host mat-label:not(.side-label){width:100%}:host .input-container{display:flex;flex-direction:column;flex-grow:1}:host mat-label{white-space:break-spaces}:host mat-label *{align-self:flex-start}:host sof-error{margin-top:0}:host .checkbox-group{display:flex;justify-content:flex-start;flex-wrap:wrap;gap:22px}:host .checkbox-group:not(.side-label){margin-top:25px}\n"] }]
        }], propDecorators: { errorControl: [{
                type: ViewChild,
                args: [ErrorMaterialComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wvY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wvY2hlY2tib3gtZ3JvdXAtY29udHJvbC1jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQztBQUNuSCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7O0FBT2xFLE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSw2QkFBNkI7O21JQUEzRSxxQ0FBcUM7dUhBQXJDLHFDQUFxQyxnSEFDckMsc0JBQXNCLHVFQ1ZuQyxxNEJBd0JBOzRGRGZhLHFDQUFxQztrQkFMakQsU0FBUzsrQkFDRSw0QkFBNEI7OEJBS0gsWUFBWTtzQkFBOUMsU0FBUzt1QkFBQyxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDaGVja2JveEdyb3VwQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2Jhc2UvY2hlY2tib3gtZ3JvdXAtY29udHJvbC9jaGVja2JveC1ncm91cC1jb250cm9sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEVycm9yTWF0ZXJpYWxDb21wb25lbnQgfSBmcm9tICcuLi9lcnJvci9lcnJvci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzb2YtY2hlY2tib3gtZ3JvdXAtY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wtY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NoZWNrYm94LWdyb3VwLWNvbnRyb2wtY29tcG9uZW50LnNjc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIENoZWNrYm94R3JvdXBNYXRlcmlhbENvbnRyb2xDb21wb25lbnQgZXh0ZW5kcyBDaGVja2JveEdyb3VwQ29udHJvbENvbXBvbmVudCB7XHJcbiAgQFZpZXdDaGlsZChFcnJvck1hdGVyaWFsQ29tcG9uZW50KSBlcnJvckNvbnRyb2w6IEVycm9yTWF0ZXJpYWxDb21wb25lbnRcclxuXHJcbn1cclxuIiwiPG1hdC1sYWJlbCBbbmdDbGFzc109XCJ7XHJcbiAgICAncmVxdWlyZWQtbGFiZWwnOiBpc1JlcXVpcmVkLFxyXG4gICAgJ3RleHQtZXJyb3InOiBFc0ludmFsaWRvLFxyXG4gICAgJ25vLWxhYmVsJzogbm9MYWJlbCxcclxuICAgICdzaWRlLWxhYmVsJzogc2lkZUxhYmVsXHJcbiAgfVwiPnt7bGFiZWx9fTwvbWF0LWxhYmVsPlxyXG48ZGl2IGNsYXNzPVwiaW5wdXQtY29udGFpbmVyXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY2hlY2tib3gtZ3JvdXBcIlxyXG4gICAgW25nQ2xhc3NdPVwieyAnbm8tbGFiZWwnOiBub0xhYmVsIH1cIlxyXG4gICAgW25nQ2xhc3NdPVwieyAnc2lkZS1sYWJlbCc6IHNpZGVMYWJlbCB9XCJcclxuICAgID5cclxuICAgICAgICA8bWF0LWNoZWNrYm94IG1hdElucHV0XHJcbiAgICAgICAgICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIGxpc3Q7IGxldCBpPWluZGV4XCJcclxuICAgICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcclxuICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxyXG4gICAgICAgICAgICBbY2hlY2tlZF09XCJnZXRDaGVja2VkKGl0ZW0pXCJcclxuICAgICAgICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcclxuICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcclxuICAgICAgICAgICAgKGlucHV0KT1cIm9uSW5wdXQoaXRlbSwgJGFueSgkZXZlbnQudGFyZ2V0KS5jaGVja2VkKVwiPlxyXG4gICAgICAgICAgICB7e2dldFRleHQoaXRlbSl9fVxyXG4gICAgICAgIDwvbWF0LWNoZWNrYm94PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8c29mLWVycm9yIFtjb250cm9sSW52YWxpZG9dPVwiRXNJbnZhbGlkb1wiIFtsYWJlbF09XCJsYWJlbFwiIFtlcnJvcnNdPVwiZXJyb3JzXCI+PC9zb2YtZXJyb3I+XHJcbjwvZGl2PlxyXG4iXX0=