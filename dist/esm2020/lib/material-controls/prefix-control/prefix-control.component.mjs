import { Component, Input, ViewChild } from '@angular/core';
import { PrefixControlComponent } from '../../base/prefix-control/prefix-control';
import { ErrorMaterialComponent } from '../error/error.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/form-field";
import * as i2 from "../error/error.component";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/input";
export class PrefixControlMaterialComponent extends PrefixControlComponent {
    constructor() {
        super(...arguments);
        this.inputType = 'number';
    }
}
PrefixControlMaterialComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: PrefixControlMaterialComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PrefixControlMaterialComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: PrefixControlMaterialComponent, selector: "sof-prefix-control", inputs: { inputType: "inputType" }, viewQueries: [{ propertyName: "errorControl", first: true, predicate: ErrorMaterialComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <input\r\n    autocomplete=\"off\"\r\n      matInput\r\n      #inputRef=\"matInput\"\r\n      [value]=\"value\"\r\n      [type]=\"inputType\"\r\n      [placeholder]=\"placeholder\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [maxLength]=\"maxLength ? maxLength : 9999\"\r\n      [disabled]=\"disabled\"\r\n      [readonly]=\"readOnly\"\r\n    />\r\n    <span matPrefix>{{prefix}}</span>\r\n  </mat-form-field>\r\n\r\n  <sof-error\r\n    [controlInvalido]=\"EsInvalido\"\r\n    [label]=\"label\"\r\n    [errors]=\"errors\"\r\n  ></sof-error>\r\n</div>\r\n", styles: ["@charset \"UTF-8\";:host{display:flex;flex-wrap:wrap;align-items:center}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:red}:host mat-label:not(.required-label):empty:after{content:\"\\a0\"}:host mat-label.required-label:after{content:\"*\";color:red}:host mat-label.no-label{display:none}:host mat-label.side-label{margin-right:30px}:host mat-label:not(.side-label){width:100%}:host .input-container{display:flex;flex-direction:column;flex-grow:1}:host mat-label{flex-grow:0}:host mat-label.side-label{margin-top:7px}:host *{align-self:center}:host mat-form-field{flex-grow:1}:host .input-container{width:100%}:host .input-container *{width:100%}\n"], components: [{ type: i1.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i2.ErrorMaterialComponent, selector: "sof-error" }], directives: [{ type: i1.MatLabel, selector: "mat-label" }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i1.MatPrefix, selector: "[matPrefix]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: PrefixControlMaterialComponent, decorators: [{
            type: Component,
            args: [{ selector: 'sof-prefix-control', template: "<mat-label\r\n  [ngClass]=\"{\r\n    'required-label': isRequired,\r\n    'text-error': EsInvalido,\r\n    'active-label': inputRef.focused,\r\n    'no-label': noLabel\r\n  }\"\r\n  >{{ label }}</mat-label\r\n>\r\n<div class=\"input-container\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <input\r\n    autocomplete=\"off\"\r\n      matInput\r\n      #inputRef=\"matInput\"\r\n      [value]=\"value\"\r\n      [type]=\"inputType\"\r\n      [placeholder]=\"placeholder\"\r\n      (input)=\"onInput($any($event.target).value)\"\r\n      [maxLength]=\"maxLength ? maxLength : 9999\"\r\n      [disabled]=\"disabled\"\r\n      [readonly]=\"readOnly\"\r\n    />\r\n    <span matPrefix>{{prefix}}</span>\r\n  </mat-form-field>\r\n\r\n  <sof-error\r\n    [controlInvalido]=\"EsInvalido\"\r\n    [label]=\"label\"\r\n    [errors]=\"errors\"\r\n  ></sof-error>\r\n</div>\r\n", styles: ["@charset \"UTF-8\";:host{display:flex;flex-wrap:wrap;align-items:center}:host mat-label.active-label{color:#673ab7}:host mat-label.text-error{color:red}:host mat-label:not(.required-label):empty:after{content:\"\\a0\"}:host mat-label.required-label:after{content:\"*\";color:red}:host mat-label.no-label{display:none}:host mat-label.side-label{margin-right:30px}:host mat-label:not(.side-label){width:100%}:host .input-container{display:flex;flex-direction:column;flex-grow:1}:host mat-label{flex-grow:0}:host mat-label.side-label{margin-top:7px}:host *{align-self:center}:host mat-form-field{flex-grow:1}:host .input-container{width:100%}:host .input-container *{width:100%}\n"] }]
        }], propDecorators: { errorControl: [{
                type: ViewChild,
                args: [ErrorMaterialComponent]
            }], inputType: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlZml4LWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29udHJvbHMvc3JjL2xpYi9tYXRlcmlhbC1jb250cm9scy9wcmVmaXgtY29udHJvbC9wcmVmaXgtY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL21hdGVyaWFsLWNvbnRyb2xzL3ByZWZpeC1jb250cm9sL3ByZWZpeC1jb250cm9sLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLFNBQVMsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDdkYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7OztBQU9sRSxNQUFNLE9BQU8sOEJBQStCLFNBQVEsc0JBQXNCO0lBTDFFOztRQVFXLGNBQVMsR0FBc0IsUUFBUSxDQUFBO0tBRWpEOzsySEFMWSw4QkFBOEI7K0dBQTlCLDhCQUE4Qiw0SUFDOUIsc0JBQXNCLHVFQ1ZuQywyMkJBZ0NBOzJGRHZCYSw4QkFBOEI7a0JBTDFDLFNBQVM7K0JBQ0Usb0JBQW9COzhCQUtLLFlBQVk7c0JBQTlDLFNBQVM7dUJBQUMsc0JBQXNCO2dCQUV4QixTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3Q2hpbGQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFByZWZpeENvbnRyb2xDb21wb25lbnQgfSBmcm9tICcuLi8uLi9iYXNlL3ByZWZpeC1jb250cm9sL3ByZWZpeC1jb250cm9sJztcclxuaW1wb3J0IHsgRXJyb3JNYXRlcmlhbENvbXBvbmVudCB9IGZyb20gJy4uL2Vycm9yL2Vycm9yLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NvZi1wcmVmaXgtY29udHJvbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3ByZWZpeC1jb250cm9sLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9wcmVmaXgtY29udHJvbC5jb21wb25lbnQuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJlZml4Q29udHJvbE1hdGVyaWFsQ29tcG9uZW50IGV4dGVuZHMgUHJlZml4Q29udHJvbENvbXBvbmVudCAge1xyXG4gIEBWaWV3Q2hpbGQoRXJyb3JNYXRlcmlhbENvbXBvbmVudCkgZXJyb3JDb250cm9sOiBFcnJvck1hdGVyaWFsQ29tcG9uZW50XHJcbiAgXHJcbiAgQElucHV0KCkgaW5wdXRUeXBlOiAnbnVtYmVyJyB8ICd0ZXh0JyA9ICdudW1iZXInXHJcblxyXG59XHJcbiIsIjxtYXQtbGFiZWxcclxuICBbbmdDbGFzc109XCJ7XHJcbiAgICAncmVxdWlyZWQtbGFiZWwnOiBpc1JlcXVpcmVkLFxyXG4gICAgJ3RleHQtZXJyb3InOiBFc0ludmFsaWRvLFxyXG4gICAgJ2FjdGl2ZS1sYWJlbCc6IGlucHV0UmVmLmZvY3VzZWQsXHJcbiAgICAnbm8tbGFiZWwnOiBub0xhYmVsXHJcbiAgfVwiXHJcbiAgPnt7IGxhYmVsIH19PC9tYXQtbGFiZWxcclxuPlxyXG48ZGl2IGNsYXNzPVwiaW5wdXQtY29udGFpbmVyXCI+XHJcbiAgPG1hdC1mb3JtLWZpZWxkIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCI+XHJcbiAgICA8aW5wdXRcclxuICAgIGF1dG9jb21wbGV0ZT1cIm9mZlwiXHJcbiAgICAgIG1hdElucHV0XHJcbiAgICAgICNpbnB1dFJlZj1cIm1hdElucHV0XCJcclxuICAgICAgW3ZhbHVlXT1cInZhbHVlXCJcclxuICAgICAgW3R5cGVdPVwiaW5wdXRUeXBlXCJcclxuICAgICAgW3BsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVyXCJcclxuICAgICAgKGlucHV0KT1cIm9uSW5wdXQoJGFueSgkZXZlbnQudGFyZ2V0KS52YWx1ZSlcIlxyXG4gICAgICBbbWF4TGVuZ3RoXT1cIm1heExlbmd0aCA/IG1heExlbmd0aCA6IDk5OTlcIlxyXG4gICAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxyXG4gICAgICBbcmVhZG9ubHldPVwicmVhZE9ubHlcIlxyXG4gICAgLz5cclxuICAgIDxzcGFuIG1hdFByZWZpeD57e3ByZWZpeH19PC9zcGFuPlxyXG4gIDwvbWF0LWZvcm0tZmllbGQ+XHJcblxyXG4gIDxzb2YtZXJyb3JcclxuICAgIFtjb250cm9sSW52YWxpZG9dPVwiRXNJbnZhbGlkb1wiXHJcbiAgICBbbGFiZWxdPVwibGFiZWxcIlxyXG4gICAgW2Vycm9yc109XCJlcnJvcnNcIlxyXG4gID48L3NvZi1lcnJvcj5cclxuPC9kaXY+XHJcbiJdfQ==