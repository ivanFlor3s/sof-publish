import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/form-field";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/input";
export class PageSizeComponent {
    constructor() {
        this.pageSize = 10;
        this.previusPageSize = this.pageSize;
        this.sizeChangeEvent = new EventEmitter();
    }
    ngOnInit() {
    }
    onSizeChange() {
        if (this.previusPageSize != this.pageSize) {
            this.sizeChangeEvent.emit(this.pageSize);
            this.previusPageSize = this.pageSize;
        }
    }
}
PageSizeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PageSizeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PageSizeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: PageSizeComponent, selector: "app-page-size", inputs: { pageSize: "pageSize", pageSizeText: "pageSizeText" }, outputs: { sizeChangeEvent: "sizeChangeEvent" }, ngImport: i0, template: "<div class=\"form-custom-group\">\r\n  <label for=\"size\">{{ pageSizeText }}</label>\r\n  <mat-form-field>\r\n    <input\r\n      id=\"size\"\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"pageSize\"\r\n      (blur)=\"onSizeChange()\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n", styles: [":host{display:block;background-color:transparent;height:0px}:host .form-custom-group{margin-left:20px;display:flex;align-items:center;position:relative;top:-60px;z-index:100;width:40%}:host .form-custom-group label{margin-right:20px}:host .form-custom-group mat-form-field{width:40px}.mat-form-field-infix{border-top:none!important}\n"], components: [{ type: i1.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }], directives: [{ type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PageSizeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-page-size', template: "<div class=\"form-custom-group\">\r\n  <label for=\"size\">{{ pageSizeText }}</label>\r\n  <mat-form-field>\r\n    <input\r\n      id=\"size\"\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"pageSize\"\r\n      (blur)=\"onSizeChange()\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n", styles: [":host{display:block;background-color:transparent;height:0px}:host .form-custom-group{margin-left:20px;display:flex;align-items:center;position:relative;top:-60px;z-index:100;width:40%}:host .form-custom-group label{margin-right:20px}:host .form-custom-group mat-form-field{width:40px}.mat-form-field-infix{border-top:none!important}\n"] }]
        }], propDecorators: { pageSize: [{
                type: Input
            }], sizeChangeEvent: [{
                type: Output
            }], pageSizeText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1zaXplLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbnRyb2xzL3NyYy9saWIvZ3JpZC1jb250cm9sL2NvbXBvbmVudHMvcGFnZS1zaXplL3BhZ2Utc2l6ZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb250cm9scy9zcmMvbGliL2dyaWQtY29udHJvbC9jb21wb25lbnRzL3BhZ2Utc2l6ZS9wYWdlLXNpemUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFPL0UsTUFBTSxPQUFPLGlCQUFpQjtJQUw5QjtRQU9XLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDL0Isb0JBQWUsR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFBO1FBRTdCLG9CQUFlLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUE7S0FjN0U7SUFYQyxRQUFRO0lBQ1IsQ0FBQztJQUVELFlBQVk7UUFDVixJQUFHLElBQUksQ0FBQyxlQUFlLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBQztZQUN2QyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7WUFDeEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFBO1NBQ3JDO0lBQ0gsQ0FBQzs7K0dBaEJVLGlCQUFpQjttR0FBakIsaUJBQWlCLHNLQ1A5QiwrU0FZQTs0RkRMYSxpQkFBaUI7a0JBTDdCLFNBQVM7K0JBQ0UsZUFBZTs4QkFNaEIsUUFBUTtzQkFBaEIsS0FBSztnQkFHSSxlQUFlO3NCQUF4QixNQUFNO2dCQUNFLFlBQVk7c0JBQXBCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1wYWdlLXNpemUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wYWdlLXNpemUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3BhZ2Utc2l6ZS5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQYWdlU2l6ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIHBhZ2VTaXplOiBudW1iZXIgPSAxMDtcclxuICBwcmV2aXVzUGFnZVNpemU6IG51bWJlciA9IHRoaXMucGFnZVNpemVcclxuICBcclxuICBAT3V0cHV0KCkgc2l6ZUNoYW5nZUV2ZW50OiBFdmVudEVtaXR0ZXI8bnVtYmVyPiA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpXHJcbiAgQElucHV0KCkgcGFnZVNpemVUZXh0OiBzdHJpbmcgXHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgb25TaXplQ2hhbmdlKCl7XHJcbiAgICBpZih0aGlzLnByZXZpdXNQYWdlU2l6ZSAhPSB0aGlzLnBhZ2VTaXplKXtcclxuICAgICAgdGhpcy5zaXplQ2hhbmdlRXZlbnQuZW1pdCh0aGlzLnBhZ2VTaXplKVxyXG4gICAgICB0aGlzLnByZXZpdXNQYWdlU2l6ZSA9IHRoaXMucGFnZVNpemVcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxufVxyXG4iLCI8ZGl2IGNsYXNzPVwiZm9ybS1jdXN0b20tZ3JvdXBcIj5cclxuICA8bGFiZWwgZm9yPVwic2l6ZVwiPnt7IHBhZ2VTaXplVGV4dCB9fTwvbGFiZWw+XHJcbiAgPG1hdC1mb3JtLWZpZWxkPlxyXG4gICAgPGlucHV0XHJcbiAgICAgIGlkPVwic2l6ZVwiXHJcbiAgICAgIHR5cGU9XCJudW1iZXJcIlxyXG4gICAgICBtYXRJbnB1dFxyXG4gICAgICBbKG5nTW9kZWwpXT1cInBhZ2VTaXplXCJcclxuICAgICAgKGJsdXIpPVwib25TaXplQ2hhbmdlKClcIlxyXG4gICAgLz5cclxuICA8L21hdC1mb3JtLWZpZWxkPlxyXG48L2Rpdj5cclxuIl19